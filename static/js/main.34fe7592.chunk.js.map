{"version":3,"sources":["serviceWorker.ts","interfaces/Answer.ts","components/Auth/AuthFormContainer.tsx","api/index.ts","components/Footer/Footer.tsx","components/Footer/FooterContainer.tsx","components/MainSearch/MainSearchInput.tsx","components/Auth/AuthContainer.tsx","components/Pages/AuthPage.tsx","components/Input/InputContainer.tsx","components/MainSearch/MainSearch.tsx","components/MainSearch/MainSearchSelect.tsx","components/MainSearch/MainSearchTagContainer.tsx","components/MainSearch/MainSearchTitle.tsx","components/Profile/ProfileContainer.tsx","components/MainSearch/MainSearchContainer.tsx","components/Pages/MainPage.tsx","components/Mentor/MentorContainer.tsx","components/Pages/MentorPage.tsx","components/List/QuestionList.tsx","components/Profile/ContentPages/Home.tsx","components/List/AnswerList.tsx","components/Profile/ContentPages/MentorPanel.tsx","components/Dialog/MentorRegistration.tsx","components/Profile/ContentPages/Settings.tsx","components/Profile/ProfileContent.tsx","components/Profile/ProfileTabList.tsx","interfaces/Question.ts","components/Pages/ProfilePage.tsx","components/NavBar/NavBarMentorStatus.tsx","components/Result/Result.tsx","components/Result/ResultContainer.tsx","components/Pages/ResultPage.tsx","components/MainContent/MainContent.tsx","components/NavBar/NavBarToolbar.tsx","components/NavBar/NavBar.tsx","components/NavBar/AccountMenuSummary.tsx","components/NavBar/NavBarAccount.tsx","components/NavBar/NavBarListQuestions.tsx","components/NavBar/NavBarMentorSignUp.tsx","components/AppContainer/AppContainer.tsx","components/App/App.tsx","themes/mainTheme.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","AnswerStatusTypes","SignInState","ResetPasswordState","SignUpState","getQuestionsByUserId","userId","callback","console","log","axios","method","url","concat","then","result","data","catch","err","getAnswersByUserId","getQuestionByQuestionId","questionId","signal","cancelToken","token","getAnswersByQuestionId","Footer","_this$props","this","props","classes","theme","toggleTheme","react","className","root","toggleThemeButtonContainer","index_es","onClick","ThemeTypes","LIGHT","FlashOn_default","a","lightIcon","DARK","FlashOff_default","darkIcon","React","withStyles","display","marginLeft","marginRight","marginBottom","FooterContainer","components_Footer_Footer","position","bottom","width","InputState","signInText","_signInText","Object","defineProperty","SIGNED_IN","SIGNED_OUT","SIGNING_IN","signUpText","_signUpText","SIGNED_UP","SIGNING_UP","resetPasswordText","_resetPasswordText","NO_REQUEST","SENDING_REQUEST","RESQUEST_SENT","AuthFormContainer","state","nickname","email","password","loading","currentState","states","signIn","toggleText","linkText","errorText","signUp","resetPassword","handleNicknameChange","event","_this","setState","target","value","handleEmailChange","handlePasswordChange","handleSignIn","_this$state","params","id","avatar_url","userEmail","phone","is_mentor","tags","response","error","_this$state2","userNickname","submitForm","ev","preventDefault","_this$state3","handleChangeAuthDialogState","newState","showPasswordReset","toggleSignUp","getActiveText","s","activeText","_this2","_this$state4","activeState","authForm","onSubmit","fullWidth","length","required","formControl","htmlFor","autoFocus","type","autoComplete","onChange","input","style","variant","color","extraActions","role","forgotPassword","separator","backgroundColor","palette","background","paper","height","flexWrap","borderWidth","borderStyle","borderColor","primary","main","borderRadius","paddingTop","spacing","unit","paddingLeft","paddingRight","textAlign","padding","&:hover","cursor","hidden","border","text","&::-webkit-autofill","default","AuthContainer","item","xs","sm","md","lg","Auth_AuthFormContainer","marginTop","AuthPage","handleFinishLoading","container","justify","Auth_AuthContainer","InputContainer","children","inputContainer","inputLeftPadding","light","boxShadow","zIndex","margin","SubmissionState","rowCounts","_rowCounts","DEFAULT","min","EXPANDED","MainSearchInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputRef","disableInputIcon","handleHeightChange","inputState","setInputStateToExpanded","_handleChange","handleChange","_this$props2","content","handleSubmit","react_textarea_autosize_esm_browser","ref","onHeightChange","minRows","name","placeholder","title","placement","inputIcon","disabled","tabIndex","Send_default","paddingBottom","wordWrap","outline","resize","fontFamily","&::placeholder","opacity","inputElementsContainer","inputPadding","flex","OpacityContainer","posed","div","transition","duration","visible","MainSearchSelect","selectValue","handleSelectChange","stateAndHelpers","handleSelectTag","inputValue","handleSelectValueChange","selectedTags","downshift_esm","itemToString","_ref","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","clearSelection","inputValueLower","toLocaleLowerCase","inputProps","onBlur","assign","pose","selectMenu","elevation","filter","tag","includes","nameLower","slice","map","t","index","classnames","listItem","highlighted","key","selectedTagsContainer","maxHeight","overflowY","MainSearchTagContainer","getTagById","len","i","handleDelete","sid","handleDeleteTag","selectedTag","label","onDelete","deleteIcon","Clear_default","MainSearchTitle","TabTypes","TRANSITION_DURATION","LongOpacityContainer","HeightContainer","ease","expanded","stiffness","MainSearch","heightRef","addQuestion","setSubmissionStateToSubmitted","alert","toggleInputState","prevState","setInputStateToDefault","history","submissionState","SUBMITTED","setTimeout","push","setHeightRef","current","tagId","toConsumableArray","splice","indexOf","handleChangeContent","handleChangeTitle","MainSearch_OpacityContainer","Input_InputContainer","MainSearch_MainSearchTitle","onPoseComplete","MainSearch_MainSearchInput","MainSearch_MainSearchSelect","MainSearch_MainSearchTagContainer","withRouter","tagSelect","selectPadding","link","textDecoration","searchButton","textTransform","fontWeight","fontSize","letterSpacing","MainSearchContainer","components_MainSearch_MainSearch","MainPage","MainSearch_MainSearchContainer","MentorContainer","MentorPage","Mentor_MentorContainer","QuestionList","handleLink","questions","table","tableHeader","tableBody","sort","b","Date","created_at","question","createdAt","tableRow","is_dirty","dirty","hover","toLocaleDateString","toLocaleTimeString","substr","chip","question_status","status","lighten","darken","loadingContainer","Home","user","contentContainer","List_QuestionList","divider","AnswerList","answers","answer","question_id","selected","toString","MentorPanel","_handleDeleteTag","editUser","newTags","newUser","objectSpread","_handleSelectTag","r","e","toggleMentorStatus","_this$props3","refreshAnswers","_this$props4","setAnswers","_this$props5","List_AnswerList","MentorRegistration","closeDialog","open","onClose","dialog","maxWidth","size","submitButton","TIMEZONES","moment","tz","names","Settings","nicknameText","passwordText","passwordConfirmText","passwordErrorText","mentorDialogOpen","setTimeZone","handleTextChange","_changeNickname","_changePassword","toggleMentorDialog","openMentorDialog","closeMentorDialog","userSettings","Dialog_MentorRegistration","control","checked","themeType","initialInputValue","timeZone","labelId","timezone","timezoneLower","ProfileContent","getTabContent","currentTab","setQuestions","rest","objectWithoutProperties","ContentPages_Home","ContentPages_MentorPanel","ContentPages_Settings","full","ProfileTabList","handleClick","tabs","profileTabList","isNaN","parseInt","tab","listItemHoverable","borderLeftWidth","borderLeftColor","borderLeftStyle","top","ResultStatusTypes","ProfileContainer","uploadFile","file","dataset","directUploadUrl","DirectUpload","create","blob","dir","avatar","signed_id","changeCurrentTab","newTab","click","isNotLoading","handleStartLoading","isLoading","handleAvatarChange","files","getTabs","userTabs","values","profileHeader","profileAvatarInputContainer","src","accept","data-direct-upload-url","profileHeaderText","Profile_ProfileTabList","Profile_ProfileContent","_profileAvatarInputCo","breakpoints","up","transitions","easing","sharp","shortest","changeAvatarText","fontVariant","flexDirection","ProfilePage","Profile_ProfileContainer","MentorQueueStatus","resultStatusText","NOT_SUBMITTED","ACCEPTED","ANSWERED","RESOLVED","Result","answerText","_handleAnswerChange","_handleSubmit","submitIsDisabled","res","_handleAcceptAnswer","aid","updateQuestionAnswer","_handleRejectAnswer","mentor_id","resultContent","readOnly","align","ans","resultHeader","answerActionsContainer","answerActions","Check_default","rejectAction","Close_default","answerAccepted","answerRejected","ResultContainer","CancelToken","source","getQuestionData","qid","newQuestions","qIndex","findIndex","q","qstatus","newAnswers","aIndex","cancel","ResultContainer_OpacityContainer","vCenter","components_Result_Result","ResultPage","Result_ResultContainer","MainContent","handleFinishedLoading","_this3","switchContainer","react_router","exact","path","render","Pages_MainPage","to","Pages_AuthPage","Pages_ProfilePage","profilePage","Pages_MentorPage","Pages_ResultPage","resultPage","previous","NavBarToolbar","logoColor","toolbar","react_router_dom","appBarLogo","marginLeftAuto","NavBar","scrollTop","addEventListener","document","documentElement","localIsTransparent","isTransparent","classNames","appBar","appBarTransparent","NavBar_NavBarToolbar","drawer","leavingScreen","appBarShift","addressContainer","& > p,h3,span","& > h3","addressLabel","AccountMenuSummary","userInfo","userNickName","userStatus","NavBarAccount","anchorEl","handleClose","handleSignOut","navBarAccountContainers","whiteText","pathname","userAccount","accountMenu","menuList","NavBar_AccountMenuSummary","accountMenuButtonContainer","& .root:hover","accountMenuButton","& *","verticalDivider","NavBarListQuestions","unread","replace","badgeContent","List_default","NavBarMentorSignUp","School_default","queueButtonText","_queueButtonText","NOT_IN_QUEUE","IN_QUEUE","BUSY","queueButtonClass","_queueButtonClass","NavBarMentorStatus","interval","pending","queueStatus","timeInQueue","startTimer","setInterval","stopAndClearTimer","clearInterval","setToInQueue","setToNotInQueue","setToBusy","setQueueStatus","_setStatusMap","finally","nextStatus","queueLabel","queueTimer","pendingBtn","Settings_default","pendingIcon","@keyframes spin","from","transform","queueDefault","queueReady","queueBusy","animationName","App","pubNub","finishLoading","navBarHandleClick","navBarAnchorEl","currentTarget","navBarHandleClose","undefined","pubNubSub","getUserData","channels","baseChannel","mentorChannel","clientChannel","subscribe","getMessage","msg","handlePubNubMsgAsClient","handlePubNubMsgAsMentor","message","keys","snackbarQuestionId","snackbarOpen","snackbarText","reload","PASSED","handleSnackbarClose","pn_messages","PubNubReact","publishKey","process","subscribeKey","init","assertThisInitialized","unsubscribe","react_default","createElement","Fragment","components_NavBar_NavBar","NavBar_NavBarMentorStatus","NavBar_NavBarListQuestions","NavBar_NavBarMentorSignUp","NavBar_NavBarAccount","components_MainContent_MainContent","anchorOrigin","vertical","horizontal","autoHideDuration","snackbarContent","snackbarMessage","action","Footer_FooterContainer","Component","minHeight","AppContainer","getAllSettings","defaultNumberSettings","defaultStringSettings","localSetting","localStorage","getItem","asNumber","newSettings","setItem","currentTheme","typeString","createMuiTheme","purple","secondary","pink","red","contrastThreshold","tonalOffset","typography","useNextVariants","mainTheme","core_styles","components_App_App","defaults","withCredentials","interceptors","request","use","req","Promise","reject","devApp","components_AppContainer_AppContainer","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34fe7592.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export enum AnswerStatusTypes {\r\n  SELECTED = 'SELECTED',\r\n  PASSED = 'PASSED'\r\n}\r\n\r\nexport interface IAnswer {\r\n  content: string;\r\n  created_at: string;\r\n  id: number;\r\n  question_id: number;\r\n  selected: boolean;\r\n  updated_at: string;\r\n  user_id: number;\r\n}","import * as React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IUser } from '../../interfaces/User';\r\nimport axios from 'axios';\r\n\r\ninterface IFormState {\r\n  toggleText: string;\r\n  linkText: string;\r\n  errorText: string;\r\n  state: SignInState | SignUpState | ResetPasswordState | null;\r\n}\r\n\r\nenum SignInState {\r\n  SIGNED_IN,\r\n  SIGNED_OUT,\r\n  SIGNING_IN,\r\n}\r\n\r\nenum ResetPasswordState {\r\n  NO_REQUEST,\r\n  SENDING_REQUEST,\r\n  RESQUEST_SENT,\r\n}\r\n\r\nenum SignUpState {\r\n  SIGNED_UP,\r\n  SIGNING_UP,\r\n  SIGNED_OUT,\r\n}\r\n\r\nconst signInText: { [key in SignInState]: string } = {\r\n  [SignInState.SIGNED_IN]: 'Logged In',\r\n  [SignInState.SIGNED_OUT]: 'Log In',\r\n  [SignInState.SIGNING_IN]: 'Logging In',\r\n};\r\n\r\nconst signUpText: { [key in SignUpState]: string } = {\r\n  [SignUpState.SIGNED_UP]: 'Registered',\r\n  [SignUpState.SIGNING_UP]: 'Registering',\r\n  [SignUpState.SIGNED_OUT]: 'Register',\r\n};\r\n\r\nconst resetPasswordText: { [key in ResetPasswordState]: string } = {\r\n  [ResetPasswordState.NO_REQUEST]: 'Reset Password',\r\n  [ResetPasswordState.SENDING_REQUEST]: 'Sending',\r\n  [ResetPasswordState.RESQUEST_SENT]: 'Password Reset Sent',\r\n};\r\n\r\nexport type AuthDialogState = 'signIn' | 'signUp' | 'resetPassword';\r\n\r\nexport interface IAuthFormContainerProps extends WithStyles<typeof styles> {\r\n  handleSignIn: (user: IUser) => void;\r\n}\r\n\r\nexport interface IAuthFormContainerState {\r\n  nickname: string;\r\n  email: string;\r\n  password: string;\r\n  loading: boolean;\r\n  currentState: AuthDialogState;\r\n  states: { [key in AuthDialogState]: IFormState };\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: '10px',\r\n    paddingTop: theme.spacing.unit * 3,\r\n    paddingLeft: theme.spacing.unit * 3,\r\n    paddingRight: theme.spacing.unit * 3,\r\n  },\r\n  authForm: {\r\n    width: '100%',\r\n  },\r\n  extraActions: {\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: theme.spacing.unit,\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  forgotPassword: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n  signUp: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  separator: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: theme.palette.text.primary,\r\n    '&::-webkit-autofill': {\r\n      color: theme.palette.text.primary,\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nclass AuthFormContainer extends React.Component<\r\n  IAuthFormContainerProps,\r\n  IAuthFormContainerState\r\n  > {\r\n  public state = {\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    loading: false,\r\n    currentState: 'signIn' as AuthDialogState,\r\n    states: {\r\n      signIn: {\r\n        toggleText: \"Don't have an account?\",\r\n        linkText: 'Register',\r\n        errorText: '',\r\n        state: SignInState.SIGNED_OUT,\r\n      },\r\n      signUp: {\r\n        toggleText: 'Already have an account?',\r\n        linkText: 'Log In',\r\n        errorText: '',\r\n        state: SignUpState.SIGNED_OUT,\r\n      },\r\n      resetPassword: {\r\n        toggleText: 'Remember your password?',\r\n        linkText: 'Log In',\r\n        errorText: '',\r\n        state: ResetPasswordState.NO_REQUEST,\r\n      },\r\n    },\r\n  };\r\n\r\n  public handleNicknameChange = (event: any) => {\r\n    this.setState({ nickname: event.target.value });\r\n  };\r\n\r\n  public handleEmailChange = (event: any) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  public handlePasswordChange = (event: any) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  public signIn = () => {\r\n    console.log('[signIn]');\r\n    const { handleSignIn } = this.props;\r\n    const { email, password, states } = this.state;\r\n    const { signIn } = states;\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: '/login',\r\n      params: {\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        console.log('[signIn].then');\r\n        const { data } = result;\r\n        const {\r\n          id,\r\n          avatar_url,\r\n          nickname,\r\n          email: userEmail,\r\n          phone,\r\n          is_mentor,\r\n          tags\r\n        } = data;\r\n        handleSignIn({\r\n          id,\r\n          nickname,\r\n          email: userEmail,\r\n          phone,\r\n          avatar_url,\r\n          is_mentor,\r\n          tags\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          const { error } = err.response.data;\r\n          signIn.state = SignInState.SIGNED_OUT;\r\n          signIn.errorText = error;\r\n          this.setState({ states });\r\n        }\r\n      });\r\n  };\r\n\r\n  public signUp = () => {\r\n    const { handleSignIn } = this.props;\r\n    const { nickname, email, password, states } = this.state;\r\n    const { signUp } = states;\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: '/register',\r\n      params: {\r\n        nickname,\r\n        email,\r\n        password,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        const { data } = result;\r\n        const {\r\n          id,\r\n          avatar_url,\r\n          nickname: userNickname,\r\n          email: userEmail,\r\n          phone,\r\n          is_mentor,\r\n          tags\r\n        } = data;\r\n        handleSignIn({\r\n          id,\r\n          nickname: userNickname,\r\n          email: userEmail,\r\n          phone,\r\n          avatar_url,\r\n          is_mentor,\r\n          tags\r\n        });\r\n        signUp.state = SignUpState.SIGNED_UP;\r\n        this.setState({ states });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          const { error } = err.response.data;\r\n          signUp.state = SignUpState.SIGNED_OUT;\r\n          signUp.errorText = error;\r\n          this.setState({ states });\r\n        }\r\n      });\r\n  };\r\n\r\n  public submitForm = (ev?: any) => {\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n    const { currentState, states } = this.state;\r\n    const { signIn, signUp } = states;\r\n    if (currentState === 'signIn') {\r\n      signIn.state = SignInState.SIGNING_IN;\r\n      this.setState({ states }, () => {\r\n        this.signIn();\r\n      });\r\n    }\r\n    if (currentState === 'signUp') {\r\n      signUp.state = SignUpState.SIGNING_UP;\r\n      this.setState({ states }, () => {\r\n        this.signUp();\r\n      });\r\n    }\r\n    // if (authDialogState === 'resetPassword') {\r\n    //   this.sendPasswordReset();\r\n    // }\r\n  };\r\n\r\n  public handleChangeAuthDialogState = (newState: AuthDialogState) => {\r\n    this.setState({ currentState: newState });\r\n  };\r\n\r\n  public showPasswordReset = () => {\r\n    this.handleChangeAuthDialogState('resetPassword');\r\n  };\r\n\r\n  public toggleSignUp = () => {\r\n    const { currentState } = this.state;\r\n    currentState === 'signIn'\r\n      ? this.handleChangeAuthDialogState('signUp')\r\n      : this.handleChangeAuthDialogState('signIn');\r\n  };\r\n\r\n  public getActiveText = (\r\n    s: SignInState | SignUpState | ResetPasswordState | null,\r\n    a: AuthDialogState\r\n  ) => {\r\n    let activeText = '';\r\n    if (s !== null) {\r\n      switch (a) {\r\n        case 'signIn':\r\n          activeText = signInText[s];\r\n          break;\r\n        case 'signUp':\r\n          activeText = signUpText[s];\r\n          break;\r\n        case 'resetPassword':\r\n          activeText = resetPasswordText[s];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      console.log('aaaa');\r\n    }\r\n    return activeText;\r\n  };\r\n\r\n  public render() {\r\n    const { currentState, email, nickname, password, states } = this.state;\r\n    const { classes } = this.props;\r\n    const activeState = states[currentState].state;\r\n    const errorText = states[currentState].errorText;\r\n    const toggleText = states[currentState].toggleText;\r\n    const linkText = states[currentState].linkText;\r\n    const activeText = this.getActiveText(activeState, currentState);\r\n    return (\r\n      <div className={classes.root}>\r\n        <form\r\n          className={classes.authForm}\r\n          onSubmit={(ev) => this.submitForm(ev)}\r\n          id=\"auth-form\"\r\n        >\r\n          {currentState === 'signUp' && (\r\n            <FormControl\r\n              fullWidth={true}\r\n              error={errorText.length > 0}\r\n              required={true}\r\n              className={classes.formControl}\r\n            >\r\n              <InputLabel htmlFor=\"inputNickname\">Nickname</InputLabel>\r\n              <Input\r\n                id=\"inputNickname\"\r\n                value={nickname}\r\n                autoFocus={true}\r\n                type={'text'}\r\n                autoComplete={'username'}\r\n                onChange={this.handleNicknameChange}\r\n              />\r\n              <FormHelperText id=\"inputEmailError\">{errorText}</FormHelperText>\r\n            </FormControl>\r\n          )}\r\n          <FormControl\r\n            required={true}\r\n            fullWidth={true}\r\n            className={classes.formControl}\r\n            error={errorText.length > 0}\r\n          >\r\n            <InputLabel htmlFor=\"inputEmail\">Email Address</InputLabel>\r\n            <Input\r\n              id=\"inputEmail\"\r\n              value={email}\r\n              autoFocus={true}\r\n              type={'email'}\r\n              autoComplete={'email'}\r\n              onChange={this.handleEmailChange}\r\n              className={classes.input}\r\n            />\r\n            <FormHelperText id=\"inputEmailError\">{errorText}</FormHelperText>\r\n          </FormControl>\r\n          {currentState !== 'resetPassword' && (\r\n            <FormControl\r\n              required={true}\r\n              fullWidth={true}\r\n              className={classes.formControl}\r\n              error={errorText.length > 0}\r\n            >\r\n              <InputLabel htmlFor=\"inputPassword\">Password</InputLabel>\r\n              <Input\r\n                id=\"inputPassword\"\r\n                value={password}\r\n                type={'password'}\r\n                autoComplete={'current-password'}\r\n                onChange={this.handlePasswordChange}\r\n              />\r\n              <FormHelperText id=\"inputPasswordError\">\r\n                {errorText}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          )}\r\n          <button style={{ display: 'none' }} type=\"submit\" />\r\n        </form>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth={true}\r\n          onClick={this.submitForm}\r\n        >\r\n          {activeText}\r\n        </Button>\r\n        <div className={classes.extraActions}>\r\n          {currentState !== 'resetPassword' && (\r\n            <>\r\n              <div\r\n                role=\"button\"\r\n                className={classes.forgotPassword}\r\n                onClick={this.showPasswordReset}\r\n              >\r\n                <Typography color=\"primary\" variant={'caption'}>\r\n                  Forgot Password?\r\n                </Typography>\r\n              </div>\r\n              <Typography className={classes.separator} variant={'caption'}>\r\n                &#8226;\r\n              </Typography>\r\n            </>\r\n          )}\r\n          <Typography variant={'caption'}>{toggleText}</Typography>\r\n          <div\r\n            role=\"button\"\r\n            className={classes.signUp}\r\n            onClick={this.toggleSignUp}\r\n          >\r\n            <Typography color=\"primary\" variant={'caption'}>\r\n              &nbsp;{linkText}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AuthFormContainer);\r\n","import axios, { CancelTokenSource } from 'axios';\r\n\r\nimport { IAnswer } from '../interfaces/Answer';\r\nimport { IQuestion } from '../interfaces/Question';\r\n\r\nconst getQuestionsByUserId = (userId: number, callback: (questions: IQuestion[]) => void) => {\r\n  console.log('[getQuestionsByUserId]');\r\n  axios({\r\n    method: 'get',\r\n    url: `/api/users/${userId}/questions`\r\n  })\r\n    .then((result) => {\r\n      const { data } = result;\r\n      callback(data);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getAnswersByUserId = (userId: number, callback: (answers: IAnswer[]) => void) => {\r\n  console.log('[getAnswersByUserId]');\r\n  axios({\r\n    method: 'get',\r\n    url: `/api/users/${userId}/answers`,\r\n  })\r\n    .then((result) => {\r\n      const { data } = result;\r\n      callback(data);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getQuestionByQuestionId = (questionId: number, callback: (question: IQuestion) => void, signal?: CancelTokenSource) => {\r\n  console.log('[getQuestionByQuestionId]');\r\n  axios({\r\n    method: 'get',\r\n    url: `/api/questions/${questionId}`,\r\n    cancelToken: signal && signal.token\r\n  })\r\n    .then((result) => {\r\n      const { data } = result;\r\n      callback(data);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nconst getAnswersByQuestionId = (questionId: number, callback: (answers: IAnswer[]) => void) => {\r\n  console.log('[getAnswersByQuestionId]');\r\n  axios({\r\n    method: 'get',\r\n    url: `/api/questions/${questionId}/answers`\r\n  })\r\n    .then((result) => {\r\n      const { data } = result;\r\n      callback(data);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport { getQuestionsByUserId, getAnswersByUserId, getQuestionByQuestionId, getAnswersByQuestionId };","import * as React from 'react';\r\n\r\nimport {\r\n  IconButton,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport FlashOff from '@material-ui/icons/FlashOff';\r\nimport FlashOn from '@material-ui/icons/FlashOn';\r\nimport { ThemeTypes } from '../AppContainer/AppContainer';\r\n\r\nexport interface IFooterProps extends WithStyles<typeof styles> {\r\n  theme: ThemeTypes;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport interface IFooterState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toggleThemeButtonContainer: {\r\n    marginLeft: 'auto',\r\n    marginRight: '5px',\r\n    marginBottom: '5px',\r\n  },\r\n});\r\n\r\nclass Footer extends React.Component<IFooterProps, IFooterState> {\r\n  public render() {\r\n    const { classes, theme, toggleTheme } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.toggleThemeButtonContainer}>\r\n          <IconButton onClick={toggleTheme}>\r\n            {theme === ThemeTypes.LIGHT && (\r\n              <FlashOn className={classes.lightIcon} />\r\n            )}\r\n            {theme === ThemeTypes.DARK && (\r\n              <FlashOff className={classes.darkIcon} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { ThemeTypes } from '../AppContainer/AppContainer';\r\nimport Footer from './Footer';\r\n\r\nexport interface IFooterContainerProps extends WithStyles<typeof styles> {\r\n  theme: ThemeTypes;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport interface IFooterContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nclass FooterContainer extends React.Component<\r\n  IFooterContainerProps,\r\n  IFooterContainerState\r\n> {\r\n  public render() {\r\n    const { classes, theme, toggleTheme } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Footer theme={theme} toggleTheme={toggleTheme} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FooterContainer);\r\n","import * as React from 'react';\r\n\r\nimport { IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\r\n\r\nimport Send from '@material-ui/icons/Send';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nexport interface IMainSearchInputProps extends WithStyles<typeof styles> {\r\n  content: string;\r\n  inputState: InputState;\r\n  handleChange: (content: string) => void;\r\n  handleSubmit: () => void;\r\n  setInputStateToDefault: () => void;\r\n  setInputStateToExpanded: () => void;\r\n  toggleInputState: () => void;\r\n}\r\n\r\nexport interface IMainSearchInputState {\r\n  disableInputIcon: boolean;\r\n}\r\n\r\nenum InputState {\r\n  DEFAULT,\r\n  EXPANDED,\r\n}\r\n\r\nconst rowCounts: { [key in InputState]: { min: number } } = {\r\n  [InputState.DEFAULT]: {\r\n    min: 1,\r\n  },\r\n  [InputState.EXPANDED]: {\r\n    min: 8,\r\n  },\r\n};\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    paddingTop: '16.5px',\r\n    paddingBottom: '16.5px',\r\n    color: theme.palette.text.primary,\r\n    wordWrap: 'break-word',\r\n    outline: 'none',\r\n    resize: 'none',\r\n    width: 'calc(100% - 24px)',\r\n    fontFamily: 'monospace',\r\n    '&::placeholder': {\r\n      opacity: 0.65,\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  inputIcon: {\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n    },\r\n  },\r\n  inputElementsContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  inputPadding: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    paddingLeft: '20px',\r\n  },\r\n});\r\n\r\nclass MainSearchInput extends React.Component<\r\n  IMainSearchInputProps,\r\n  IMainSearchInputState\r\n  > {\r\n  public inputRef: HTMLTextAreaElement | null;\r\n  public state = {\r\n    disableInputIcon: false,\r\n  };\r\n  constructor(props: IMainSearchInputProps) {\r\n    super(props);\r\n    this.state = {\r\n      disableInputIcon: false,\r\n    };\r\n    this.inputRef = null;\r\n  }\r\n\r\n  public handleHeightChange = (height: any) => {\r\n    const { inputState, setInputStateToExpanded } = this.props;\r\n    if (this.inputRef) {\r\n      if (inputState === InputState.DEFAULT && height > 15) {\r\n        setInputStateToExpanded();\r\n      }\r\n    }\r\n  };\r\n\r\n  public _handleChange = (ev: any) => {\r\n    this.props.handleChange(ev.target.value);\r\n  };\r\n\r\n  public render() {\r\n    const { disableInputIcon } = this.state;\r\n    const { classes, content, handleSubmit, inputState } = this.props;\r\n    return (\r\n      <>\r\n        <TextareaAutosize\r\n          inputRef={(ref) => (this.inputRef = ref)}\r\n          className={classes.input}\r\n          onHeightChange={(height) => this.handleHeightChange(height)}\r\n          minRows={rowCounts[inputState].min}\r\n          name=\"question\"\r\n          placeholder=\"Ask a Question\"\r\n          autoFocus={true}\r\n          required={true}\r\n          value={content}\r\n          onChange={this._handleChange}\r\n        />\r\n        <Tooltip title={'Submit Question'} placement=\"right\">\r\n          <IconButton\r\n            className={classes.inputIcon}\r\n            onClick={handleSubmit}\r\n            disabled={disableInputIcon}\r\n            tabIndex={-1}\r\n          >\r\n            <Send />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainSearchInput);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport AuthFormContainer from './AuthFormContainer';\r\nimport { IUser } from '../../interfaces/User';\r\n\r\nexport interface IAuthContainerProps extends WithStyles<typeof styles> {\r\n  handleSignIn: (user: IUser) => void;\r\n}\r\n\r\nexport interface IAuthContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\nclass AuthContainer extends React.Component<\r\n  IAuthContainerProps,\r\n  IAuthContainerState\r\n> {\r\n  public render() {\r\n    const { classes, handleSignIn } = this.props;\r\n    return (\r\n      <Grid item={true} xs={10} sm={6} md={4} lg={4} className={classes.root}>\r\n        <AuthFormContainer handleSignIn={handleSignIn} />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AuthContainer);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport AuthContainer from '../Auth/AuthContainer';\r\nimport { IUser } from '../../interfaces/User';\r\n\r\nexport interface IAuthPageProps extends WithStyles<typeof styles> {\r\n  handleFinishLoading: () => void;\r\n  handleSignIn: (user: IUser) => void;\r\n}\r\n\r\nexport interface IAuthPageState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: '-90px',\r\n    display: 'flex',\r\n  },\r\n});\r\n\r\nclass AuthPage extends React.Component<IAuthPageProps, IAuthPageState> {\r\n  public componentDidMount() {\r\n    this.props.handleFinishLoading();\r\n  }\r\n  public render() {\r\n    const { classes, handleSignIn } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} justify={'center'}>\r\n          <AuthContainer handleSignIn={handleSignIn} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AuthPage);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\n\r\nexport interface IInputContainerProps extends WithStyles<typeof styles> {\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface IInputContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  inputLeftPadding: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    paddingLeft: '20px',\r\n  },\r\n  inputContainer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    borderColor: theme.palette.primary.light,\r\n    boxShadow: 'none',\r\n    borderRadius: '24px',\r\n    zIndex: 3,\r\n    margin: '8px auto',\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nclass InputContainer extends React.Component<\r\n  IInputContainerProps,\r\n  IInputContainerState\r\n> {\r\n  public render() {\r\n    const { children, classes } = this.props;\r\n    return (\r\n      <div className={classes.inputContainer}>\r\n        <div className={classes.inputLeftPadding}>{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(InputContainer);\r\n","import * as React from 'react';\r\n\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport InputContainer from '../Input/InputContainer';\r\nimport MainSearchInput from './MainSearchInput';\r\nimport MainSearchSelect from './MainSearchSelect';\r\nimport MainSearchTagContainer from './MainSearchTagContainer';\r\nimport MainSearchTitle from './MainSearchTitle';\r\nimport axios from 'axios';\r\nimport posed from 'react-pose';\r\n\r\nexport interface IMainSearchProps extends RouteComponentProps, WithStyles {\r\n  addQuestion: (question: IQuestion) => void;\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMainSearchState {\r\n  content: string;\r\n  title: string;\r\n  inputState: InputState;\r\n  submissionState: SubmissionState;\r\n  selectedTags: number[];\r\n}\r\n\r\nenum InputState {\r\n  DEFAULT,\r\n  EXPANDED,\r\n}\r\n\r\nenum SubmissionState {\r\n  DEFAULT,\r\n  SUBMITTED,\r\n}\r\n\r\nconst TRANSITION_DURATION = 750;\r\n\r\nconst OpacityContainer = posed.div({\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1 },\r\n});\r\n\r\nconst LongOpacityContainer = posed.div({\r\n  hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\r\n  visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\r\n});\r\n\r\nconst HeightContainer = posed.div({\r\n  default: {\r\n    height: '50px',\r\n    transition: {\r\n      duration: 300,\r\n      ease: 'easeOut',\r\n    },\r\n  },\r\n  expanded: {\r\n    height: '155px',\r\n    transition: {\r\n      type: 'spring',\r\n      stiffness: 150,\r\n    },\r\n  },\r\n});\r\n\r\nexport type InputStates = 'default' | 'expanded';\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  tagSelect: {\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n  },\r\n  selectPadding: {\r\n    paddingRight: '12px',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n  searchButton: {\r\n    padding: '15px 30px 14px',\r\n    height: '60px',\r\n    textTransform: 'uppercase',\r\n    fontWeight: 'bold',\r\n    fontSize: '1rem',\r\n    borderRadius: '0px',\r\n    letterSpacing: 2,\r\n  },\r\n  selectedTagsContainer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n\r\nclass MainSearch extends React.Component<IMainSearchProps, IMainSearchState> {\r\n  public heightRef: React.RefObject<any>;\r\n\r\n  constructor(props: IMainSearchProps) {\r\n    super(props);\r\n    this.state = {\r\n      content: '',\r\n      title: '',\r\n      inputState: InputState.DEFAULT,\r\n      submissionState: SubmissionState.DEFAULT,\r\n      selectedTags: [] as number[],\r\n    };\r\n    this.heightRef = React.createRef();\r\n  }\r\n\r\n  public handleSubmit = (ev?: any) => {\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n    const { content, title, selectedTags } = this.state;\r\n    const { addQuestion } = this.props;\r\n    if (content.length > 0 && selectedTags.length > 0) {\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/questions',\r\n        params: {\r\n          title,\r\n          content,\r\n          tags: selectedTags,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          const { data } = result;\r\n          addQuestion(data);\r\n          const { id } = data;\r\n          this.setSubmissionStateToSubmitted(id);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      alert('Fill in the form! Replace me with actual error text in the form!');\r\n    }\r\n  };\r\n\r\n  public toggleInputState = () => {\r\n    this.setState((prevState) => ({ inputState: 1 - prevState.inputState }));\r\n  };\r\n\r\n  public setInputStateToDefault = () => {\r\n    this.setState({ inputState: InputState.DEFAULT });\r\n  };\r\n\r\n  public setInputStateToExpanded = () => {\r\n    this.setState({ inputState: InputState.EXPANDED });\r\n  };\r\n\r\n  public setSubmissionStateToSubmitted = (questionId: number) => {\r\n    const { history } = this.props;\r\n    this.setState({ submissionState: SubmissionState.SUBMITTED }, () =>\r\n      setTimeout(() => {\r\n        history.push(`/results/${questionId}`);\r\n      }, TRANSITION_DURATION)\r\n    );\r\n  };\r\n\r\n  public setHeightRef = () => {\r\n    this.heightRef.current.style.height = 'auto';\r\n  };\r\n\r\n  public handleSelectTag = (tagId: number) => {\r\n    this.setState({\r\n      selectedTags: [...this.state.selectedTags, tagId],\r\n    });\r\n  };\r\n  public handleDelete = (sid: number) => {\r\n    const selectedTags = [...this.state.selectedTags];\r\n    selectedTags.splice(selectedTags.indexOf(sid), 1);\r\n    this.setState({ selectedTags });\r\n  };\r\n\r\n  public handleChangeContent = (content: string) => {\r\n    this.setState({ content });\r\n  };\r\n\r\n  public handleChangeTitle = (title: string) => {\r\n    this.setState({ title });\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      selectedTags,\r\n      inputState,\r\n      title,\r\n      content,\r\n      submissionState,\r\n    } = this.state;\r\n    const { classes, tags } = this.props;\r\n    return (\r\n      <LongOpacityContainer\r\n        className={classes.root}\r\n        pose={\r\n          submissionState === SubmissionState.DEFAULT ? 'visible' : 'hidden'\r\n        }\r\n      >\r\n        <form onSubmit={this.handleSubmit}>\r\n          <OpacityContainer\r\n            pose={inputState === InputState.EXPANDED ? 'visible' : 'hidden'}\r\n          >\r\n            {inputState === InputState.EXPANDED && (\r\n              <InputContainer>\r\n                <MainSearchTitle\r\n                  key='title'\r\n                  title={title}\r\n                  handleChange={this.handleChangeTitle}\r\n                />\r\n              </InputContainer>\r\n            )}\r\n          </OpacityContainer>\r\n          <HeightContainer\r\n            ref={this.heightRef}\r\n            onPoseComplete={() => {\r\n              this.setHeightRef();\r\n            }}\r\n            pose={inputState === InputState.EXPANDED ? 'expanded' : 'default'}\r\n          >\r\n            <InputContainer>\r\n              <MainSearchInput\r\n                key='content'\r\n                inputState={inputState}\r\n                content={content}\r\n                handleChange={this.handleChangeContent}\r\n                handleSubmit={this.handleSubmit}\r\n                toggleInputState={this.toggleInputState}\r\n                setInputStateToDefault={this.setInputStateToDefault}\r\n                setInputStateToExpanded={this.setInputStateToExpanded}\r\n              />\r\n            </InputContainer>\r\n          </HeightContainer>\r\n          <div style={{ height: '50px' }}>\r\n            <InputContainer>\r\n              <MainSearchSelect\r\n                key='select'\r\n                handleSelectTag={this.handleSelectTag}\r\n                selectedTags={selectedTags}\r\n                tags={tags}\r\n              />\r\n            </InputContainer>\r\n          </div>\r\n          <MainSearchTagContainer\r\n            key='tags'\r\n            handleDeleteTag={this.handleDelete}\r\n            selectedTags={selectedTags}\r\n            tags={tags}\r\n          />\r\n          <button type=\"submit\" style={{ display: 'none' }} />\r\n        </form>\r\n      </LongOpacityContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(MainSearch));\r\n","import * as React from 'react';\r\n\r\nimport Downshift, { ControllerStateAndHelpers } from 'downshift';\r\nimport {\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport classnames from 'classnames';\r\nimport posed from 'react-pose';\r\n\r\nexport interface IMainSearchSelectProps {\r\n  handleSelectTag: (tagId: number) => void;\r\n  selectedTags: number[];\r\n  tags: Array<{ id: number; name: string }>;\r\n}\r\n\r\nexport interface IMainSearchSelectState {\r\n  selectValue: string;\r\n}\r\n\r\nconst MAIN_TRANSITION_DURATION = 450;\r\n// const CHILD_TRANSITION_DURATION = 50;\r\n\r\nconst OpacityContainer = posed.div({\r\n  hidden: { opacity: 0, transition: { duration: MAIN_TRANSITION_DURATION } },\r\n  visible: { opacity: 1, transition: { duration: MAIN_TRANSITION_DURATION } },\r\n});\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  container: {\r\n    width: 'calc(100% - 12px)',\r\n    zIndex: 9999,\r\n    position: 'relative'\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: theme.palette.text.primary,\r\n    wordWrap: 'break-word',\r\n    outline: 'none',\r\n    width: '100%',\r\n    fontFamily: 'monospace',\r\n    paddingTop: '16.5px',\r\n    paddingBottom: '16.5px',\r\n    '&::placeholder': {\r\n      opacity: 0.65,\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  listItem: {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    display: 'block',\r\n    cursor: 'pointer',\r\n  },\r\n  selectedTagsContainer: {\r\n    marginTop: '8px',\r\n  },\r\n  paper: {\r\n    maxHeight: '300px',\r\n    overflowY: 'scroll'\r\n  },\r\n  highlighted: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  selectMenu: {\r\n    marginTop: '5px',\r\n    opacity: 0,\r\n  },\r\n});\r\n\r\nclass MainSearchSelect extends React.Component<\r\n  WithStyles<any> & IMainSearchSelectProps,\r\n  IMainSearchSelectState\r\n  > {\r\n  public state = {\r\n    selectValue: '',\r\n  };\r\n\r\n  public handleSelectChange = (item: { id: number; name: string }, stateAndHelpers: ControllerStateAndHelpers<any>) => {\r\n    this.props.handleSelectTag(item.id);\r\n    this.setState({\r\n      selectValue: '',\r\n    }, () => stateAndHelpers.setState({ inputValue: '' }));\r\n  };\r\n\r\n  public handleSelectValueChange = (ev: any) => {\r\n    this.setState({ selectValue: ev.target.value });\r\n  };\r\n\r\n  public render() {\r\n    const { classes, selectedTags, tags } = this.props;\r\n    return (\r\n      <>\r\n        <Downshift\r\n          id=\"downshift-select\"\r\n          onChange={this.handleSelectChange}\r\n          itemToString={(item) => (item ? item.name : '')}\r\n        >\r\n          {({\r\n            getInputProps,\r\n            getItemProps,\r\n            getMenuProps,\r\n            highlightedIndex,\r\n            inputValue,\r\n            isOpen,\r\n            selectedItem,\r\n            clearSelection,\r\n            setState,\r\n          }) => {\r\n            const inputValueLower =\r\n              inputValue && inputValue.toLocaleLowerCase();\r\n            const inputProps = getInputProps();\r\n            inputProps.onBlur = () => {\r\n              setState({\r\n                inputValue: ''\r\n              });\r\n            }\r\n            return (\r\n              <div className={classes.container}>\r\n                <input\r\n                  className={classes.input}\r\n                  {...inputProps}\r\n                  placeholder=\"Add a category\"\r\n                />\r\n                <div {...getMenuProps()}>\r\n                  <OpacityContainer\r\n                    pose={isOpen ? 'visible' : 'hidden'}\r\n                    className={classes.selectMenu}\r\n                  >\r\n                    {isOpen && (\r\n                      <Paper className={classes.paper} elevation={4}>\r\n                        {tags\r\n                          .filter((tag) => !selectedTags.includes(tag.id))\r\n                          .filter((tag) => {\r\n                            const { name } = tag;\r\n                            const nameLower = name.toLocaleLowerCase();\r\n                            const result =\r\n                              !inputValueLower ||\r\n                              nameLower.includes(inputValueLower);\r\n                            return result;\r\n                          })\r\n                          .slice(0, 30)\r\n                          .map((t, index) => {\r\n                            const { id, name } = t;\r\n                            return (\r\n                              <li\r\n                                {...getItemProps({\r\n                                  item: {\r\n                                    id,\r\n                                    name,\r\n                                  },\r\n                                })}\r\n                                className={classnames(\r\n                                  classes.listItem,\r\n                                  highlightedIndex === index &&\r\n                                  classes.highlighted\r\n                                )}\r\n                                key={id}\r\n                                value={name}\r\n                                tabIndex={0}\r\n                              >\r\n                                {t.name}\r\n                              </li>\r\n                            );\r\n                          })}\r\n                      </Paper>\r\n                    )}\r\n                  </OpacityContainer>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        </Downshift>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainSearchSelect);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Chip,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\nexport interface IMainSearchTagContainerProps\r\n  extends WithStyles<typeof styles> {\r\n  handleDeleteTag: (tagId: number) => void;\r\n  selectedTags: number[];\r\n  tags: Array<{ id: number; name: string }>;\r\n}\r\n\r\nexport interface IMainSearchTagContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  selectedTagsContainer: {\r\n    marginTop: theme.spacing.unit,\r\n    zIndex: -1,\r\n  },\r\n  selectedTag: {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    marginRight: theme.spacing.unit / 2,\r\n    marginBottom: theme.spacing.unit / 2,\r\n  },\r\n  deleteIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n});\r\n\r\nclass MainSearchTagContainer extends React.Component<\r\n  IMainSearchTagContainerProps,\r\n  IMainSearchTagContainerState\r\n  > {\r\n  public getTagById = (id: number) => {\r\n    const { tags } = this.props;\r\n    const len = tags.length;\r\n    let result = {} as { id: number; name: string };\r\n    for (let i = 0; i < len; i += 1) {\r\n      if (tags[i].id === id) {\r\n        result = tags[i];\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n  public handleDelete = (sid: number) => {\r\n    this.props.handleDeleteTag(sid);\r\n  };\r\n  public render() {\r\n    const { classes, selectedTags } = this.props;\r\n    return (\r\n      <div className={classes.selectedTagsContainer}>\r\n        {selectedTags.map((sid) => (\r\n          <Chip\r\n            key={sid}\r\n            className={classes.selectedTag}\r\n            label={this.getTagById(sid).name}\r\n            onDelete={() => this.handleDelete(sid)}\r\n            deleteIcon={<Clear className={classes.deleteIcon} />}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainSearchTagContainer);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nexport interface IMainSearchTitleProps {\r\n  handleChange: (title: string) => void;\r\n  title: string;\r\n}\r\n\r\nexport interface IMainSearchTitleState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    paddingTop: '16.5px',\r\n    paddingBottom: '16.5px',\r\n    color: theme.palette.text.primary,\r\n    wordWrap: 'break-word',\r\n    outline: 'none',\r\n    resize: 'none',\r\n    width: 'calc(100% - 24px)',\r\n    fontFamily: 'monospace',\r\n    '&::placeholder': {\r\n      opacity: 0.65,\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n});\r\n\r\nclass MainSearchTitle extends React.Component<\r\n  WithStyles<any> & IMainSearchTitleProps,\r\n  IMainSearchTitleState\r\n  > {\r\n  public _handleChange = (ev: any) => {\r\n    this.props.handleChange(ev.target.value);\r\n  };\r\n\r\n  public render() {\r\n    const { classes, title } = this.props;\r\n    return (\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        placeholder=\"Enter a title (optional)\"\r\n        value={title}\r\n        onChange={this._handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainSearchTitle);\r\n","import * as React from 'react';\r\n\r\nimport { Avatar, Grid, StyleRulesCallback, Theme, Typography, WithStyles, withStyles } from '@material-ui/core';\r\n\r\nimport { DirectUpload } from 'activestorage';\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ISettings } from '../../interfaces/Settings';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileTabList from './ProfileTabList';\r\nimport axios from 'axios';\r\n\r\nexport interface IProfileContainerProps extends WithStyles<typeof styles> {\r\n  answers: IAnswer[];\r\n  setAnswers: (answers: IAnswer[]) => void;\r\n  questions: IQuestion[];\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  editUser: (user: IUser) => void;\r\n  currentTab: TabTypes;\r\n  mentorDialogOpen: boolean;\r\n  setTimeZone: (timeZone: string) => void;\r\n  tags: ITag[];\r\n  toggleTheme: () => void;\r\n  user: IUser;\r\n  userSettings: ISettings;\r\n}\r\n\r\nexport interface IProfileContainerState {\r\n  currentTab: TabTypes;\r\n  loading: boolean;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  profileAvatarInputContainer: {\r\n    height: '80px',\r\n    width: '80px',\r\n    borderRadius: '5px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: '95px',\r\n      width: '95px',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: '110px',\r\n      width: '110px',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: '125px',\r\n      width: '125px',\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      height: '140px',\r\n      width: '140px',\r\n    },\r\n    transition: theme.transitions.create(['opacity'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      opacity: 0.45,\r\n    },\r\n  },\r\n  avatar: {\r\n    height: '100%',\r\n    width: '100%',\r\n    borderRadius: '5px',\r\n  },\r\n  changeAvatarText: {\r\n    fontWeight: 'bolder',\r\n    fontVariant: 'small-caps',\r\n    color: 'white',\r\n  },\r\n  root: {\r\n    marginTop: 90 + theme.spacing.unit * 2,\r\n  },\r\n  profileHeader: {\r\n    display: 'flex',\r\n  },\r\n  profileHeaderText: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n});\r\n\r\nexport enum TabTypes {\r\n  Home = 'Home',\r\n  MentorPanel = 'Mentor Panel',\r\n  Settings = 'Settings'\r\n}\r\n\r\nclass ProfileContainer extends React.Component<\r\n  IProfileContainerProps,\r\n  IProfileContainerState\r\n  > {\r\n  public inputRef: React.RefObject<any>;\r\n\r\n  constructor(props: IProfileContainerProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentTab: this.props.currentTab,\r\n      loading: true,\r\n    };\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  public uploadFile = (file: any) => {\r\n    const { editUser, user } = this.props;\r\n    const url = this.inputRef.current.dataset.directUploadUrl;\r\n    const upload = new DirectUpload(file, url);\r\n\r\n    upload.create((error: any, blob: any) => {\r\n      if (error) {\r\n        console.dir(error);\r\n      } else {\r\n        console.log(blob);\r\n        axios({\r\n          method: 'put',\r\n          url: `/api/users/${this.props.user.id}`,\r\n          // params: {\r\n          //   avatar: `https://s3.ca-central-1.amazonaws.com/conch-avatars/${blob.key}`,\r\n          // },\r\n          params: {\r\n            avatar: blob.signed_id,\r\n          }\r\n        })\r\n          .then((result) => {\r\n            const newUser = { ...user };\r\n            newUser.avatar_url = `https://s3.ca-central-1.amazonaws.com/conch-avatars/${blob.key}`;\r\n            editUser(newUser);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    });\r\n  };\r\n\r\n  public changeCurrentTab = (newTab: TabTypes) => {\r\n    this.setState({ currentTab: newTab });\r\n  };\r\n\r\n  public handleClick = () => {\r\n    this.inputRef.current.click();\r\n  };\r\n\r\n  public handleFinishLoading = () => {\r\n    console.log('Finished loading!');\r\n    this.isNotLoading();\r\n  };\r\n\r\n  public handleStartLoading = () => {\r\n    console.log('Loading data!');\r\n    this.isLoading();\r\n  };\r\n\r\n  public isLoading = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  public isNotLoading = () => {\r\n    this.setState({ loading: false }, () =>\r\n      console.log('loading set to false')\r\n    );\r\n  };\r\n\r\n  public handleAvatarChange = (ev: any) => {\r\n    if (ev.target.files[0]) {\r\n      const file = ev.target.files[0];\r\n      this.uploadFile(file);\r\n    }\r\n  };\r\n\r\n  public getTabs = () => {\r\n    const { user } = this.props;\r\n    const userTabs = Object.values(TabTypes);\r\n    return user.is_mentor ? userTabs : userTabs.filter(t => t !== TabTypes.MentorPanel);\r\n  }\r\n\r\n  public render() {\r\n    const { currentTab, loading } = this.state;\r\n    const { classes, currentTab: propsCurrentTab, user, ...rest } = this.props;\r\n    const tabs = this.getTabs();\r\n    return (\r\n      <Grid item={true} xs={11} className={classes.root}>\r\n        <Grid container={true} spacing={24}>\r\n          <Grid item={true} xs={12}>\r\n            <div className={classes.profileHeader}>\r\n              <div\r\n                className={classes.profileAvatarInputContainer}\r\n                onClick={this.handleClick}\r\n              >\r\n                <Avatar className={classes.avatar} src={user.avatar_url} />\r\n                <input\r\n                  type=\"file\"\r\n                  ref={this.inputRef}\r\n                  style={{ display: 'none' }}\r\n                  onChange={this.handleAvatarChange}\r\n                  accept=\"image/*\"\r\n                  data-direct-upload-url=\"/rails/active_storage/direct_uploads\"\r\n                />\r\n              </div>\r\n              <div className={classes.profileHeaderText}>\r\n                <Typography variant=\"h3\">{user.nickname}</Typography>\r\n                <Typography variant=\"h6\">{user.email}</Typography>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item={true} xs={4} md={2}>\r\n            <ProfileTabList\r\n              currentTab={currentTab}\r\n              handleClick={this.changeCurrentTab}\r\n              tabs={tabs}\r\n            />\r\n          </Grid>\r\n          <Grid item={true} xs={8} md={10}>\r\n            <ProfileContent\r\n              currentTab={currentTab}\r\n              handleFinishLoading={this.handleFinishLoading}\r\n              loading={loading}\r\n              user={user}\r\n              {...rest}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileContainer);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport MainSearch from './MainSearch';\r\n\r\nexport interface IMainSearchContainerProps {\r\n  addQuestion: (question: IQuestion) => void;\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMainSearchContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    width: '40%',\r\n    position: 'relative',\r\n  },\r\n});\r\n\r\nclass MainSearchContainer extends React.Component<\r\n  WithStyles<any> & IMainSearchContainerProps,\r\n  IMainSearchContainerState\r\n  > {\r\n  public render() {\r\n    const { classes, tags, addQuestion } = this.props;\r\n    return (\r\n      <Grid item={true} xs={10} sm={8} md={6} lg={4} className={classes.root}>\r\n        <MainSearch tags={tags} addQuestion={addQuestion} />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainSearchContainer);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport MainSearchContainer from '../MainSearch/MainSearchContainer';\r\n\r\nexport interface IMainPageProps {\r\n  addQuestion: (question: IQuestion) => void;\r\n  handleFinishLoading: () => void;\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMainPageState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: '-90px',\r\n    display: 'flex',\r\n  },\r\n});\r\n\r\nclass MainPage extends React.Component<\r\n  WithStyles<any> & IMainPageProps,\r\n  IMainPageState\r\n  > {\r\n  public componentDidMount() {\r\n    this.props.handleFinishLoading();\r\n  }\r\n  public render() {\r\n    const { classes, addQuestion, tags } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} justify={'center'}>\r\n          <MainSearchContainer addQuestion={addQuestion} tags={tags} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MainPage);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\n// import posed from 'react-pose';\r\nimport { ITag } from '../../interfaces/Tag';\r\n\r\nexport interface IMentorContainerProps extends WithStyles<typeof styles> {\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMentorContainerState {\r\n  placeholder?: string;\r\n}\r\n\r\n// const TRANSITION_DURATION = 350;\r\n\r\n// const OpacityContainer = posed.div({\r\n//   hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\r\n//   visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\r\n// });\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nclass MentorContainer extends React.Component<\r\n  IMentorContainerProps,\r\n  IMentorContainerState\r\n> {\r\n  public render() {\r\n    const { classes } = this.props;\r\n    return <div className={classes.root} />;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MentorContainer);\r\n","import {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport MentorContainer from '../Mentor/MentorContainer';\r\n\r\nexport interface IMentorPageProps extends WithStyles<typeof styles> {\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMentorPageState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    marginTop: '-45px',\r\n  },\r\n});\r\n\r\nclass MentorPage extends React.Component<IMentorPageProps, IMentorPageState> {\r\n  public render() {\r\n    const { classes, tags } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} justify={'center'}>\r\n          <MentorContainer tags={tags} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MentorPage);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Chip,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport classnames from 'classnames';\r\n\r\nexport interface IQuestionListProps extends WithStyles<typeof styles> {\r\n  userId?: number;\r\n  tags: ITag[];\r\n  questions: IQuestion[];\r\n}\r\n\r\nexport interface IQuestionListState {\r\n  errorText: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  dirty: {\r\n    backgroundColor: theme.palette.type === 'light'\r\n      ? lighten(theme.palette.primary.main, 0.75)\r\n      : darken(theme.palette.primary.main, 0.75),\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    width: '25%',\r\n    height: '25%',\r\n    margin: 'auto',\r\n  },\r\n  table: {\r\n    overflowY: 'scroll',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableHeader: {\r\n    position: 'sticky',\r\n    boxShadow:\r\n      '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\r\n  },\r\n  tableBody: {\r\n    overflowY: 'scroll',\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    marginRight: theme.spacing.unit / 2,\r\n    marginBottom: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass QuestionList extends React.Component<\r\n  RouteComponentProps<any> & IQuestionListProps,\r\n  IQuestionListState\r\n  > {\r\n  public state = {\r\n    errorText: '',\r\n  };\r\n\r\n  public handleLink = (id: number) => {\r\n    this.props.history.push(`/results/${id}`);\r\n  };\r\n\r\n  public getTagById = (id: number) => {\r\n    const { tags } = this.props;\r\n    const len = tags.length;\r\n    let result = {} as { id: number; name: string };\r\n    for (let i = 0; i < len; i += 1) {\r\n      if (tags[i].id === id) {\r\n        result = tags[i];\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public render() {\r\n    const { classes, questions } = this.props;\r\n    return (\r\n      <Paper className={classes.paper} elevation={4}>\r\n        <Table className={classes.table} padding=\"dense\">\r\n          <TableHead className={classes.tableHeader}>\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Question</TableCell>\r\n              <TableCell>Tags</TableCell>\r\n              <TableCell>Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody className={classes.tableBody}>\r\n            {questions\r\n              .sort((a, b) => {\r\n                const aDate = new Date(a.created_at);\r\n                const bDate = new Date(b.created_at);\r\n                return aDate > bDate ? -1 : 1;\r\n              })\r\n              .map((question, index) => {\r\n                const createdAt = new Date(question.created_at);\r\n                return (\r\n                  <TableRow\r\n                    key={index}\r\n                    onClick={() => this.handleLink(question.id)}\r\n                    className={classnames(classes.tableRow, question.is_dirty && classes.dirty)}\r\n                    hover={true}\r\n                  >\r\n                    <TableCell>\r\n                      {`${createdAt.toLocaleDateString()}\\n${createdAt.toLocaleTimeString()}`}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {question.title.length > 0 &&\r\n                        `${question.title.substr(0, 20)}`}\r\n                      {question.title.length > 20 && '...'}\r\n                    </TableCell>\r\n                    <TableCell style={{ wordWrap: 'break-word' }}>\r\n                      {`${question.content.substr(0, 20)}`}\r\n                      {question.content.length > 20 && '...'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {question.tags.map((tag, i) => (\r\n                        <Chip\r\n                          key={i}\r\n                          className={classes.chip}\r\n                          label={this.getTagById(tag).name}\r\n                        />\r\n                      ))}\r\n                    </TableCell>\r\n                    <TableCell>{question.question_status && question.question_status.status}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(QuestionList));\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\nimport { IQuestion } from '../../../interfaces/Question';\r\nimport { ITag } from '../../../interfaces/Tag';\r\nimport { IUser } from '../../../interfaces/User';\r\nimport QuestionList from '../../List/QuestionList';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\n\r\nexport interface IHomeProps extends WithStyles<typeof styles> {\r\n  questions: IQuestion[];\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  handleFinishLoading: () => void;\r\n  tags: ITag[];\r\n  user: IUser;\r\n}\r\n\r\nexport interface IHomeState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  contentContainer: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  divider: {\r\n    color: darken(theme.palette.primary.main, 0.1),\r\n  },\r\n  table: {\r\n    overflowY: 'scroll',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    marginRight: theme.spacing.unit / 2,\r\n    marginBottom: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass Home extends React.Component<\r\n  RouteComponentProps<any> & IHomeProps,\r\n  IHomeState\r\n  > {\r\n  public componentDidMount() {\r\n    this.props.handleFinishLoading();\r\n  }\r\n\r\n  public render() {\r\n    const { classes, questions, tags, user } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} spacing={8} className={classes.contentContainer}>\r\n          <Grid item={true} xs={12} sm={8}>\r\n            <QuestionList questions={questions} tags={tags} userId={user.id} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Home));\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\nimport { IAnswer } from '../../interfaces/Answer';\r\n\r\nexport interface IAnswerListProps extends WithStyles<typeof styles> {\r\n  userId?: number;\r\n  answers: IAnswer[];\r\n}\r\n\r\nexport interface IAnswerListState {\r\n  errorText: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  dirty: {\r\n    backgroundColor: theme.palette.type === 'light'\r\n      ? lighten(theme.palette.primary.main, 0.75)\r\n      : darken(theme.palette.primary.main, 0.75),\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    width: '25%',\r\n    height: '25%',\r\n    margin: 'auto',\r\n  },\r\n  table: {\r\n    overflowY: 'scroll',\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableHeader: {\r\n    position: 'sticky',\r\n    boxShadow:\r\n      '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\r\n  },\r\n  tableBody: {\r\n    overflowY: 'scroll',\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    marginRight: theme.spacing.unit / 2,\r\n    marginBottom: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass AnswerList extends React.Component<\r\n  RouteComponentProps<any> & IAnswerListProps,\r\n  IAnswerListState\r\n  > {\r\n  public state = {\r\n    errorText: '',\r\n  };\r\n\r\n  public handleLink = (id: number) => {\r\n    this.props.history.push(`/results/${id}`);\r\n  };\r\n\r\n  public render() {\r\n    const { classes, answers } = this.props;\r\n    return (\r\n      <Paper className={classes.paper} elevation={4}>\r\n        <Table className={classes.table} padding=\"dense\">\r\n          <TableHead className={classes.tableHeader}>\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Answer</TableCell>\r\n              <TableCell>Selected</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody className={classes.tableBody}>\r\n            {answers\r\n              .sort((a, b) => {\r\n                const aDate = new Date(a.created_at);\r\n                const bDate = new Date(b.created_at);\r\n                return aDate > bDate ? -1 : 1;\r\n              })\r\n              .map((answer, index) => {\r\n                const createdAt = new Date(answer.created_at);\r\n                return (\r\n                  <TableRow\r\n                    key={index}\r\n                    onClick={() => this.handleLink(answer.question_id)}\r\n                    className={classes.tableRow}\r\n                    hover={true}\r\n                  >\r\n                    <TableCell>\r\n                      {`${createdAt.toLocaleDateString()}\\n${createdAt.toLocaleTimeString()}`}\r\n                    </TableCell>\r\n                    <TableCell style={{ wordWrap: 'break-word' }}>\r\n                      {`${answer.content.substr(0, 20)}`}\r\n                      {answer.content.length > 20 && '...'}\r\n                    </TableCell>\r\n                    <TableCell>{answer.selected.toString()}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AnswerList));\r\n","import * as React from 'react';\r\n\r\nimport { Button, Grid, StyleRulesCallback, Theme, Typography, WithStyles, withStyles } from '@material-ui/core';\r\n\r\nimport AnswerList from '../../List/AnswerList';\r\nimport { IAnswer } from '../../../interfaces/Answer';\r\nimport { IQuestion } from '../../../interfaces/Question';\r\nimport { ITag } from '../../../interfaces/Tag';\r\nimport { IUser } from '../../../interfaces/User';\r\nimport InputContainer from '../../Input/InputContainer';\r\nimport MainSearchSelect from '../../MainSearch/MainSearchSelect';\r\nimport MainSearchTagContainer from '../../MainSearch/MainSearchTagContainer';\r\nimport axios from 'axios';\r\nimport { getAnswersByUserId } from '../../../api';\r\n\r\nexport interface IMentorPanelProps extends WithStyles<typeof styles> {\r\n  answers: IAnswer[];\r\n  setAnswers: (answers: IAnswer[]) => void;\r\n  handleFinishLoading: () => void;\r\n  editUser: (user: IUser) => void;\r\n  user: IUser;\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IMentorPanelState {\r\n  questions: IQuestion[];\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nclass MentorPanel extends React.Component<IMentorPanelProps, IMentorPanelState> {\r\n  public state = {\r\n    questions: [] as IQuestion[]\r\n  };\r\n\r\n  public _handleDeleteTag = (tagId: number) => {\r\n    const { editUser, user } = this.props;\r\n    const { tags } = user;\r\n    if (tags) {\r\n      const newTags = tags.filter(t => t !== tagId);\r\n      axios({\r\n        method: 'delete',\r\n        url: `/api/user_tags/${tagId}`\r\n      })\r\n        .then((result) => {\r\n          const newUser = { ...user };\r\n          newUser.tags = newTags;\r\n          editUser(newUser);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  public _handleSelectTag = (tagId: number) => {\r\n    const { editUser, user } = this.props;\r\n    const { tags } = user;\r\n    if (tags) {\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/user_tags',\r\n        params: {\r\n          tags: [tagId],\r\n        },\r\n      })\r\n        .then((r) => {\r\n          const newUser = { ...user };\r\n          newUser.is_mentor = true;\r\n          newUser.tags = [...user.tags, tagId];\r\n          editUser(newUser);\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n  }\r\n\r\n  public toggleMentorStatus = () => {\r\n    const { editUser, user } = this.props;\r\n    axios({\r\n      method: 'put',\r\n      url: `/api/users/${user.id}`,\r\n      params: {\r\n        is_mentor: false\r\n      }\r\n    })\r\n      .then((result) => {\r\n        const newUser = { ...user };\r\n        newUser.is_mentor = false;\r\n        editUser(newUser);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  public refreshAnswers = () => {\r\n    const { setAnswers, user } = this.props;\r\n    getAnswersByUserId(user.id, (answers) => {\r\n      setAnswers(answers);\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const { answers, user, tags } = this.props;\r\n    return (\r\n      <Grid container={true} spacing={8}>\r\n        <Grid item={true} xs={4}>\r\n          <Button disabled={!user.is_mentor} onClick={this.toggleMentorStatus}>Stop Being a Mentor (TESTING)</Button>\r\n          <Typography variant='subtitle1'>Add New Categories</Typography>\r\n          <div style={{ height: '50px' }}>\r\n            <InputContainer>\r\n              <MainSearchSelect\r\n                handleSelectTag={(tagId: number) => {\r\n                  this._handleSelectTag(tagId);\r\n                }}\r\n                selectedTags={user.tags}\r\n                tags={tags}\r\n              />\r\n            </InputContainer>\r\n          </div>\r\n          <MainSearchTagContainer\r\n            handleDeleteTag={(tagId: number) => {\r\n              this._handleDeleteTag(tagId);\r\n            }}\r\n            selectedTags={user.tags}\r\n            tags={tags}\r\n          />\r\n        </Grid>\r\n        <Grid item={true} xs={8}>\r\n          <AnswerList answers={answers} />\r\n        </Grid>\r\n      </Grid >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MentorPanel);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport InputContainer from '../Input/InputContainer';\r\nimport MainSearchSelect from '../MainSearch/MainSearchSelect';\r\nimport MainSearchTagContainer from '../MainSearch/MainSearchTagContainer';\r\nimport axios from 'axios';\r\n\r\nexport interface IMentorRegistrationProps extends WithStyles<typeof styles> {\r\n  closeDialog: () => void;\r\n  editUser: (user: IUser) => void;\r\n  open: boolean;\r\n  tags: ITag[];\r\n  user: IUser;\r\n}\r\n\r\nexport interface IMentorRegistrationState {\r\n  selectedTags: number[];\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  paper: {\r\n    transition: 'all 1s ease-out'\r\n  },\r\n  submitButton: {\r\n    borderRadius: 0,\r\n  },\r\n});\r\n\r\nclass MentorRegistration extends React.Component<\r\n  IMentorRegistrationProps,\r\n  IMentorRegistrationState\r\n  > {\r\n  public state = {\r\n    selectedTags: [] as number[],\r\n  };\r\n\r\n  public handleSubmit = (ev?: any) => {\r\n    const { closeDialog, editUser, user } = this.props;\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n    const { selectedTags } = this.state;\r\n    if (selectedTags.length > 0) {\r\n      axios({\r\n        method: 'put',\r\n        url: `/api/users/${user.id}`,\r\n        params: {\r\n          is_mentor: true\r\n        }\r\n      })\r\n        .then((result) => {\r\n          axios({\r\n            method: 'post',\r\n            url: '/api/user_tags',\r\n            params: {\r\n              tags: selectedTags,\r\n            },\r\n          })\r\n            .then((r) => {\r\n              const newUser = { ...user };\r\n              newUser.is_mentor = true;\r\n              newUser.tags = selectedTags;\r\n              editUser(newUser);\r\n              closeDialog();\r\n            })\r\n            .catch((e) => console.log(e));\r\n        })\r\n        .catch(err => console.log(err));\r\n    } else {\r\n      alert('Fill in the form! Replace me with actual error text in the form!');\r\n    }\r\n  };\r\n\r\n  public handleSelectTag = (tagId: number) => {\r\n    this.setState({\r\n      selectedTags: [...this.state.selectedTags, tagId],\r\n    });\r\n  };\r\n  public handleDeleteTag = (sid: number) => {\r\n    const selectedTags = [...this.state.selectedTags];\r\n    selectedTags.splice(selectedTags.indexOf(sid), 1);\r\n    this.setState({ selectedTags });\r\n  };\r\n\r\n  public render() {\r\n    const { selectedTags } = this.state;\r\n    const { classes, open, closeDialog, tags } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={closeDialog}\r\n        fullWidth={true}\r\n        className={classes.dialog}\r\n        maxWidth={'sm'}\r\n        classes={{\r\n          paper: classes.paper\r\n        }}\r\n      >\r\n        <DialogTitle>Register as a Mentor</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            By becoming a Mentor and setting your areas of expertise, you will be able to be join a queue where you will be selected to\r\n            answer questions, earning money per question answered.\r\n          </DialogContentText>\r\n          <br />\r\n          <DialogContentText>\r\n            Please note that the quality of your answers are important.\r\n            Not everyone is suited to be a Mentor.\r\n            Please only select areas are you an expert in.\r\n          </DialogContentText>\r\n          <br />\r\n          <Typography variant='subtitle1'>Select Area of Expertise:</Typography>\r\n          <div style={{ height: '50px' }}>\r\n            <InputContainer>\r\n              <MainSearchSelect\r\n                handleSelectTag={this.handleSelectTag}\r\n                selectedTags={selectedTags}\r\n                tags={tags}\r\n              />\r\n            </InputContainer>\r\n          </div>\r\n          <br />\r\n          {selectedTags.length > 0 &&\r\n            <>\r\n              <Typography variant='subtitle1'>Your Areas of Expertise:</Typography>\r\n              <MainSearchTagContainer\r\n                handleDeleteTag={this.handleDeleteTag}\r\n                selectedTags={selectedTags}\r\n                tags={tags}\r\n              />\r\n            </>\r\n          }\r\n        </DialogContent>\r\n        <Button\r\n          onClick={this.handleSubmit}\r\n          disabled={selectedTags.length === 0}\r\n          fullWidth={true}\r\n          size='large'\r\n          variant='contained'\r\n          color='primary'\r\n        >Become a Mentor</Button>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MentorRegistration);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Input,\r\n  InputLabel,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport Downshift from 'downshift';\r\nimport { ISettings } from '../../../interfaces/Settings';\r\nimport { ITag } from '../../../interfaces/Tag';\r\nimport { IUser } from '../../../interfaces/User';\r\nimport MentorRegistration from '../../Dialog/MentorRegistration';\r\nimport { ThemeTypes } from '../../../themes/mainTheme';\r\nimport classnames from 'classnames';\r\nimport moment from 'moment-timezone';\r\n\r\nexport interface ISettingsProps extends WithStyles<typeof styles> {\r\n  editUser: (user: IUser) => void;\r\n  mentorDialogOpen: boolean;\r\n  handleFinishLoading: () => void;\r\n  setTimeZone: (timeZone: string) => void;\r\n  toggleTheme: () => void;\r\n  tags: ITag[];\r\n  user: IUser;\r\n  userSettings: ISettings;\r\n}\r\n\r\nexport interface ISettingsState {\r\n  nicknameText: string;\r\n  passwordText: string;\r\n  passwordConfirmText: string;\r\n  passwordErrorText: string;\r\n  mentorDialogOpen: boolean;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  container: {\r\n    width: 'calc(100% - 12px)',\r\n    zIndex: 1,\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: theme.palette.text.primary,\r\n    wordWrap: 'break-word',\r\n    outline: 'none',\r\n    width: '100%',\r\n    fontFamily: 'monospace',\r\n    paddingTop: '16.5px',\r\n    paddingBottom: '16.5px',\r\n    '&::placeholder': {\r\n      opacity: 0.65,\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  listItem: {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    paddingTop: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    display: 'block',\r\n    cursor: 'pointer',\r\n  },\r\n  selectedTagsContainer: {\r\n    marginTop: '8px',\r\n  },\r\n  paper: {\r\n    maxHeight: '300px',\r\n    overflowY: 'scroll',\r\n    position: 'absolute',\r\n    zIndex: 99,\r\n  },\r\n  highlighted: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n});\r\n\r\nconst TIMEZONES = moment.tz.names();\r\n\r\nclass Settings extends React.Component<ISettingsProps, ISettingsState> {\r\n  public state = {\r\n    nicknameText: this.props.user.nickname,\r\n    passwordText: '',\r\n    passwordConfirmText: '',\r\n    passwordErrorText: '',\r\n    mentorDialogOpen: this.props.mentorDialogOpen,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const { handleFinishLoading } = this.props;\r\n    handleFinishLoading();\r\n  }\r\n\r\n\r\n  public handleSelectChange = (tz: string) => {\r\n    this.props.setTimeZone(tz);\r\n  };\r\n\r\n  public handleTextChange = (ev: any) => {\r\n    // @ts-ignore\r\n    this.setState({ [ev.target.id as string]: ev.target.value });\r\n  };\r\n\r\n  public _changeNickname = (ev: any) => {\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n    const { nicknameText } = this.state;\r\n    const { editUser, user } = this.props;\r\n    const newUser = { ...user };\r\n    newUser.nickname = nicknameText;\r\n    editUser(newUser);\r\n  };\r\n\r\n  public _changePassword = (ev: any) => {\r\n    if (ev) {\r\n      ev.preventDefault();\r\n    }\r\n    const { passwordText, passwordConfirmText } = this.state;\r\n    // const { editUser, user } = this.props;\r\n    if (passwordText !== passwordConfirmText) {\r\n      this.setState({ passwordErrorText: 'Your passwords do not match!' });\r\n    } else {\r\n      // post request to change pw\r\n    }\r\n  };\r\n\r\n  public toggleMentorDialog = () => {\r\n    this.setState((prevState) => ({\r\n      mentorDialogOpen: !prevState.mentorDialogOpen,\r\n    }));\r\n  };\r\n\r\n  public openMentorDialog = () => {\r\n    this.setState({ mentorDialogOpen: true });\r\n  };\r\n\r\n  public closeMentorDialog = () => {\r\n    this.setState({ mentorDialogOpen: false });\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      nicknameText,\r\n      mentorDialogOpen,\r\n    } = this.state;\r\n    const { classes, editUser, tags, toggleTheme, user, userSettings } = this.props;\r\n    return (\r\n      <>\r\n        <MentorRegistration\r\n          editUser={editUser}\r\n          open={mentorDialogOpen}\r\n          closeDialog={this.closeMentorDialog}\r\n          tags={tags}\r\n          user={user}\r\n        />\r\n        <Grid container={true} spacing={24} className={classes.root}>\r\n          <Grid item={true} xs={6}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  onChange={toggleTheme}\r\n                  checked={userSettings.themeType === ThemeTypes.DARK}\r\n                />\r\n              }\r\n              label=\"Dark Mode\"\r\n            />\r\n          </Grid>\r\n          <Grid item={true} xs={6}>\r\n            <label id=\"select-timezone-label\">Timezone</label>\r\n            <Downshift\r\n              id=\"downshift-select-timezone\"\r\n              onChange={this.handleSelectChange}\r\n              initialInputValue={userSettings.timeZone}\r\n              labelId=\"select-timezone-label\"\r\n            >\r\n              {({\r\n                getInputProps,\r\n                getItemProps,\r\n                getMenuProps,\r\n                highlightedIndex,\r\n                inputValue,\r\n                isOpen,\r\n                selectedItem,\r\n                clearSelection,\r\n              }) => {\r\n                const inputValueLower =\r\n                  inputValue && inputValue.toLocaleLowerCase();\r\n                return (\r\n                  <div className={classes.container}>\r\n                    <input\r\n                      className={classes.input}\r\n                      {...getInputProps()}\r\n                      placeholder=\"Select timezone\"\r\n                    />\r\n                    <div {...getMenuProps()}>\r\n                      {isOpen && (\r\n                        <Paper className={classes.paper} elevation={4}>\r\n                          {TIMEZONES.filter((timezone) => {\r\n                            const timezoneLower = timezone.toLocaleLowerCase();\r\n                            const result =\r\n                              !inputValueLower ||\r\n                              timezoneLower.includes(inputValueLower);\r\n                            return result;\r\n                          })\r\n                            .slice(0, 30)\r\n                            .map((tz, index) => {\r\n                              return (\r\n                                <li\r\n                                  {...getItemProps({ item: tz })}\r\n                                  className={classnames(\r\n                                    classes.listItem,\r\n                                    highlightedIndex === index &&\r\n                                    classes.highlighted\r\n                                  )}\r\n                                  key={`${tz}-${index}`}\r\n                                  value={tz}\r\n                                  tabIndex={0}\r\n                                >\r\n                                  {tz}\r\n                                </li>\r\n                              );\r\n                            })}\r\n                        </Paper>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            </Downshift>\r\n          </Grid>\r\n          <Grid item={true} xs={6}>\r\n            <form onSubmit={this._changeNickname}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"nicknameText\">Change Nickname</InputLabel>\r\n                <Input\r\n                  id=\"nicknameText\"\r\n                  value={nicknameText}\r\n                  type=\"text\"\r\n                  onChange={this.handleTextChange}\r\n                />\r\n              </FormControl>\r\n              <button type=\"submit\" style={{ display: 'none' }} />\r\n            </form>\r\n          </Grid>\r\n          {/* <Grid item={true} xs={6}>\r\n            <form\r\n              style={{ display: 'flex', flexWrap: 'wrap' }}\r\n              onSubmit={this._changePassword}\r\n            >\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"passwordText\">Change Password</InputLabel>\r\n                <Input\r\n                  id=\"passwordText\"\r\n                  value={passwordText}\r\n                  type=\"password\"\r\n                  onChange={this.handleTextChange}\r\n                  error={passwordErrorText.length > 0}\r\n                />\r\n                <FormHelperText id=\"passwordError\">\r\n                  {passwordErrorText}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"passwordConfirmText\">\r\n                  Confirm Password\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"passwordConfirmText\"\r\n                  value={passwordConfirmText}\r\n                  type=\"password\"\r\n                  onChange={this.handleTextChange}\r\n                  error={passwordErrorText.length > 0}\r\n                />\r\n                <FormHelperText id=\"passwordConfirmError\">\r\n                  {passwordErrorText}\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <button type=\"submit\" style={{ display: 'none' }} />\r\n            </form>\r\n          </Grid> */}\r\n          {!user.is_mentor &&\r\n            <Grid item={true} xs={6}>\r\n              <Button onClick={this.openMentorDialog}>Become A Mentor</Button>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Settings);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  CircularProgress,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport Home from './ContentPages/Home';\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ISettings } from '../../interfaces/Settings';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport MentorPanel from './ContentPages/MentorPanel';\r\nimport Settings from './ContentPages/Settings';\r\nimport { TabTypes } from './ProfileContainer';\r\nimport classnames from 'classnames';\r\n\r\nexport interface IProfileContentProps extends WithStyles<typeof styles> {\r\n  answers: IAnswer[];\r\n  setAnswers: (answers: IAnswer[]) => void;\r\n  questions: IQuestion[];\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  currentTab: TabTypes;\r\n  mentorDialogOpen: boolean;\r\n  editUser: (user: IUser) => void;\r\n  handleFinishLoading: () => void;\r\n  loading: boolean;\r\n  setTimeZone: (timeZone: string) => void;\r\n  tags: ITag[];\r\n  toggleTheme: () => void;\r\n  user: IUser;\r\n  userSettings: ISettings;\r\n}\r\n\r\nexport interface IProfileContentState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  full: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    width: '25%',\r\n    height: '25%',\r\n    margin: 'auto',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n  contentContainer: {\r\n    color: theme.palette.text.primary,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n});\r\nclass ProfileContent extends React.Component<\r\n  IProfileContentProps,\r\n  IProfileContentState\r\n  > {\r\n  public getTabContent = () => {\r\n    const {\r\n      classes,\r\n      currentTab,\r\n      editUser,\r\n      handleFinishLoading,\r\n      answers,\r\n      setAnswers,\r\n      questions,\r\n      setQuestions,\r\n      tags,\r\n      user,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    switch (currentTab) {\r\n      case TabTypes.Home:\r\n        return (\r\n          <Home\r\n            handleFinishLoading={handleFinishLoading}\r\n            tags={tags}\r\n            user={user}\r\n            questions={questions}\r\n            setQuestions={setQuestions}\r\n          />\r\n        );\r\n      case TabTypes.MentorPanel:\r\n        return (\r\n          <MentorPanel\r\n            editUser={editUser}\r\n            handleFinishLoading={handleFinishLoading}\r\n            user={user}\r\n            tags={tags}\r\n            answers={answers}\r\n            setAnswers={setAnswers}\r\n          />\r\n        );\r\n      case TabTypes.Settings:\r\n        return (\r\n          <Settings\r\n            user={user}\r\n            editUser={editUser}\r\n            tags={tags}\r\n            handleFinishLoading={handleFinishLoading}\r\n            {...rest}\r\n          />\r\n        );\r\n      default:\r\n        return <div>NOT FOUND</div>;\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const { classes, loading } = this.props;\r\n    return (\r\n      <Paper className={classes.full} elevation={4}>\r\n        {loading && (\r\n          <div className={classes.loadingContainer}>\r\n            <CircularProgress className={classes.loading} size={96} />\r\n          </div>\r\n        )}\r\n        <div\r\n          className={classnames(\r\n            classes.contentContainer,\r\n            loading && classes.hidden\r\n          )}\r\n        >\r\n          {this.getTabContent()}\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileContent);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\nimport { TabTypes } from './ProfileContainer';\r\nimport classnames from 'classnames';\r\n\r\nexport interface IProfileTabListProps extends WithStyles<typeof styles> {\r\n  currentTab: TabTypes;\r\n  handleClick: (newTab: TabTypes) => void;\r\n  tabs: string[];\r\n}\r\n\r\nexport interface IProfileTabListState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  listItem: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2,\r\n    borderLeftWidth: theme.spacing.unit / 2,\r\n    borderLeftColor: 'rgba(0,0,0,0)',\r\n    borderLeftStyle: 'solid',\r\n    cursor: 'pointer',\r\n  },\r\n  listItemHoverable: {\r\n    '&:hover': {\r\n      backgroundColor: darken(theme.palette.background.paper, 0.1),\r\n    },\r\n  },\r\n  profileTabList: {\r\n    paddingTop: '0px',\r\n    paddingBottom: '0px',\r\n  },\r\n  root: {\r\n    position: 'sticky',\r\n    top: '110px',\r\n  },\r\n  selected: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? lighten(theme.palette.primary.main, 0.75)\r\n        : darken(theme.palette.primary.main, 0.75),\r\n    borderLeftColor: theme.palette.primary.main,\r\n  },\r\n});\r\n\r\nclass ProfileTabList extends React.Component<\r\n  IProfileTabListProps,\r\n  IProfileTabListState\r\n  > {\r\n  public render() {\r\n    const { classes, currentTab, handleClick, tabs } = this.props;\r\n    return (\r\n      <Paper className={classes.root} elevation={4}>\r\n        <List className={classes.profileTabList}>\r\n          {tabs\r\n            .filter(t => isNaN(parseInt(t, 10)))\r\n            .map((tab, index) => (\r\n              <ListItem\r\n                key={index}\r\n                onClick={() => handleClick(tab as TabTypes)}\r\n                className={classnames(\r\n                  currentTab === tab\r\n                    ? classes.selected\r\n                    : classes.listItemHoverable,\r\n                  classes.listItem\r\n                )}\r\n              >\r\n                <ListItemText primary={tab} />\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileTabList);\r\n","export enum ResultStatusTypes {\r\n  NOT_SUBMITTED = 'NOT_SUBMITTED',\r\n  SUBMITTED = 'SUBMITTED',\r\n  ACCEPTED = 'ACCEPTED',\r\n  ANSWERED = 'ANSWERED',\r\n  RESOLVED = 'RESOLVED'\r\n}\r\n\r\nexport interface IQuestion {\r\n  content: string;\r\n  created_at: string;\r\n  id: number;\r\n  solved: boolean;\r\n  title: string;\r\n  updated_at: string;\r\n  user_id: number;\r\n  tags: number[];\r\n  is_dirty: boolean;\r\n  question_status: IQuestionStatus;\r\n}\r\n\r\nexport interface IQuestionStatus {\r\n  created_at: string;\r\n  id: number;\r\n  mentor_id: number | null;\r\n  question_id: number;\r\n  status: ResultStatusTypes;\r\n  updated_at: string;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport ProfileContainer, { TabTypes } from '../Profile/ProfileContainer';\r\n\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ISettings } from '../../interfaces/Settings';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\n\r\nexport interface IProfilePageProps extends WithStyles<typeof styles> {\r\n  answers: IAnswer[];\r\n  setAnswers: (answers: IAnswer[]) => void;\r\n  questions: IQuestion[];\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  editUser: (user: IUser) => void;\r\n  currentTab: TabTypes;\r\n  mentorDialogOpen: boolean;\r\n  handleFinishLoading: () => void;\r\n  setTimeZone: (timeZone: string) => void;\r\n  tags: ITag[];\r\n  toggleTheme: () => void;\r\n  user: IUser;\r\n  userSettings: ISettings;\r\n}\r\n\r\nexport interface IProfilePageState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: '-90px',\r\n    display: 'flex',\r\n  },\r\n});\r\n\r\nclass ProfilePage extends React.Component<\r\n  IProfilePageProps,\r\n  IProfilePageState\r\n  > {\r\n  public componentDidMount() {\r\n    this.props.handleFinishLoading();\r\n  }\r\n  public render() {\r\n    const { classes, handleFinishLoading, ...rest } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} justify={'center'}>\r\n          <ProfileContainer {...rest} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfilePage);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Button,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport axios from 'axios';\r\n\r\nenum MentorQueueStatus {\r\n  NOT_IN_QUEUE,\r\n  IN_QUEUE,\r\n  BUSY,\r\n}\r\n\r\nconst queueButtonText: { [key in MentorQueueStatus]: string } = {\r\n  [MentorQueueStatus.NOT_IN_QUEUE]: 'Join Question Queue',\r\n  [MentorQueueStatus.IN_QUEUE]: 'Leave Queue',\r\n  [MentorQueueStatus.BUSY]: 'Question in Progress',\r\n};\r\n\r\nconst queueButtonClass: { [key in MentorQueueStatus]: string } = {\r\n  [MentorQueueStatus.NOT_IN_QUEUE]: 'queueDefault',\r\n  [MentorQueueStatus.IN_QUEUE]: 'queueReady',\r\n  [MentorQueueStatus.BUSY]: 'queueBusy',\r\n};\r\n\r\nexport interface INavBarMentorStatusProps extends WithStyles<typeof styles> {\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface INavBarMentorStatusState {\r\n  interval: NodeJS.Timeout | null;\r\n  pending: boolean;\r\n  queueStatus: MentorQueueStatus;\r\n  timeInQueue: number;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  '@keyframes spin': {\r\n    from: { transform: 'rotate(0deg)' },\r\n    to: { transform: 'rotate(360deg)' },\r\n  },\r\n  queueDefault: {\r\n    color: theme.palette.primary.main,\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n  queueReady: {\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  queueBusy: {\r\n    backgroundColor: 'red',\r\n  },\r\n  pendingIcon: {\r\n    animationName: '$spin',\r\n  },\r\n  timeInQueue: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    textAlign: 'right',\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  queueTimer: {\r\n    fontSize: '1em',\r\n    width: '100%'\r\n  },\r\n  queueLabel: {\r\n    fontSize: '0.75em',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass NavBarMentorStatus extends React.Component<\r\n  INavBarMentorStatusProps,\r\n  INavBarMentorStatusState\r\n  > {\r\n  public state = {\r\n    interval: null,\r\n    pending: false,\r\n    queueStatus: MentorQueueStatus.NOT_IN_QUEUE,\r\n    timeInQueue: 0,\r\n  };\r\n\r\n  public startTimer = () => {\r\n    const interval = setInterval(\r\n      () =>\r\n        this.setState((prevState) => ({\r\n          timeInQueue: prevState.timeInQueue + 1,\r\n        })),\r\n      1000\r\n    );\r\n    this.setState({ interval });\r\n  };\r\n\r\n  public stopAndClearTimer = () => {\r\n    const { interval } = this.state;\r\n\r\n    if (interval) {\r\n      clearInterval(interval);\r\n      this.setState({ timeInQueue: 0 });\r\n    }\r\n  };\r\n\r\n  public setToInQueue = () => {\r\n    this.setState({ queueStatus: MentorQueueStatus.IN_QUEUE }, () =>\r\n      this.startTimer()\r\n    );\r\n  };\r\n\r\n  public setToNotInQueue = () => {\r\n    this.setState({ queueStatus: MentorQueueStatus.NOT_IN_QUEUE }, () =>\r\n      this.stopAndClearTimer()\r\n    );\r\n  };\r\n\r\n  public setToBusy = () => {\r\n    this.setState({ queueStatus: MentorQueueStatus.BUSY }, () =>\r\n      this.stopAndClearTimer()\r\n    );\r\n  };\r\n\r\n  public setQueueStatus = (status: MentorQueueStatus) => {\r\n    this.setState({ pending: true }, () => {\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/join_queue',\r\n      })\r\n        .then(() => {\r\n          const setStatusMap: { [key in MentorQueueStatus]: () => void } = {\r\n            [MentorQueueStatus.IN_QUEUE]: this.setToInQueue,\r\n            [MentorQueueStatus.NOT_IN_QUEUE]: this.setToNotInQueue,\r\n            [MentorQueueStatus.BUSY]: this.setToBusy,\r\n          };\r\n          setStatusMap[status]();\r\n        })\r\n        .catch((err: any) => console.log(err))\r\n        .finally(() => this.setState({ pending: false }));\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { pending, queueStatus, timeInQueue } = this.state;\r\n    const { classes } = this.props;\r\n    const nextStatus =\r\n      queueStatus === MentorQueueStatus.NOT_IN_QUEUE\r\n        ? MentorQueueStatus.IN_QUEUE\r\n        : MentorQueueStatus.NOT_IN_QUEUE;\r\n    return (\r\n      <>\r\n        {queueStatus !== MentorQueueStatus.NOT_IN_QUEUE &&\r\n          <div className={classes.timeInQueue}>\r\n            <Typography className={classes.queueLabel} variant=\"caption\">Time in Queue:</Typography>\r\n            <Typography className={classes.queueTimer}>{timeInQueue}</Typography>\r\n          </div>\r\n        }\r\n        {pending ? (\r\n          <Button className={classes.pendingBtn} disabled={true}>\r\n            <Settings className={classes.pendingIcon} /> Working\r\n          </Button>\r\n        ) : (\r\n            <Button\r\n              onClick={() => this.setQueueStatus(nextStatus)}\r\n              className={classes[queueButtonClass[queueStatus]]}\r\n              variant='outlined'\r\n            >\r\n              {queueButtonText[queueStatus]}\r\n            </Button>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBarMentorStatus);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Chip,\r\n  IconButton,\r\n  Paper,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Tooltip,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\r\n\r\nimport Check from '@material-ui/icons/Check';\r\nimport Close from '@material-ui/icons/Close';\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport InputContainer from '../Input/InputContainer';\r\nimport Send from '@material-ui/icons/Send';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport axios from 'axios';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\nexport interface IResultProps extends WithStyles<typeof styles> {\r\n  answers: IAnswer[];\r\n  user: IUser;\r\n  result: IQuestion;\r\n  tags: ITag[];\r\n  updateQuestionAnswer: (answer: IAnswer) => void;\r\n}\r\n\r\nexport interface IResultState {\r\n  answerText: string;\r\n}\r\n\r\nconst resultStatusText: { [key in ResultStatusTypes]: string } = {\r\n  'NOT_SUBMITTED': 'Not submitted',\r\n  'SUBMITTED': 'Connecting with a Mentor',\r\n  'ACCEPTED': 'A Mentor is currently answering your question',\r\n  'ANSWERED':\r\n    \"Your question has been answered. If you are not satisfied with your answer, add a comment and select 'Resubmit'\",\r\n  'RESOLVED': 'Your question has been answered.',\r\n};\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  answerActionsContainer: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  },\r\n  answerActions: {\r\n    marginLeft: 'auto'\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    borderColor: theme.palette.primary.main,\r\n    borderWidth: '1px',\r\n    borderStyle: 'solid',\r\n    marginRight: theme.spacing.unit / 2,\r\n    marginBottom: theme.spacing.unit / 2,\r\n  },\r\n  root: {\r\n    padding: theme.spacing.unit * 2,\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n    width: '100%',\r\n  },\r\n  resultHeader: {\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  resultContent: {\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    paddingTop: '16.5px',\r\n    paddingBottom: '16.5px',\r\n    color: theme.palette.text.primary,\r\n    wordWrap: 'break-word',\r\n    outline: 'none',\r\n    resize: 'none',\r\n    width: 'calc(100% - 24px)',\r\n    fontFamily: 'monospace',\r\n    '&::placeholder': {\r\n      opacity: 0.65,\r\n      color: theme.palette.text.primary,\r\n    }\r\n  },\r\n  rejectAction: {\r\n    color: '#dc3545',\r\n    '&:hover': {\r\n      backgroundColor: lighten('#dc3545', 0.75)\r\n    }\r\n  },\r\n  answerAccepted: {\r\n    color: 'green'\r\n  },\r\n  answerRejected: {\r\n    color: '#dc3545'\r\n  }\r\n});\r\n\r\nclass Result extends React.Component<IResultProps, IResultState> {\r\n  public state = {\r\n    answerText: ''\r\n  };\r\n\r\n  public getTagById = (id: number) => {\r\n    const { tags } = this.props;\r\n    const len = tags.length;\r\n    let result = {} as { id: number; name: string };\r\n    for (let i = 0; i < len; i += 1) {\r\n      if (tags[i].id === id) {\r\n        result = tags[i];\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  public _handleAnswerChange = (ev: any) => {\r\n    this.setState({ answerText: ev.target.value });\r\n  };\r\n\r\n  public _handleSubmit = () => {\r\n    if (this.submitIsDisabled()) {\r\n      return;\r\n    } else {\r\n      const { answerText } = this.state;\r\n      const { result } = this.props;\r\n      axios({\r\n        method: 'post',\r\n        url: `/api/questions/${result.id}/answers`,\r\n        params: {\r\n          content: answerText\r\n        }\r\n      })\r\n        .then((res) => console.log(res))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  public _handleAcceptAnswer = (aid: number) => {\r\n    const { updateQuestionAnswer } = this.props;\r\n    axios({\r\n      method: 'put',\r\n      url: `/api/answers/${aid}`,\r\n      params: {\r\n        selected: true\r\n      }\r\n    })\r\n      .then((result) => {\r\n        const { data } = result;\r\n        updateQuestionAnswer(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  public _handleRejectAnswer = (aid: number) => {\r\n    const { updateQuestionAnswer } = this.props;\r\n    axios({\r\n      method: 'put',\r\n      url: `/api/answers/${aid}`,\r\n      params: {\r\n        selected: false\r\n      }\r\n    })\r\n      .then((result) => {\r\n        const { data } = result;\r\n        updateQuestionAnswer(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  public submitIsDisabled = () => {\r\n    const { answerText } = this.state;\r\n    const { result } = this.props;\r\n\r\n    if (answerText.length === 0) { return true; }\r\n    if (result.question_status.status !== ResultStatusTypes.ACCEPTED) { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  public render() {\r\n    const { answerText } = this.state;\r\n    const { answers, classes, user, result } = this.props;\r\n    return (\r\n      <Paper className={classes.root} elevation={4}>\r\n        {(user.is_mentor && result.question_status.mentor_id === user.id) ? (\r\n          <>\r\n            <div className={classes.resultContent}>\r\n              <Typography variant=\"caption\">\r\n                <strong>Question:</strong>\r\n              </Typography>\r\n              {result.title && (\r\n                <InputContainer>\r\n                  <textarea\r\n                    readOnly={true}\r\n                    value={result.title}\r\n                    className={classes.input}\r\n                  />\r\n                </InputContainer>\r\n              )}\r\n              <InputContainer>\r\n                <TextareaAutosize\r\n                  readOnly={true}\r\n                  value={result.content}\r\n                  className={classes.input}\r\n                />\r\n              </InputContainer>\r\n              {result.tags.map((tag) => {\r\n                return (\r\n                  <Chip\r\n                    key={tag}\r\n                    className={classes.chip}\r\n                    label={this.getTagById(tag).name}\r\n                  />\r\n                );\r\n              })}\r\n              <Typography align=\"right\" variant=\"caption\">\r\n                <strong>Submitted:</strong>{' '}\r\n                {new Date(result.created_at).toLocaleDateString()}{' '}\r\n                {new Date(result.created_at).toLocaleTimeString()}\r\n              </Typography>\r\n            </div>\r\n            {answers.length > 0 &&\r\n              <div className={classes.resultContent}>\r\n                <Typography variant='caption'>\r\n                  <strong>Previous Answers:</strong>\r\n                </Typography>\r\n                {answers.map((ans, index) => (\r\n                  <InputContainer key={index}>\r\n                    <TextareaAutosize\r\n                      readOnly={true}\r\n                      value={ans.content}\r\n                      className={classes.input}\r\n                    />\r\n                  </InputContainer>\r\n                ))}\r\n              </div>\r\n            }\r\n            <div className={classes.resultContent}>\r\n              <Typography variant='caption'>\r\n                <strong>Your Answer:</strong>\r\n              </Typography>\r\n              <InputContainer>\r\n                <TextareaAutosize\r\n                  className={classes.input}\r\n                  name='answer'\r\n                  placeholder='Enter Answer'\r\n                  autoFocus={true}\r\n                  required={true}\r\n                  value={answerText}\r\n                  onChange={this._handleAnswerChange}\r\n                />\r\n                <Tooltip title='Submit Answer' placement='right'>\r\n                  <IconButton\r\n                    className={classes.inputIcon}\r\n                    onClick={this._handleSubmit}\r\n                    disabled={this.submitIsDisabled()}\r\n                    tabIndex={-1}\r\n                  >\r\n                    <Send />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </InputContainer>\r\n            </div>\r\n          </>\r\n        ) : (\r\n            <>\r\n              <div className={classes.resultHeader}>\r\n                <Typography variant=\"h5\" style={{ fontVariant: 'small-caps' }}>\r\n                  Your Question has been submitted...\r\n              </Typography>\r\n                <Typography variant=\"caption\">\r\n                  Status: {resultStatusText[result.question_status.status]}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.resultContent}>\r\n                <Typography variant=\"caption\">\r\n                  <strong>Your Question:</strong>\r\n                </Typography>\r\n                {result.title && (\r\n                  <InputContainer>\r\n                    <textarea\r\n                      readOnly={true}\r\n                      value={result.title}\r\n                      className={classes.input}\r\n                    />\r\n                  </InputContainer>\r\n                )}\r\n                <InputContainer>\r\n                  <TextareaAutosize\r\n                    readOnly={true}\r\n                    value={result.content}\r\n                    className={classes.input}\r\n                  />\r\n                </InputContainer>\r\n                {result.tags.map((tag) => {\r\n                  return (\r\n                    <Chip\r\n                      key={tag}\r\n                      className={classes.chip}\r\n                      label={this.getTagById(tag).name}\r\n                    />\r\n                  );\r\n                })}\r\n                <Typography align=\"right\" variant=\"caption\">\r\n                  <strong>Submitted:</strong>{' '}\r\n                  {new Date(result.created_at).toLocaleDateString()}{' '}\r\n                  {new Date(result.created_at).toLocaleTimeString()}\r\n                </Typography>\r\n              </div>\r\n              {answers.length > 0 && !user.is_mentor &&\r\n                <div className={classes.resultContent}>\r\n                  <Typography variant='caption'>\r\n                    <strong>Answers:</strong>\r\n                  </Typography>\r\n                  {answers.map((ans, index) => {\r\n                    return (\r\n                      <div key={index} className={classes.answer}>\r\n                        <InputContainer>\r\n                          <TextareaAutosize\r\n                            readOnly={true}\r\n                            value={ans.content}\r\n                            className={classes.input}\r\n                          />\r\n                        </InputContainer>\r\n                        <div className={classes.answerActionsContainer}>\r\n                          {index === 0 ? (\r\n                            ans.selected === false ? (\r\n                              <div className={classes.answerActions}>\r\n                                <Tooltip title='Accept Answer'>\r\n                                  <IconButton color='primary' onClick={() => this._handleAcceptAnswer(ans.id)}>\r\n                                    <Check />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title='Reject Answer' onClick={() => this._handleRejectAnswer(ans.id)}>\r\n                                  <IconButton className={classes.rejectAction}>\r\n                                    <Close />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </div>\r\n                            ) : (\r\n                                <Typography variant='caption' className={classes.answerAccepted}><strong>Status: Accepted</strong></Typography>\r\n                              )\r\n                          ) : (\r\n                              <Typography variant='caption' className={classes.answerRejected}><strong>Status: Rejected</strong></Typography>\r\n                            )}\r\n\r\n                        </div>\r\n                        {index !== answers.length - 1 && <hr />}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              }\r\n            </>\r\n          )}\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Result);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\r\nimport { getAnswersByQuestionId, getQuestionByQuestionId } from '../../api';\r\n\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport Result from './Result';\r\nimport axios from 'axios';\r\nimport classnames from 'classnames';\r\nimport posed from 'react-pose';\r\n\r\nexport interface IResultContainerProps extends WithStyles<typeof styles> {\r\n  handleFinishLoading: () => void;\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  questions: IQuestion[];\r\n  user: IUser;\r\n  tags: ITag[];\r\n  questionId: string;\r\n}\r\n\r\nexport interface IResultContainerState {\r\n  answers: IAnswer[];\r\n  visible: boolean;\r\n  question: IQuestion;\r\n}\r\n\r\nconst TRANSITION_DURATION = 350;\r\n\r\nconst OpacityContainer = posed.div({\r\n  hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\r\n  visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\r\n});\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  vCenter: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n  },\r\n  container: {\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nclass ResultContainer extends React.Component<\r\n  IResultContainerProps,\r\n  IResultContainerState\r\n  > {\r\n  public signal = axios.CancelToken.source();\r\n\r\n  public state = {\r\n    answers: [] as IAnswer[],\r\n    visible: false,\r\n    question: {} as IQuestion\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getQuestionData();\r\n  }\r\n\r\n  public getQuestionData = () => {\r\n    const { handleFinishLoading, questions, setQuestions, questionId } = this.props;\r\n    if (questionId) {\r\n      const qid = parseInt(questionId, 10);\r\n      getQuestionByQuestionId(qid, (question) => {\r\n        const newQuestions = [...questions];\r\n        const qIndex = newQuestions.findIndex(q => q.id === qid);\r\n        if (qIndex !== -1) {\r\n          newQuestions[qIndex] = question;\r\n          setQuestions(newQuestions);\r\n        }\r\n        this.setState({ question }, () => {\r\n          const qstatus = question.question_status.status;\r\n          if (qstatus === ResultStatusTypes.ANSWERED || qstatus === ResultStatusTypes.RESOLVED) {\r\n            getAnswersByQuestionId(qid, (answers) => {\r\n              this.setState({ answers, visible: true });\r\n              handleFinishLoading();\r\n            });\r\n          } else {\r\n            handleFinishLoading();\r\n            this.setState({ visible: true });\r\n          }\r\n        });\r\n      }, this.signal);\r\n    }\r\n  };\r\n\r\n  public updateQuestionAnswer = (answer: IAnswer) => {\r\n    const newAnswers = [...this.state.answers];\r\n    const aIndex = newAnswers.findIndex(a => a.id === answer.id);\r\n    if (aIndex !== -1) {\r\n      newAnswers[aIndex] = answer;\r\n    }\r\n    this.setState({ answers: newAnswers });\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.signal.cancel('Result status request cancelled');\r\n  }\r\n\r\n  public render() {\r\n    const { answers, visible, question } = this.state;\r\n    const { classes, questionId, user, tags } = this.props;\r\n    return (\r\n      <Grid item={true} xs={12} sm={6} md={4} lg={4} className={classes.root}>\r\n        {questionId ? (\r\n          <OpacityContainer\r\n            className={classnames(classes.container, classes.vCenter)}\r\n            pose={visible ? 'visible' : 'hidden'}\r\n          >\r\n            {visible && question && <Result answers={answers} result={question} tags={tags} user={user} updateQuestionAnswer={this.updateQuestionAnswer} />}\r\n          </OpacityContainer>\r\n        ) : (\r\n            <div>no questionId provided</div>\r\n          )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ResultContainer);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport ResultContainer from '../Result/ResultContainer';\r\n\r\nexport interface IResultPageProps extends WithStyles<typeof styles> {\r\n  handleFinishLoading: () => void;\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  questions: IQuestion[];\r\n  user: IUser;\r\n  questionId: string;\r\n  tags: ITag[];\r\n}\r\n\r\nexport interface IResultPageState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    marginTop: '-45px',\r\n  },\r\n});\r\n\r\nclass ResultPage extends React.Component<IResultPageProps, IResultPageState> {\r\n  public render() {\r\n    const { classes, handleFinishLoading, questionId, user, questions, tags, setQuestions } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container={true} justify={'center'}>\r\n          <ResultContainer tags={tags} questions={questions} setQuestions={setQuestions} handleFinishLoading={handleFinishLoading} questionId={questionId} user={user} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ResultPage);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  CircularProgress,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  StaticContext,\r\n  Switch,\r\n  withRouter,\r\n} from 'react-router';\r\n\r\nimport AuthPage from '../Pages/AuthPage';\r\nimport { IAnswer } from '../../interfaces/Answer';\r\nimport { IQuestion } from '../../interfaces/Question';\r\nimport { ISettings } from '../../interfaces/Settings';\r\nimport { ITag } from '../../interfaces/Tag';\r\nimport { IUser } from '../../interfaces/User';\r\nimport MainPage from '../Pages/MainPage';\r\nimport MentorPage from '../Pages/MentorPage';\r\nimport ProfilePage from '../Pages/ProfilePage';\r\nimport ResultPage from '../Pages/ResultPage';\r\nimport { TabTypes } from '../Profile/ProfileContainer';\r\nimport axios from 'axios';\r\nimport classnames from 'classnames';\r\n\r\nexport interface IMainContentProps {\r\n  addQuestion: (question: IQuestion) => void;\r\n  editUser: (user: IUser) => void;\r\n  handleSignIn: (user: IUser) => void;\r\n  setTimeZone: (timeZone: string) => void;\r\n  toggleTheme: () => void;\r\n  user: IUser | null;\r\n  userSettings: ISettings;\r\n  questions: IQuestion[];\r\n  answers: IAnswer[];\r\n  setQuestions: (questions: IQuestion[]) => void;\r\n  setAnswers: (answers: IAnswer[]) => void;\r\n}\r\n\r\nexport interface IMainContentState {\r\n  loading: boolean;\r\n  tags: ITag[];\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    marginTop: '90px',\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    width: '25%',\r\n    height: '25%',\r\n    margin: 'auto',\r\n  },\r\n  switchContainer: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nclass MainContent extends React.Component<\r\n  RouteComponentProps<any> & WithStyles<any> & IMainContentProps,\r\n  IMainContentState\r\n  > {\r\n  public state = {\r\n    loading: true,\r\n    tags: [] as ITag[],\r\n  };\r\n\r\n  public componentDidMount() {\r\n    axios('/api/tags').then((result) => {\r\n      const { data } = result;\r\n      this.setState({ tags: data });\r\n    });\r\n  }\r\n\r\n  public handleFinishedLoading = () => {\r\n    console.log('Finished loading!');\r\n    this.isNotLoading();\r\n  };\r\n\r\n  public handleStartLoading = () => {\r\n    console.log('Loading data!');\r\n    this.isLoading();\r\n  };\r\n\r\n  public isLoading = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  public isNotLoading = () => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  public render() {\r\n    const {\r\n      classes,\r\n      editUser,\r\n      setTimeZone,\r\n      toggleTheme,\r\n      user,\r\n      userSettings,\r\n      answers,\r\n      setAnswers,\r\n      questions,\r\n      setQuestions,\r\n      addQuestion\r\n    } = this.props;\r\n    const { loading, tags } = this.state;\r\n    const homePage = () => {\r\n      return (\r\n        <MainPage\r\n          addQuestion={addQuestion}\r\n          handleFinishLoading={this.handleFinishedLoading}\r\n          tags={tags}\r\n        />\r\n      );\r\n    };\r\n    const authPage = () => {\r\n      return (\r\n        <AuthPage\r\n          handleFinishLoading={this.handleFinishedLoading}\r\n          handleSignIn={this.props.handleSignIn}\r\n        />\r\n      );\r\n    };\r\n    const resultPage = (\r\n      props: RouteComponentProps<any, StaticContext, any>\r\n    ) => {\r\n      const { questionId } = props.match.params;\r\n      return user ? (\r\n        <ResultPage key={questionId} tags={tags} setQuestions={setQuestions} questions={questions} questionId={questionId} user={user} handleFinishLoading={this.handleFinishedLoading} />\r\n      ) : (\r\n          <Redirect to='/login' />\r\n        );\r\n    };\r\n\r\n    const mentorPage = () => {\r\n      return <MentorPage tags={tags} />;\r\n    };\r\n\r\n    const profilePage = (\r\n      props: RouteComponentProps<any, StaticContext, any>\r\n    ) => {\r\n      const { location } = props;\r\n      const { state } = location;\r\n      return user ? (\r\n        <ProfilePage\r\n          questions={questions}\r\n          answers={answers}\r\n          setQuestions={setQuestions}\r\n          setAnswers={setAnswers}\r\n          currentTab={state ? state.currentTab && state.currentTab : TabTypes.Home}\r\n          editUser={editUser}\r\n          mentorDialogOpen={state ? state.mentorDialogOpen && state.mentorDialogOpen : false}\r\n          handleFinishLoading={this.handleFinishedLoading}\r\n          setTimeZone={setTimeZone}\r\n          tags={tags}\r\n          toggleTheme={toggleTheme}\r\n          user={user}\r\n          userSettings={userSettings}\r\n        />\r\n      ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <>\r\n          {loading && (\r\n            <div className={classes.loadingContainer}>\r\n              <CircularProgress className={classes.loading} size={96} />\r\n            </div>\r\n          )}\r\n          <div\r\n            className={classnames(\r\n              classes.switchContainer,\r\n              loading && classes.hidden\r\n            )}\r\n          >\r\n            <Switch>\r\n              <Route\r\n                exact={true}\r\n                path=\"/\"\r\n                render={() => {\r\n                  return user ? homePage() : <Redirect to=\"/login\" />;\r\n                }}\r\n              />\r\n              <Route path=\"/login\" render={authPage} />\r\n              <Route path=\"/profile\" render={(props) => profilePage(props)} />\r\n              <Route path=\"/queue\" render={mentorPage} />\r\n              <Route\r\n                path=\"/results/:questionId\"\r\n                render={(props) => resultPage(props)}\r\n              />\r\n              <Route key='empty' path=\"/empty\" render={(props) => {\r\n                return <Redirect to={`${props.location.state.previous}`} />\r\n              }} />\r\n            </Switch>\r\n          </div>\r\n        </>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(MainContent));\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Toolbar,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface INavBarToolbarProps extends WithStyles<typeof styles> {\r\n  logoColor: string;\r\n}\r\n\r\nexport interface INavBarToolbarState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  appBarLogo: {\r\n    height: '64px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto'\r\n  },\r\n  marginLeftAuto: {\r\n    marginLeft: 'auto',\r\n    display: 'flex'\r\n  },\r\n});\r\n\r\nclass NavBarToolbar extends React.Component<\r\n  INavBarToolbarProps,\r\n  INavBarToolbarState\r\n  > {\r\n  public render() {\r\n    const { classes, logoColor } = this.props;\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        <Link to=\"/\">\r\n          <img\r\n            className={classes.appBarLogo}\r\n            src={`https://s3.ca-central-1.amazonaws.com/conch-resources/conch_logo_${logoColor}.png`}\r\n          />\r\n        </Link>\r\n        <div className={classes.marginLeftAuto}>{this.props.children}</div>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBarToolbar);\r\n","import {\r\n  AppBar,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\n\r\nimport { ThemeTypes } from '../AppContainer/AppContainer';\r\nimport NavBarToolbar from './NavBarToolbar';\r\n\r\nexport interface INavBarProps {\r\n  isTransparent: boolean;\r\n  theme: ThemeTypes;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport interface INavBarState {\r\n  scrollTop: number;\r\n}\r\n\r\nexport const DRAWER_WIDTH = 280;\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    height: '90px',\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBarShift: {\r\n    marginLeft: DRAWER_WIDTH,\r\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarTransparent: {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    boxShadow: 'none',\r\n  },\r\n  appBarLogo: {\r\n    height: '64px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n  },\r\n  marginLeftAuto: {\r\n    marginLeft: 'auto',\r\n    display: 'flex',\r\n  },\r\n  addressContainer: {\r\n    marginRight: theme.spacing.unit * 4,\r\n    '& > p,h3,span': {\r\n      color: 'white',\r\n    },\r\n    '& > h3': {\r\n      fontSize: '1rem',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  addressLabel: {\r\n    textAlign: 'right',\r\n  },\r\n  lightIcon: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  darkIcon: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n});\r\n\r\nclass NavBar extends React.Component<\r\n  WithStyles<any> & INavBarProps,\r\n  INavBarState\r\n> {\r\n  public state = {\r\n    scrollTop: 0,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    window.addEventListener('scroll', () => {\r\n      this.setState({ scrollTop: document.documentElement.scrollTop });\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const { scrollTop } = this.state;\r\n    const { children, classes, isTransparent, theme } = this.props;\r\n    const localIsTransparent = isTransparent || scrollTop === 0;\r\n    const logoColor = theme === ThemeTypes.LIGHT ? 'purple' : 'white';\r\n    return (\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={classNames(\r\n          classes.appBar,\r\n          localIsTransparent && classes.appBarTransparent\r\n        )}\r\n      >\r\n        <NavBarToolbar logoColor={logoColor}>{children}</NavBarToolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Avatar,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { IUser } from '../../interfaces/User';\r\n\r\nexport interface IAccountMenuSummaryProps extends WithStyles<typeof styles> {\r\n  user: IUser;\r\n}\r\n\r\nexport interface IAccountMenuSummaryState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  avatar: {\r\n    height: '40px',\r\n    width: '40px',\r\n    borderRadius: '5px',\r\n  },\r\n  root: {\r\n    padding: theme.spacing.unit * 2,\r\n    paddingTop: theme.spacing.unit,\r\n    display: 'flex',\r\n  },\r\n  userInfo: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  userNickName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  userStatus: {},\r\n});\r\n\r\nclass AccountMenuSummary extends React.Component<\r\n  IAccountMenuSummaryProps,\r\n  IAccountMenuSummaryState\r\n  > {\r\n  public render() {\r\n    const { classes, user } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Avatar className={classes.avatar} src={user.avatar_url} />\r\n        <div className={classes.userInfo}>\r\n          <Typography className={classes.userNickName}>\r\n            {user.nickname}\r\n          </Typography>\r\n          <Typography className={classes.userStatus} variant=\"caption\">\r\n            {user.is_mentor ? 'Mentor' : 'Client'}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AccountMenuSummary);\r\n","import * as React from 'react';\r\n\r\nimport { Avatar, Menu, MenuItem, StyleRulesCallback, Theme, WithStyles, withStyles } from '@material-ui/core';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nimport AccountMenuSummary from './AccountMenuSummary';\r\nimport { IUser } from '../../interfaces/User';\r\nimport { ThemeTypes } from '../../themes/mainTheme';\r\nimport classnames from 'classnames';\r\nimport { darken } from '@material-ui/core/styles/colorManipulator';\r\n\r\nexport interface INavBarAccountProps extends WithStyles<typeof styles> {\r\n  anchorEl: HTMLElement | undefined;\r\n  handleClick: (event: any) => void;\r\n  handleClose: (callback?: () => void) => void;\r\n  handleSignOut: () => void;\r\n  isTransparent: boolean;\r\n  theme: ThemeTypes;\r\n  user: IUser | null;\r\n}\r\n\r\nexport interface INavBarAccountState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n  avatar: {\r\n    margin: 'auto',\r\n    borderRadius: '5px',\r\n  },\r\n  accountMenuButtonContainer: {\r\n    display: 'flex',\r\n    '& .root:hover': {\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n    },\r\n  },\r\n  accountMenuButton: {\r\n    color: theme.palette.primary.main,\r\n    fontSize: '1.25rem',\r\n    fontWeight: 'bold',\r\n  },\r\n  whiteText: {\r\n    '& *': {\r\n      color: 'white',\r\n    },\r\n  },\r\n  verticalDivider: {\r\n    marginLeft: '15px',\r\n    marginRight: '15px',\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n    fontSize: '1.5rem',\r\n    fontWeight: 'lighter',\r\n  },\r\n  menuList: {\r\n    marginTop: '60px',\r\n  },\r\n  spacing: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n  },\r\n  userAccount: {\r\n    display: 'flex',\r\n    cursor: 'pointer',\r\n    padding: theme.spacing.unit / 2,\r\n    '&:hover': {\r\n      backgroundColor: darken(theme.palette.background.default, 0.1),\r\n    },\r\n  },\r\n});\r\n\r\nclass NavBarAccount extends React.Component<\r\n  RouteComponentProps<any> & INavBarAccountProps,\r\n  INavBarAccountState\r\n  > {\r\n  public render() {\r\n    const {\r\n      anchorEl,\r\n      classes,\r\n      handleClick,\r\n      handleClose,\r\n      handleSignOut,\r\n      location,\r\n      theme,\r\n      user,\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          classes.navBarAccountContainers,\r\n          theme === ThemeTypes.DARK && classes.whiteText\r\n        )}\r\n      >\r\n        {location.pathname === '/login' ||\r\n          location.pathname === '/register' ? null : user &&\r\n          <>\r\n            <div className={classes.spacing}>\r\n              <div className={classes.userAccount} onClick={handleClick}>\r\n                <Avatar className={classes.avatar} src={user.avatar_url} />\r\n              </div>\r\n            </div>\r\n            <Menu\r\n              id=\"accountOptions-menu\"\r\n              className={classes.accountMenu}\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={() => handleClose()}\r\n              classes={{\r\n                paper: classes.menuList,\r\n              }}\r\n            >\r\n              <AccountMenuSummary user={user} />\r\n              <Link\r\n                className={classes.link}\r\n                to=\"/profile\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                <MenuItem>Profile</MenuItem>\r\n              </Link>\r\n              <MenuItem onClick={() => handleClose(handleSignOut)}>\r\n                Sign Out\r\n              </MenuItem>\r\n            </Menu>\r\n          </>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(NavBarAccount));\r\n","import * as React from 'react';\r\n\r\nimport { Badge, IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport List from '@material-ui/icons/List';\r\nimport { TabTypes } from '../Profile/ProfileContainer';\r\n\r\nexport interface INavBarListQuestionsProps extends WithStyles<typeof styles> {\r\n  unread: number;\r\n}\r\n\r\nexport interface INavBarListQuestionsState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nclass NavBarListQuestions extends React.Component<RouteComponentProps<any> & INavBarListQuestionsProps, INavBarListQuestionsState> {\r\n  public render() {\r\n    const { location, unread } = this.props;\r\n    return (\r\n      <Tooltip title='My Questions'>\r\n        <Link to={{\r\n          pathname: '/profile',\r\n          state: { currentTab: TabTypes.Home }\r\n        }}\r\n          replace={location.pathname === '/profile'}>\r\n          <IconButton>\r\n            <Badge badgeContent={unread} color='primary'>\r\n              <List />\r\n            </Badge>\r\n          </IconButton>\r\n        </Link>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(NavBarListQuestions));\r\n","import * as React from 'react';\r\n\r\nimport { IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\nimport School from '@material-ui/icons/School';\r\nimport { TabTypes } from '../Profile/ProfileContainer';\r\n\r\nexport interface INavBarMentorSignUpProps extends WithStyles<typeof styles> {\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface INavBarMentorSignUpState {\r\n  placeholder?: string;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nclass NavBarMentorSignUp extends React.Component<RouteComponentProps<any> & INavBarMentorSignUpProps, INavBarMentorSignUpState> {\r\n  public render() {\r\n    const { location } = this.props;\r\n    console.log(location.pathname);\r\n    return (\r\n      <Tooltip title='Become a Mentor'>\r\n        <Link to={{\r\n          pathname: '/profile',\r\n          state: { currentTab: TabTypes.Settings, mentorDialogOpen: true }\r\n        }}\r\n          replace={location.pathname === '/profile'}>\r\n          <IconButton>\r\n            <School />\r\n          </IconButton>\r\n        </Link>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(NavBarMentorSignUp));\r\n","import {\r\n  MuiThemeProvider,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport * as React from 'react';\r\n\r\nimport { mainTheme } from '../../themes/mainTheme';\r\nimport App from '../App/App';\r\nimport {\r\n  ISettings,\r\n  INumberSettings,\r\n  IStringSettings,\r\n} from '../../interfaces/Settings';\r\n\r\nexport enum ThemeTypes {\r\n  LIGHT,\r\n  DARK,\r\n}\r\n\r\nexport interface IAppContainerProps {\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface IAppContainerState {\r\n  userSettings: ISettings;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nclass AppContainer extends React.Component<\r\n  WithStyles<any> & IAppContainerProps,\r\n  IAppContainerState\r\n> {\r\n  public state = {\r\n    userSettings: {\r\n      themeType: ThemeTypes.LIGHT,\r\n    } as ISettings,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getAllSettings();\r\n  }\r\n\r\n  public getAllSettings = () => {\r\n    const { userSettings } = this.state;\r\n\r\n    const defaultNumberSettings: INumberSettings = {\r\n      themeType: ThemeTypes.LIGHT,\r\n    };\r\n\r\n    const defaultStringSettings: IStringSettings = {\r\n      timeZone: 'America/Toronto',\r\n    };\r\n\r\n    Object.keys(defaultNumberSettings).map((key) => {\r\n      const localSetting =\r\n        localStorage.getItem(key) || defaultNumberSettings[key];\r\n      const asNumber = parseInt(localSetting, 10);\r\n      userSettings[key] = asNumber;\r\n      this.setState({ userSettings });\r\n    });\r\n\r\n    Object.keys(defaultStringSettings).map((key) => {\r\n      const localSetting =\r\n        localStorage.getItem(key) || defaultStringSettings[key];\r\n      userSettings[key] = localSetting;\r\n      this.setState({ userSettings });\r\n    });\r\n  };\r\n\r\n  public toggleTheme = () => {\r\n    const newSettings = { ...this.state.userSettings };\r\n    newSettings.themeType = 1 - newSettings.themeType;\r\n    this.setState({ userSettings: newSettings }, () =>\r\n      localStorage.setItem('themeType', `${newSettings.themeType}`)\r\n    );\r\n  };\r\n\r\n  public setTimeZone = (timeZone: string) => {\r\n    const newSettings = { ...this.state.userSettings };\r\n    newSettings.timeZone = timeZone;\r\n    this.setState({ userSettings: newSettings }, () =>\r\n      localStorage.setItem('timeZone', `${newSettings.timeZone}`)\r\n    );\r\n  };\r\n\r\n  public render() {\r\n    const { userSettings } = this.state;\r\n    const { themeType } = userSettings;\r\n    const currentTheme = mainTheme(themeType);\r\n    return (\r\n      <MuiThemeProvider theme={currentTheme}>\r\n        <App\r\n          toggleTheme={this.toggleTheme}\r\n          setTimeZone={this.setTimeZone}\r\n          userSettings={userSettings}\r\n        />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AppContainer);\r\n","import { AnswerStatusTypes, IAnswer } from '../../interfaces/Answer';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Snackbar,\r\n  SnackbarContent,\r\n  StyleRulesCallback,\r\n  Theme,\r\n  WithStyles,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\r\nimport React, { Component } from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { getAnswersByUserId, getQuestionsByUserId } from '../../api';\r\n\r\nimport Close from '@material-ui/icons/Close';\r\nimport FooterContainer from '../Footer/FooterContainer';\r\nimport { IPNMessage } from '../../interfaces/Message';\r\nimport { ISettings } from '../../interfaces/Settings';\r\nimport { IUser } from '../../interfaces/User';\r\nimport { Link } from 'react-router-dom';\r\nimport MainContent from '../MainContent/MainContent';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport NavBarAccount from '../NavBar/NavBarAccount';\r\nimport NavBarListQuestions from '../NavBar/NavBarListQuestions';\r\nimport NavBarMentorSignUp from '../NavBar/NavBarMentorSignUp';\r\nimport NavBarMentorStatus from '../NavBar/NavBarMentorStatus';\r\nimport PubNubReact from 'pubnub-react';\r\nimport axios from 'axios';\r\n\r\nexport interface IAppState {\r\n  answers: IAnswer[];\r\n  loading: boolean;\r\n  navBarAnchorEl: HTMLElement | undefined;\r\n  pn_messages: { [index: string]: IPNMessage[] };\r\n  questions: IQuestion[];\r\n  snackbarQuestionId: number | undefined;\r\n  snackbarOpen: boolean;\r\n  snackbarText: string;\r\n  user: IUser | null;\r\n}\r\n\r\nexport interface IAppProps {\r\n  toggleTheme: () => void;\r\n  setTimeZone: (timeZone: string) => void;\r\n  userSettings: ISettings;\r\n}\r\n\r\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    width: '25%',\r\n    height: '25%',\r\n    margin: 'auto',\r\n  },\r\n});\r\n\r\nclass App extends Component<\r\n  RouteComponentProps<any> & WithStyles<any> & IAppProps,\r\n  IAppState\r\n  > {\r\n  public pubNub: PubNubReact;\r\n  constructor(props: RouteComponentProps<any> & WithStyles<any> & IAppProps) {\r\n    super(props);\r\n    this.state = {\r\n      answers: [] as IAnswer[],\r\n      pn_messages: {},\r\n      loading: true,\r\n      snackbarQuestionId: undefined,\r\n      snackbarOpen: false,\r\n      snackbarText: 'placeholder text',\r\n      questions: [] as IQuestion[],\r\n      navBarAnchorEl: undefined,\r\n      user: null,\r\n    }\r\n    this.pubNub = new PubNubReact({\r\n      publishKey: process.env.REACT_APP_PN_PUBLISH_KEY,\r\n      subscribeKey: process.env.REACT_APP_PN_SUBSCRIBE_KEY\r\n    });\r\n\r\n    this.pubNub.init(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    axios({\r\n      method: 'post',\r\n      url: '/login',\r\n      params: {},\r\n    })\r\n      .then((result) => {\r\n        const { data } = result;\r\n        const { id, avatar_url, nickname, email, phone, is_mentor, tags } = data;\r\n        this.handleSignIn({\r\n          id,\r\n          nickname,\r\n          email,\r\n          phone,\r\n          avatar_url,\r\n          is_mentor,\r\n          tags\r\n        });\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => this.finishLoading());\r\n  };\r\n\r\n  public componentWillUnmount() {\r\n    const { user } = this.state;\r\n\r\n    if (user) {\r\n      const channels: string[] = [];\r\n      const baseChannel = `user-${(user as IUser).id}`;\r\n      if (user.is_mentor) {\r\n        const mentorChannel = `${baseChannel}-mentor`;\r\n        channels.push(mentorChannel);\r\n      }\r\n      const clientChannel = `${baseChannel}-client`;\r\n      channels.push(clientChannel);\r\n      this.pubNub.unsubscribe({\r\n        channels\r\n      });\r\n    }\r\n  };\r\n\r\n  public finishLoading = () => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  public navBarHandleClick = (event: any) => {\r\n    this.setState({ navBarAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  public navBarHandleClose = (callback?: () => void) => {\r\n    this.setState({ navBarAnchorEl: undefined }, callback);\r\n  };\r\n\r\n  public handleSignIn = (user: IUser) => {\r\n    const { location, history } = this.props;\r\n    if (!user.avatar_url || user.avatar_url === '') {\r\n      user.avatar_url =\r\n        'https://www.wittenberg.edu/sites/default/files/2017-11/nouser_0.jpg';\r\n    }\r\n    this.setState({ user }, () => {\r\n      this.pubNubSub();\r\n      this.getUserData(() => {\r\n        if (location.pathname === '/login' || location.pathname === '/register') {\r\n          history.push('/');\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  public getUserData = (callback: () => void) => {\r\n    const { user } = this.state;\r\n    if (user) {\r\n      getQuestionsByUserId(user.id, (questions) => {\r\n        this.setQuestions(questions);\r\n      });\r\n      if (user.is_mentor) {\r\n        getAnswersByUserId(user.id, (answers) => {\r\n          this.setAnswers(answers);\r\n        });\r\n      }\r\n    }\r\n    this.setState({ loading: false });\r\n    console.log('[getUserData] callback');\r\n    callback();\r\n  };\r\n\r\n  public setQuestions = (questions: IQuestion[]) => {\r\n    this.setState({ questions });\r\n  };\r\n\r\n  public addQuestion = (question: IQuestion) => {\r\n    const newQuestions = [...this.state.questions, question];\r\n    this.setState({ questions: newQuestions });\r\n  }\r\n\r\n  public setAnswers = (answers: IAnswer[]) => {\r\n    this.setState({ answers });\r\n  }\r\n\r\n  public pubNubSub = () => {\r\n    const { user } = this.state;\r\n\r\n    if (user) {\r\n      const channels: string[] = [];\r\n      const baseChannel = `user-${(user as IUser).id}`;\r\n      const mentorChannel = `${baseChannel}-mentor`;\r\n      if (user.is_mentor) {\r\n        channels.push(mentorChannel);\r\n      }\r\n      const clientChannel = `${baseChannel}-client`;\r\n      channels.push(clientChannel);\r\n      this.pubNub.subscribe({\r\n        channels\r\n      });\r\n\r\n      // @ts-ignore\r\n      this.pubNub.getMessage(clientChannel, (msg: any) => {\r\n        this.handlePubNubMsgAsClient(msg);\r\n      });\r\n\r\n      if (user.is_mentor) {\r\n        // @ts-ignore\r\n        this.pubNub.getMessage(mentorChannel, (msg: any) => {\r\n          this.handlePubNubMsgAsMentor(msg);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  public handlePubNubMsgAsClient = (msg: any) => {\r\n    const { location } = this.props;\r\n    const { message } = msg;\r\n    const { status, question_id } = message;\r\n    if (Object.keys(AnswerStatusTypes).includes(status)) {\r\n      const text = 'If you are getting this message, please contact support. Client channels should not receive updates about answer statuses.';\r\n      this.setState({\r\n        snackbarQuestionId: question_id,\r\n        snackbarOpen: true,\r\n        snackbarText: text\r\n      });\r\n    } else {\r\n      const questionStatusText: { [key in ResultStatusTypes]: string } = {\r\n        'NOT_SUBMITTED': 'This should never show up!',\r\n        'SUBMITTED': 'Your question has been submitted. Should never show up!',\r\n        'ACCEPTED': 'Your question has been accepted by a mentor. Awaiting answer...',\r\n        'ANSWERED': 'Your question has been answered by a mentor. Please accept or reject the answer.',\r\n        'RESOLVED': 'Your question has been resolved successfully.'\r\n      };\r\n\r\n      this.setState({\r\n        snackbarQuestionId: question_id,\r\n        snackbarOpen: true,\r\n        snackbarText: questionStatusText[status],\r\n      });\r\n\r\n      if (location.pathname === `/results/${question_id}`) {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  };\r\n\r\n  public handlePubNubMsgAsMentor = (msg: any) => {\r\n    console.log('[handlePubNubMsgAsMentor]');\r\n    const { message } = msg;\r\n    const { status, question_id } = message;\r\n\r\n    if (Object.keys(AnswerStatusTypes).includes(status)) {\r\n      const text = status === AnswerStatusTypes.PASSED ?\r\n        'One of your answers has been declined.' : 'One of your answers has been accepted.';\r\n      console.log(status, AnswerStatusTypes.PASSED);\r\n      this.setState({\r\n        snackbarQuestionId: question_id,\r\n        snackbarOpen: true,\r\n        snackbarText: text\r\n      })\r\n    } else {\r\n      const questionStatusText: { [key in ResultStatusTypes]: string } = {\r\n        'NOT_SUBMITTED': 'This should never show up!',\r\n        'SUBMITTED': 'Your question has been submitted. Should never show up!',\r\n        'ACCEPTED': 'You have been assigned to a question. Good luck!',\r\n        'ANSWERED': 'You have submitted your answer to a question. Probably don\\'t need to show this.',\r\n        'RESOLVED': 'One of your questions has been accepted. This is from the question side, can probably remove'\r\n      };\r\n      this.setState({\r\n        snackbarQuestionId: question_id,\r\n        snackbarOpen: true,\r\n        snackbarText: questionStatusText[status],\r\n      });\r\n    }\r\n  };\r\n\r\n  public handleSignOut = () => {\r\n    axios({\r\n      method: 'post',\r\n      url: '/logout',\r\n    })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => {\r\n        this.setState({ user: null }, () => this.props.history.push('/'));\r\n      });\r\n  };\r\n\r\n  public editUser = (newUser: IUser) => {\r\n    this.setState({ user: newUser });\r\n  };\r\n\r\n  public handleSnackbarClose = () => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  public render() {\r\n    const { answers, navBarAnchorEl, loading, snackbarOpen, snackbarQuestionId, snackbarText, questions, user } = this.state;\r\n    const {\r\n      classes,\r\n      location,\r\n      setTimeZone,\r\n      toggleTheme,\r\n      userSettings,\r\n    } = this.props;\r\n    const { themeType } = userSettings;\r\n    const isTransparent = location.pathname === '/';\r\n    return (\r\n      <div className={classes.root}>\r\n        {loading ? (\r\n          <div className={classes.loadingContainer}>\r\n            <CircularProgress className={classes.loading} size={96} />\r\n          </div>\r\n        ) : (\r\n            <>\r\n              <NavBar\r\n                isTransparent={isTransparent}\r\n                toggleTheme={toggleTheme}\r\n                theme={themeType}\r\n              >\r\n                {user ? (\r\n                  (user as IUser).is_mentor ? (\r\n                    <NavBarMentorStatus />\r\n                  ) : (\r\n                      <>\r\n                        <NavBarListQuestions unread={questions.filter(q => q.is_dirty).length} />\r\n                        <NavBarMentorSignUp />\r\n                      </>\r\n                    )\r\n                ) : null}\r\n                <NavBarAccount\r\n                  anchorEl={navBarAnchorEl}\r\n                  handleClick={this.navBarHandleClick}\r\n                  handleClose={this.navBarHandleClose}\r\n                  handleSignOut={this.handleSignOut}\r\n                  isTransparent={isTransparent}\r\n                  theme={themeType}\r\n                  user={user}\r\n                />\r\n              </NavBar>\r\n              <MainContent\r\n                user={user}\r\n                userSettings={userSettings}\r\n                handleSignIn={this.handleSignIn}\r\n                setTimeZone={setTimeZone}\r\n                toggleTheme={toggleTheme}\r\n                editUser={this.editUser}\r\n                questions={questions}\r\n                answers={answers}\r\n                addQuestion={this.addQuestion}\r\n                setQuestions={this.setQuestions}\r\n                setAnswers={this.setAnswers}\r\n              />\r\n              <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center'\r\n                }}\r\n                open={snackbarOpen}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleSnackbarClose}\r\n              >\r\n                <SnackbarContent\r\n                  className={classes.snackbarContent}\r\n                  message={\r\n                    <span id=\"client-snackbar\" className={classes.snackbarMessage}>\r\n                      🐚 {snackbarText}\r\n                    </span>\r\n                  }\r\n                  action={[\r\n                    <Link key={snackbarQuestionId} to={`/results/${snackbarQuestionId}`} style={{ textDecoration: 'none' }}>\r\n                      <Button color='primary' variant='text' size='small'>Go To Question</Button>\r\n                    </Link>,\r\n                    <IconButton\r\n                      key='close'\r\n                      color='inherit'\r\n                      onClick={this.handleSnackbarClose}\r\n                    >\r\n                      <Close />\r\n                    </IconButton>\r\n                  ]}\r\n                />\r\n              </Snackbar>\r\n              <FooterContainer theme={themeType} toggleTheme={toggleTheme} />\r\n            </>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(App));\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport red from '@material-ui/core/colors/red';\r\nimport { ThemeTypes } from '../components/AppContainer/AppContainer';\r\n\r\nconst mainTheme = (type: ThemeTypes) => {\r\n  const typeString = type === ThemeTypes.LIGHT ? 'light' : 'dark';\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: typeString,\r\n      primary: {\r\n        main: purple[300],\r\n      },\r\n      secondary: pink,\r\n      error: red,\r\n      contrastThreshold: 3,\r\n      tonalOffset: 0.2,\r\n    },\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n  });\r\n  return theme;\r\n};\r\n\r\nexport { mainTheme, ThemeTypes };\r\n","import './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport AppContainer from './components/AppContainer/AppContainer';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n// import { whyDidYouUpdate } from 'why-did-you-update';\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n//   whyDidYouUpdate(React);\r\n// }\r\n\r\n// axios.defaults.baseURL = process.env.REACT_APP_BACKEND_BASE_URL;\r\n// axios.defaults.headers.common.Authorization = 'AUTH TOKEN';\r\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\naxios.interceptors.request.use(\r\n  (req) => {\r\n    console.log(`[Request Success]`);\r\n    console.log(req);\r\n    return req;\r\n  },\r\n  (err) => {\r\n    console.log(`[Request Error]`);\r\n    console.log(err);\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (res) => {\r\n    console.log(`[Response Success]`);\r\n    console.log(res);\r\n    return res;\r\n  },\r\n  (err) => {\r\n    console.log(`[Response Error]`);\r\n    console.log(err);\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nconst devApp = (\r\n  <HashRouter>\r\n    <AppContainer />\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(\r\n  devApp,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
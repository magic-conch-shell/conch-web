{"version":3,"sources":["serviceWorker.ts","interfaces/Answer.ts","components/Auth/AuthFormContainer.tsx","api/index.ts","components/Footer/Footer.tsx","components/Footer/FooterContainer.tsx","components/MainSearch/MainSearchInput.tsx","components/Auth/AuthContainer.tsx","components/Pages/AuthPage.tsx","components/Input/InputContainer.tsx","components/MainSearch/MainSearch.tsx","components/MainSearch/MainSearchSelect.tsx","components/MainSearch/MainSearchTagContainer.tsx","components/MainSearch/MainSearchTitle.tsx","components/Profile/ProfileContainer.tsx","components/MainSearch/MainSearchContainer.tsx","components/Pages/MainPage.tsx","components/Mentor/MentorContainer.tsx","components/Pages/MentorPage.tsx","components/List/QuestionList.tsx","components/Profile/ContentPages/Home.tsx","components/List/AnswerList.tsx","components/Profile/ContentPages/MentorPanel.tsx","components/Dialog/MentorRegistration.tsx","components/Profile/ContentPages/Settings.tsx","components/Profile/ProfileContent.tsx","components/Profile/ProfileTabList.tsx","interfaces/Question.ts","components/Pages/ProfilePage.tsx","components/NavBar/NavBarMentorStatus.tsx","components/Result/Result.tsx","components/Result/ResultContainer.tsx","components/Pages/ResultPage.tsx","components/MainContent/MainContent.tsx","components/NavBar/NavBarToolbar.tsx","components/NavBar/NavBar.tsx","components/NavBar/AccountMenuSummary.tsx","components/NavBar/NavBarAccount.tsx","components/NavBar/NavBarListAnswers.tsx","components/NavBar/NavBarListQuestions.tsx","components/NavBar/NavBarMentorSignUp.tsx","components/AppContainer/AppContainer.tsx","components/App/App.tsx","themes/mainTheme.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","AnswerStatusTypes","SignInState","ResetPasswordState","SignUpState","getQuestionsByUserId","userId","callback","console","log","axios","method","url","concat","then","result","data","catch","err","getAnswersByUserId","getQuestionByQuestionId","questionId","signal","cancelToken","token","getAnswersByQuestionId","Footer","_this$props","this","props","classes","theme","toggleTheme","react","className","root","toggleThemeButtonContainer","index_es","onClick","ThemeTypes","LIGHT","FlashOn_default","a","lightIcon","DARK","FlashOff_default","darkIcon","React","withStyles","display","marginLeft","marginRight","marginBottom","FooterContainer","components_Footer_Footer","position","bottom","right","zIndex","InputState","signInText","_signInText","Object","defineProperty","SIGNED_IN","SIGNED_OUT","SIGNING_IN","signUpText","_signUpText","SIGNED_UP","SIGNING_UP","resetPasswordText","_resetPasswordText","NO_REQUEST","SENDING_REQUEST","RESQUEST_SENT","AuthFormContainer","state","nickname","email","password","loading","currentState","states","signIn","toggleText","linkText","errorText","signUp","resetPassword","handleNicknameChange","event","_this","setState","target","value","handleEmailChange","handlePasswordChange","handleSignIn","_this$state","params","id","avatar_url","userEmail","phone","is_mentor","tags","response","error","_this$state2","userNickname","submitForm","ev","preventDefault","_this$state3","handleChangeAuthDialogState","newState","showPasswordReset","toggleSignUp","getActiveText","s","activeText","_this2","_this$state4","activeState","authForm","onSubmit","fullWidth","length","required","formControl","htmlFor","autoFocus","type","autoComplete","onChange","input","style","variant","color","extraActions","role","forgotPassword","separator","backgroundColor","palette","background","paper","height","width","flexWrap","borderWidth","borderStyle","borderColor","primary","main","borderRadius","paddingTop","spacing","unit","paddingLeft","paddingRight","breakpoints","up","textAlign","padding","& > span","only","fontSize","&:hover","cursor","hidden","border","text","&::-webkit-autofill","default","AuthContainer","item","xs","sm","md","lg","Auth_AuthFormContainer","marginTop","AuthPage","handleFinishLoading","container","justify","Auth_AuthContainer","InputContainer","children","inputContainer","inputLeftPadding","light","boxShadow","margin","SubmissionState","rowCounts","_rowCounts","DEFAULT","min","EXPANDED","MainSearchInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputRef","disableInputIcon","handleHeightChange","inputState","setInputStateToExpanded","_handleChange","handleChange","_this$props2","content","handleSubmit","react_textarea_autosize_esm_browser","ref","onHeightChange","minRows","name","placeholder","title","placement","inputIcon","disabled","tabIndex","Send_default","paddingBottom","wordWrap","outline","resize","fontFamily","&::placeholder","opacity","inputElementsContainer","inputPadding","flex","OpacityContainer","posed","div","transition","duration","visible","MainSearchSelect","selectValue","handleSelectChange","stateAndHelpers","handleSelectTag","inputValue","handleSelectValueChange","selectedTags","downshift_esm","itemToString","_ref","getInputProps","getItemProps","getMenuProps","highlightedIndex","isOpen","selectedItem","clearSelection","inputValueLower","toLocaleLowerCase","inputProps","onBlur","assign","pose","selectMenu","elevation","filter","tag","includes","nameLower","slice","map","t","index","classnames","listItem","highlighted","key","selectedTagsContainer","maxHeight","overflowY","MainSearchTagContainer","getTagById","len","i","handleDelete","sid","handleDeleteTag","selectedTag","label","onDelete","deleteIcon","Clear_default","MainSearchTitle","TabTypes","TRANSITION_DURATION","LongOpacityContainer","HeightContainer","ease","expanded","stiffness","MainSearch","heightRef","addQuestion","setSubmissionStateToSubmitted","alert","toggleInputState","prevState","setInputStateToDefault","history","submissionState","SUBMITTED","setTimeout","push","setHeightRef","current","tagId","toConsumableArray","splice","indexOf","handleChangeContent","handleChangeTitle","MainSearch_OpacityContainer","Input_InputContainer","MainSearch_MainSearchTitle","onPoseComplete","MainSearch_MainSearchInput","MainSearch_MainSearchSelect","MainSearch_MainSearchTagContainer","withRouter","zindex","tagSelect","selectPadding","link","textDecoration","searchButton","textTransform","fontWeight","letterSpacing","MainSearchContainer","components_MainSearch_MainSearch","MainPage","MainSearch_MainSearchContainer","MentorContainer","MentorPage","Mentor_MentorContainer","QuestionList","handleLink","questions","table","tableHeader","tableRow","tableBody","sort","b","Date","created_at","question","createdAt","is_dirty","dirty","hover","toLocaleDateString","toLocaleTimeString","substr","chip","question_status","status","_thTd","_chip","lighten","darken","overflowX","loadingContainer","& > th,td","Home","user","contentContainer","List_QuestionList","divider","AnswerList","answers","answer","question_id","selected","toString","MentorPanel","_handleDeleteTag","editUser","newTags","newUser","objectSpread","_handleSelectTag","r","e","toggleMentorStatus","_this$props3","refreshAnswers","_this$props4","setAnswers","_this$props5","List_AnswerList","MentorRegistration","closeDialog","open","onClose","dialog","maxWidth","size","submitButton","Settings","nicknameText","passwordText","passwordConfirmText","passwordErrorText","mentorDialogOpen","tz","setTimeZone","handleTextChange","_changePassword","toggleMentorDialog","openMentorDialog","closeMentorDialog","userSettings","Dialog_MentorRegistration","control","checked","themeType","ProfileContent","getTabContent","currentTab","setQuestions","rest","objectWithoutProperties","ContentPages_Home","ContentPages_MentorPanel","ContentPages_Settings","full","ProfileTabList","handleClick","tabs","profileTabList","isNaN","parseInt","tab","listItemHoverable","borderLeftWidth","borderLeftColor","borderLeftStyle","top","ResultStatusTypes","ProfileContainer","uploadFile","file","dataset","directUploadUrl","DirectUpload","create","blob","dir","avatar","signed_id","changeCurrentTab","newTab","click","isNotLoading","handleStartLoading","isLoading","handleAvatarChange","files","getTabs","userTabs","values","profileHeader","profileAvatarInputContainer","src","accept","data-direct-upload-url","profileHeaderText","Profile_ProfileTabList","Profile_ProfileContent","_profileAvatarInputCo","transitions","easing","sharp","shortest","changeAvatarText","fontVariant","flexDirection","& > h3","& > h6","ProfilePage","Profile_ProfileContainer","MentorQueueStatus","resultStatusText","NOT_SUBMITTED","ACCEPTED","ANSWERED","RESOLVED","Result","answerText","_handleAnswerChange","_handleSubmit","submitIsDisabled","res","_handleAcceptAnswer","aid","updateQuestionAnswer","_handleRejectAnswer","mentor_id","resultContent","readOnly","align","ans","answerActionsContainer","answerAccepted","answerRejected","solved","resultHeader","answerActions","Check_default","rejectAction","Close_default","ResultContainer","CancelToken","source","getQuestionData","qid","newQuestions","qIndex","findIndex","q","qstatus","newAnswers","aIndex","cancel","ResultContainer_OpacityContainer","vCenter","components_Result_Result","ResultPage","Result_ResultContainer","MainContent","handleFinishedLoading","_this3","switchContainer","react_router","exact","path","render","Pages_MainPage","to","Pages_AuthPage","Pages_ProfilePage","profilePage","Pages_MentorPage","Pages_ResultPage","resultPage","previous","NavBarToolbar","logoColor","pathname","toolbarAuth","toolbar","react_router_dom","appBarLogoAuthPage","appBarLogo","marginLeftAuto","& > a","NavBar","scrollTop","addEventListener","document","documentElement","localIsTransparent","isTransparent","classNames","appBar","appBarTransparent","NavBar_NavBarToolbar","drawer","leavingScreen","appBarShift","addressContainer","& > p,h3,span","addressLabel","AccountMenuSummary","userInfo","userNickName","userStatus","NavBarAccount","anchorEl","handleClose","handleSignOut","navBarAccountContainers","whiteText","userAccount","accountMenu","menuList","NavBar_AccountMenuSummary","accountMenuButtonContainer","& .root:hover","accountMenuButton","& *","verticalDivider","NavBarListAnswers","unread","replace","badgeContent","Spellcheck_default","NavBarListQuestions","List_default","NavBarMentorSignUp","School_default","queueButtonText","_queueButtonText","NOT_IN_QUEUE","IN_QUEUE","BUSY","queueButtonClass","_queueButtonClass","queueButtonIcon","_queueButtonIcon","Input_default","Cancel_default","Warning_default","NavBarMentorStatus","interval","pending","queueStatus","timeInQueue","setStatus","setToInQueue","setToNotInQueue","setToBusy","startTimer","setInterval","stopAndClearTimer","clearInterval","toggleQueueStatus","finally","queryStatus","queueLabel","queueTimer","pendingBtn","Settings_default","pendingIcon","@keyframes spin","from","transform","queueDefault","queueReady","queueBusy","animationName","App","pubNub","finishLoading","navBarHandleClick","navBarAnchorEl","currentTarget","navBarHandleClose","undefined","pubNubSub","getUserData","channels","baseChannel","mentorChannel","clientChannel","subscribe","getMessage","msg","handlePubNubMsgAsClient","handlePubNubMsgAsMentor","Notification","permission","message","keys","snackbarQuestionId","snackbarOpen","snackbarText","reload","PASSED","handleSnackbarClose","pn_messages","PubNubReact","publishKey","subscribeKey","init","assertThisInitialized","requestPermission","unsubscribe","react_default","createElement","Fragment","components_NavBar_NavBar","NavBar_NavBarMentorStatus","NavBar_NavBarListAnswers","NavBar_NavBarListQuestions","NavBar_NavBarMentorSignUp","NavBar_NavBarAccount","components_MainContent_MainContent","anchorOrigin","vertical","horizontal","autoHideDuration","snackbarContent","snackbarMessage","action","Footer_FooterContainer","Component","minHeight","AppContainer","getAllSettings","defaultNumberSettings","defaultStringSettings","timeZone","localSetting","localStorage","getItem","asNumber","newSettings","setItem","currentTheme","typeString","createMuiTheme","purple","secondary","pink","red","contrastThreshold","tonalOffset","typography","useNextVariants","mainTheme","core_styles","components_App_App","defaults","baseURL","process","withCredentials","interceptors","request","use","req","Promise","reject","devApp","components_AppContainer_AppContainer","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f416e3e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum AnswerStatusTypes {\n  SELECTED = 'SELECTED',\n  PASSED = 'PASSED'\n}\n\nexport interface IAnswer {\n  content: string;\n  created_at: string;\n  id: number;\n  question_id: number;\n  selected: boolean;\n  updated_at: string;\n  user_id: number;\n}","import * as React from 'react';\n\nimport {\n  Button,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  StyleRulesCallback,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IUser } from '../../interfaces/User';\nimport axios from 'axios';\n\ninterface IFormState {\n  toggleText: string;\n  linkText: string;\n  errorText: string;\n  state: SignInState | SignUpState | ResetPasswordState | null;\n}\n\nenum SignInState {\n  SIGNED_IN,\n  SIGNED_OUT,\n  SIGNING_IN,\n}\n\nenum ResetPasswordState {\n  NO_REQUEST,\n  SENDING_REQUEST,\n  RESQUEST_SENT,\n}\n\nenum SignUpState {\n  SIGNED_UP,\n  SIGNING_UP,\n  SIGNED_OUT,\n}\n\nconst signInText: { [key in SignInState]: string } = {\n  [SignInState.SIGNED_IN]: 'Logged In',\n  [SignInState.SIGNED_OUT]: 'Log In',\n  [SignInState.SIGNING_IN]: 'Logging In',\n};\n\nconst signUpText: { [key in SignUpState]: string } = {\n  [SignUpState.SIGNED_UP]: 'Registered',\n  [SignUpState.SIGNING_UP]: 'Registering',\n  [SignUpState.SIGNED_OUT]: 'Register',\n};\n\nconst resetPasswordText: { [key in ResetPasswordState]: string } = {\n  [ResetPasswordState.NO_REQUEST]: 'Reset Password',\n  [ResetPasswordState.SENDING_REQUEST]: 'Sending',\n  [ResetPasswordState.RESQUEST_SENT]: 'Password Reset Sent',\n};\n\nexport type AuthDialogState = 'signIn' | 'signUp' | 'resetPassword';\n\nexport interface IAuthFormContainerProps extends WithStyles<typeof styles> {\n  handleSignIn: (user: IUser) => void;\n}\n\nexport interface IAuthFormContainerState {\n  nickname: string;\n  email: string;\n  password: string;\n  loading: boolean;\n  currentState: AuthDialogState;\n  states: { [key in AuthDialogState]: IFormState };\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: theme.palette.primary.main,\n    borderRadius: '10px',\n    paddingTop: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing.unit * 3,\n      paddingLeft: theme.spacing.unit * 3,\n      paddingRight: theme.spacing.unit * 3,\n    },\n  },\n  authForm: {\n    width: '100%',\n  },\n  extraActions: {\n    display: 'flex',\n    textAlign: 'center',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    padding: theme.spacing.unit,\n    '& > span': {\n      [theme.breakpoints.only('xs')]: {\n        fontSize: '10px !important'\n      }\n    }\n  },\n  formControl: {\n    [theme.breakpoints.up('sm')]: {\n      marginBottom: theme.spacing.unit * 2,\n    }\n  },\n  forgotPassword: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  hidden: {\n    display: 'none',\n  },\n  signUp: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  separator: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: theme.palette.text.primary,\n    '&::-webkit-autofill': {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nclass AuthFormContainer extends React.Component<\n  IAuthFormContainerProps,\n  IAuthFormContainerState\n  > {\n  public state = {\n    nickname: '',\n    email: '',\n    password: '',\n    loading: false,\n    currentState: 'signIn' as AuthDialogState,\n    states: {\n      signIn: {\n        toggleText: \"Don't have an account?\",\n        linkText: 'Register',\n        errorText: '',\n        state: SignInState.SIGNED_OUT,\n      },\n      signUp: {\n        toggleText: 'Already have an account?',\n        linkText: 'Log In',\n        errorText: '',\n        state: SignUpState.SIGNED_OUT,\n      },\n      resetPassword: {\n        toggleText: 'Remember your password?',\n        linkText: 'Log In',\n        errorText: '',\n        state: ResetPasswordState.NO_REQUEST,\n      },\n    },\n  };\n\n  public handleNicknameChange = (event: any) => {\n    this.setState({ nickname: event.target.value });\n  };\n\n  public handleEmailChange = (event: any) => {\n    this.setState({ email: event.target.value });\n  };\n\n  public handlePasswordChange = (event: any) => {\n    this.setState({ password: event.target.value });\n  };\n\n  public signIn = () => {\n    console.log('[signIn]');\n    const { handleSignIn } = this.props;\n    const { email, password, states } = this.state;\n    const { signIn } = states;\n\n    axios({\n      method: 'post',\n      url: '/login',\n      params: {\n        email,\n        password,\n      },\n    })\n      .then((result) => {\n        console.log('[signIn].then');\n        const { data } = result;\n        const {\n          id,\n          avatar_url,\n          nickname,\n          email: userEmail,\n          phone,\n          is_mentor,\n          tags\n        } = data;\n        handleSignIn({\n          id,\n          nickname,\n          email: userEmail,\n          phone,\n          avatar_url,\n          is_mentor,\n          tags\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          const { error } = err.response.data;\n          signIn.state = SignInState.SIGNED_OUT;\n          signIn.errorText = error;\n          this.setState({ states });\n        }\n      });\n  };\n\n  public signUp = () => {\n    const { handleSignIn } = this.props;\n    const { nickname, email, password, states } = this.state;\n    const { signUp } = states;\n\n    axios({\n      method: 'post',\n      url: '/register',\n      params: {\n        nickname,\n        email,\n        password,\n      },\n    })\n      .then((result) => {\n        const { data } = result;\n        const {\n          id,\n          avatar_url,\n          nickname: userNickname,\n          email: userEmail,\n          phone,\n          is_mentor,\n          tags\n        } = data;\n        handleSignIn({\n          id,\n          nickname: userNickname,\n          email: userEmail,\n          phone,\n          avatar_url,\n          is_mentor,\n          tags\n        });\n        signUp.state = SignUpState.SIGNED_UP;\n        this.setState({ states });\n      })\n      .catch((err) => {\n        if (err.response) {\n          const { error } = err.response.data;\n          signUp.state = SignUpState.SIGNED_OUT;\n          signUp.errorText = error;\n          this.setState({ states });\n        }\n      });\n  };\n\n  public submitForm = (ev?: any) => {\n    if (ev) {\n      ev.preventDefault();\n    }\n    const { currentState, states } = this.state;\n    const { signIn, signUp } = states;\n    if (currentState === 'signIn') {\n      signIn.state = SignInState.SIGNING_IN;\n      this.setState({ states }, () => {\n        this.signIn();\n      });\n    }\n    if (currentState === 'signUp') {\n      signUp.state = SignUpState.SIGNING_UP;\n      this.setState({ states }, () => {\n        this.signUp();\n      });\n    }\n    // if (authDialogState === 'resetPassword') {\n    //   this.sendPasswordReset();\n    // }\n  };\n\n  public handleChangeAuthDialogState = (newState: AuthDialogState) => {\n    this.setState({ currentState: newState });\n  };\n\n  public showPasswordReset = () => {\n    this.handleChangeAuthDialogState('resetPassword');\n  };\n\n  public toggleSignUp = () => {\n    const { currentState } = this.state;\n    currentState === 'signIn'\n      ? this.handleChangeAuthDialogState('signUp')\n      : this.handleChangeAuthDialogState('signIn');\n  };\n\n  public getActiveText = (\n    s: SignInState | SignUpState | ResetPasswordState | null,\n    a: AuthDialogState\n  ) => {\n    let activeText = '';\n    if (s !== null) {\n      switch (a) {\n        case 'signIn':\n          activeText = signInText[s];\n          break;\n        case 'signUp':\n          activeText = signUpText[s];\n          break;\n        case 'resetPassword':\n          activeText = resetPasswordText[s];\n          break;\n        default:\n          break;\n      }\n    } else {\n      console.log('aaaa');\n    }\n    return activeText;\n  };\n\n  public render() {\n    const { currentState, email, nickname, password, states } = this.state;\n    const { classes } = this.props;\n    const activeState = states[currentState].state;\n    const errorText = states[currentState].errorText;\n    const toggleText = states[currentState].toggleText;\n    const linkText = states[currentState].linkText;\n    const activeText = this.getActiveText(activeState, currentState);\n    return (\n      <div className={classes.root}>\n        <form\n          className={classes.authForm}\n          onSubmit={(ev) => this.submitForm(ev)}\n          id=\"auth-form\"\n        >\n          {currentState === 'signUp' && (\n            <FormControl\n              fullWidth={true}\n              error={errorText.length > 0}\n              required={true}\n              className={classes.formControl}\n            >\n              <InputLabel htmlFor=\"inputNickname\">Nickname</InputLabel>\n              <Input\n                id=\"inputNickname\"\n                value={nickname}\n                autoFocus={true}\n                type={'text'}\n                autoComplete={'username'}\n                onChange={this.handleNicknameChange}\n              />\n              <FormHelperText id=\"inputEmailError\">{errorText}</FormHelperText>\n            </FormControl>\n          )}\n          <FormControl\n            required={true}\n            fullWidth={true}\n            className={classes.formControl}\n            error={errorText.length > 0}\n          >\n            <InputLabel htmlFor=\"inputEmail\">Email Address</InputLabel>\n            <Input\n              id=\"inputEmail\"\n              value={email}\n              autoFocus={true}\n              type={'email'}\n              autoComplete={'email'}\n              onChange={this.handleEmailChange}\n              className={classes.input}\n            />\n            <FormHelperText id=\"inputEmailError\">{errorText}</FormHelperText>\n          </FormControl>\n          {currentState !== 'resetPassword' && (\n            <FormControl\n              required={true}\n              fullWidth={true}\n              className={classes.formControl}\n              error={errorText.length > 0}\n            >\n              <InputLabel htmlFor=\"inputPassword\">Password</InputLabel>\n              <Input\n                id=\"inputPassword\"\n                value={password}\n                type={'password'}\n                autoComplete={'current-password'}\n                onChange={this.handlePasswordChange}\n              />\n              <FormHelperText id=\"inputPasswordError\">\n                {errorText}\n              </FormHelperText>\n            </FormControl>\n          )}\n          <button style={{ display: 'none' }} type=\"submit\" />\n        </form>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth={true}\n          onClick={this.submitForm}\n        >\n          {activeText}\n        </Button>\n        <div className={classes.extraActions}>\n          {currentState !== 'resetPassword' && (\n            <>\n              <div\n                role=\"button\"\n                className={classes.forgotPassword}\n                onClick={this.showPasswordReset}\n              >\n                <Typography color=\"primary\" variant={'caption'}>\n                  Forgot Password?\n                </Typography>\n              </div>\n              <Typography className={classes.separator} variant={'caption'}>\n                &#8226;\n              </Typography>\n            </>\n          )}\n          <Typography variant={'caption'}>{toggleText}</Typography>\n          <div\n            role=\"button\"\n            className={classes.signUp}\n            onClick={this.toggleSignUp}\n          >\n            <Typography color=\"primary\" variant={'caption'}>\n              &nbsp;{linkText}\n            </Typography>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AuthFormContainer);\n","import axios, { CancelTokenSource } from 'axios';\n\nimport { IAnswer } from '../interfaces/Answer';\nimport { IQuestion } from '../interfaces/Question';\n\nconst getQuestionsByUserId = (userId: number, callback: (questions: IQuestion[]) => void) => {\n  console.log('[getQuestionsByUserId]');\n  axios({\n    method: 'get',\n    url: `/api/users/${userId}/questions`\n  })\n    .then((result) => {\n      const { data } = result;\n      callback(data);\n    })\n    .catch((err) => console.log(err));\n};\n\nconst getAnswersByUserId = (userId: number, callback: (answers: IAnswer[]) => void) => {\n  console.log('[getAnswersByUserId]');\n  axios({\n    method: 'get',\n    url: `/api/users/${userId}/answers`,\n  })\n    .then((result) => {\n      const { data } = result;\n      callback(data);\n    })\n    .catch((err) => console.log(err));\n};\n\nconst getQuestionByQuestionId = (questionId: number, callback: (question: IQuestion) => void, signal?: CancelTokenSource) => {\n  console.log('[getQuestionByQuestionId]');\n  axios({\n    method: 'get',\n    url: `/api/questions/${questionId}`,\n    cancelToken: signal && signal.token\n  })\n    .then((result) => {\n      const { data } = result;\n      callback(data);\n    })\n    .catch((err) => console.log(err));\n};\n\nconst getAnswersByQuestionId = (questionId: number, callback: (answers: IAnswer[]) => void) => {\n  console.log('[getAnswersByQuestionId]');\n  axios({\n    method: 'get',\n    url: `/api/questions/${questionId}/answers`\n  })\n    .then((result) => {\n      const { data } = result;\n      callback(data);\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport { getQuestionsByUserId, getAnswersByUserId, getQuestionByQuestionId, getAnswersByQuestionId };","import * as React from 'react';\n\nimport {\n  IconButton,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport FlashOff from '@material-ui/icons/FlashOff';\nimport FlashOn from '@material-ui/icons/FlashOn';\nimport { ThemeTypes } from '../AppContainer/AppContainer';\n\nexport interface IFooterProps extends WithStyles<typeof styles> {\n  theme: ThemeTypes;\n  toggleTheme: () => void;\n}\n\nexport interface IFooterState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toggleThemeButtonContainer: {\n    marginLeft: 'auto',\n    marginRight: '5px',\n    marginBottom: '5px',\n  },\n});\n\nclass Footer extends React.Component<IFooterProps, IFooterState> {\n  public render() {\n    const { classes, theme, toggleTheme } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className={classes.toggleThemeButtonContainer}>\n          <IconButton onClick={toggleTheme}>\n            {theme === ThemeTypes.LIGHT && (\n              <FlashOn className={classes.lightIcon} />\n            )}\n            {theme === ThemeTypes.DARK && (\n              <FlashOff className={classes.darkIcon} />\n            )}\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Footer);\n","import {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport * as React from 'react';\nimport { ThemeTypes } from '../AppContainer/AppContainer';\nimport Footer from './Footer';\n\nexport interface IFooterContainerProps extends WithStyles<typeof styles> {\n  theme: ThemeTypes;\n  toggleTheme: () => void;\n}\n\nexport interface IFooterContainerState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    zIndex: 10000,\n  },\n});\n\nclass FooterContainer extends React.Component<\n  IFooterContainerProps,\n  IFooterContainerState\n> {\n  public render() {\n    const { classes, theme, toggleTheme } = this.props;\n    return (\n      <div className={classes.root}>\n        <Footer theme={theme} toggleTheme={toggleTheme} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(FooterContainer);\n","import * as React from 'react';\n\nimport { IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\n\nimport Send from '@material-ui/icons/Send';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nexport interface IMainSearchInputProps extends WithStyles<typeof styles> {\n  content: string;\n  inputState: InputState;\n  handleChange: (content: string) => void;\n  handleSubmit: () => void;\n  setInputStateToDefault: () => void;\n  setInputStateToExpanded: () => void;\n  toggleInputState: () => void;\n}\n\nexport interface IMainSearchInputState {\n  disableInputIcon: boolean;\n}\n\nenum InputState {\n  DEFAULT,\n  EXPANDED,\n}\n\nconst rowCounts: { [key in InputState]: { min: number } } = {\n  [InputState.DEFAULT]: {\n    min: 1,\n  },\n  [InputState.EXPANDED]: {\n    min: 8,\n  },\n};\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    paddingTop: '16.5px',\n    paddingBottom: '16.5px',\n    color: theme.palette.text.primary,\n    wordWrap: 'break-word',\n    outline: 'none',\n    resize: 'none',\n    width: 'calc(100% - 24px)',\n    fontFamily: 'monospace',\n    '&::placeholder': {\n      opacity: 0.65,\n      color: theme.palette.text.primary,\n    },\n  },\n  inputIcon: {\n    '&:hover': {\n      backgroundColor: 'rgba(0,0,0,0)',\n    },\n  },\n  inputElementsContainer: {\n    display: 'flex',\n    width: '100%',\n  },\n  inputPadding: {\n    flex: 1,\n    display: 'flex',\n    paddingLeft: '20px',\n  },\n});\n\nclass MainSearchInput extends React.Component<\n  IMainSearchInputProps,\n  IMainSearchInputState\n  > {\n  public inputRef: HTMLTextAreaElement | null;\n  public state = {\n    disableInputIcon: false,\n  };\n  constructor(props: IMainSearchInputProps) {\n    super(props);\n    this.state = {\n      disableInputIcon: false,\n    };\n    this.inputRef = null;\n  }\n\n  public handleHeightChange = (height: any) => {\n    const { inputState, setInputStateToExpanded } = this.props;\n    if (this.inputRef) {\n      if (inputState === InputState.DEFAULT && height > 15) {\n        setInputStateToExpanded();\n      }\n    }\n  };\n\n  public _handleChange = (ev: any) => {\n    this.props.handleChange(ev.target.value);\n  };\n\n  public render() {\n    const { disableInputIcon } = this.state;\n    const { classes, content, handleSubmit, inputState } = this.props;\n    return (\n      <>\n        <TextareaAutosize\n          inputRef={(ref) => (this.inputRef = ref)}\n          className={classes.input}\n          onHeightChange={(height) => this.handleHeightChange(height)}\n          minRows={rowCounts[inputState].min}\n          name=\"question\"\n          placeholder=\"Ask a Question\"\n          autoFocus={true}\n          required={true}\n          value={content}\n          onChange={this._handleChange}\n        />\n        <Tooltip title={'Submit Question'} placement=\"right\">\n          <IconButton\n            className={classes.inputIcon}\n            onClick={handleSubmit}\n            disabled={disableInputIcon}\n            tabIndex={-1}\n          >\n            <Send />\n          </IconButton>\n        </Tooltip>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainSearchInput);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport AuthFormContainer from './AuthFormContainer';\nimport { IUser } from '../../interfaces/User';\n\nexport interface IAuthContainerProps extends WithStyles<typeof styles> {\n  handleSignIn: (user: IUser) => void;\n}\n\nexport interface IAuthContainerState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n});\n\nclass AuthContainer extends React.Component<\n  IAuthContainerProps,\n  IAuthContainerState\n  > {\n  public render() {\n    const { classes, handleSignIn } = this.props;\n    return (\n      <Grid item={true} xs={11} sm={6} md={4} lg={4} className={classes.root}>\n        <AuthFormContainer handleSignIn={handleSignIn} />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AuthContainer);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport AuthContainer from '../Auth/AuthContainer';\nimport { IUser } from '../../interfaces/User';\n\nexport interface IAuthPageProps extends WithStyles<typeof styles> {\n  handleFinishLoading: () => void;\n  handleSignIn: (user: IUser) => void;\n}\n\nexport interface IAuthPageState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    width: '100%',\n    marginTop: '-90px',\n    display: 'flex',\n    zIndex: 9999\n  },\n});\n\nclass AuthPage extends React.Component<IAuthPageProps, IAuthPageState> {\n  public componentDidMount() {\n    this.props.handleFinishLoading();\n  }\n  public render() {\n    const { classes, handleSignIn } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} justify={'center'}>\n          <AuthContainer handleSignIn={handleSignIn} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AuthPage);\n","import {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport * as React from 'react';\n\nexport interface IInputContainerProps extends WithStyles<typeof styles> {\n  placeholder?: string;\n}\n\nexport interface IInputContainerState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  inputLeftPadding: {\n    width: '100%',\n    display: 'flex',\n    paddingLeft: '20px',\n  },\n  inputContainer: {\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor: theme.palette.primary.light,\n    boxShadow: 'none',\n    borderRadius: '24px',\n    zIndex: 3,\n    margin: '8px auto',\n    height: '100%',\n  },\n});\n\nclass InputContainer extends React.Component<\n  IInputContainerProps,\n  IInputContainerState\n> {\n  public render() {\n    const { children, classes } = this.props;\n    return (\n      <div className={classes.inputContainer}>\n        <div className={classes.inputLeftPadding}>{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(InputContainer);\n","import * as React from 'react';\n\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IQuestion } from '../../interfaces/Question';\nimport { ITag } from '../../interfaces/Tag';\nimport InputContainer from '../Input/InputContainer';\nimport MainSearchInput from './MainSearchInput';\nimport MainSearchSelect from './MainSearchSelect';\nimport MainSearchTagContainer from './MainSearchTagContainer';\nimport MainSearchTitle from './MainSearchTitle';\nimport axios from 'axios';\nimport posed from 'react-pose';\n\nexport interface IMainSearchProps extends RouteComponentProps, WithStyles {\n  addQuestion: (question: IQuestion) => void;\n  tags: ITag[];\n}\n\nexport interface IMainSearchState {\n  content: string;\n  title: string;\n  inputState: InputState;\n  submissionState: SubmissionState;\n  selectedTags: number[];\n}\n\nenum InputState {\n  DEFAULT,\n  EXPANDED,\n}\n\nenum SubmissionState {\n  DEFAULT,\n  SUBMITTED,\n}\n\nconst TRANSITION_DURATION = 750;\n\nconst OpacityContainer = posed.div({\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n});\n\nconst LongOpacityContainer = posed.div({\n  hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\n  visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\n});\n\nconst HeightContainer = posed.div({\n  default: {\n    height: '50px',\n    transition: {\n      duration: 300,\n      ease: 'easeOut',\n    },\n  },\n  expanded: {\n    height: '155px',\n    transition: {\n      type: 'spring',\n      stiffness: 150,\n    },\n  },\n});\n\nexport type InputStates = 'default' | 'expanded';\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    zindex: 9999\n  },\n  tagSelect: {\n    width: '100%',\n    backgroundColor: 'white',\n  },\n  selectPadding: {\n    paddingRight: '12px',\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  searchButton: {\n    padding: '15px 30px 14px',\n    height: '60px',\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    borderRadius: '0px',\n    letterSpacing: 2,\n  },\n  selectedTagsContainer: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n});\n\nclass MainSearch extends React.Component<IMainSearchProps, IMainSearchState> {\n  public heightRef: React.RefObject<any>;\n\n  constructor(props: IMainSearchProps) {\n    super(props);\n    this.state = {\n      content: '',\n      title: '',\n      inputState: InputState.DEFAULT,\n      submissionState: SubmissionState.DEFAULT,\n      selectedTags: [] as number[],\n    };\n    this.heightRef = React.createRef();\n  }\n\n  public handleSubmit = (ev?: any) => {\n    if (ev) {\n      ev.preventDefault();\n    }\n    const { content, title, selectedTags } = this.state;\n    const { addQuestion } = this.props;\n    if (content.length > 0 && selectedTags.length > 0) {\n      axios({\n        method: 'post',\n        url: '/api/questions',\n        params: {\n          title,\n          content,\n          tags: selectedTags,\n        },\n      })\n        .then((result) => {\n          const { data } = result;\n          addQuestion(data);\n          const { id } = data;\n          this.setSubmissionStateToSubmitted(id);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      alert('Fill in the form! Replace me with actual error text in the form!');\n    }\n  };\n\n  public toggleInputState = () => {\n    this.setState((prevState) => ({ inputState: 1 - prevState.inputState }));\n  };\n\n  public setInputStateToDefault = () => {\n    this.setState({ inputState: InputState.DEFAULT });\n  };\n\n  public setInputStateToExpanded = () => {\n    this.setState({ inputState: InputState.EXPANDED });\n  };\n\n  public setSubmissionStateToSubmitted = (questionId: number) => {\n    const { history } = this.props;\n    this.setState({ submissionState: SubmissionState.SUBMITTED }, () =>\n      setTimeout(() => {\n        history.push(`/results/${questionId}`);\n      }, TRANSITION_DURATION)\n    );\n  };\n\n  public setHeightRef = () => {\n    this.heightRef.current.style.height = 'auto';\n  };\n\n  public handleSelectTag = (tagId: number) => {\n    this.setState({\n      selectedTags: [...this.state.selectedTags, tagId],\n    });\n  };\n  public handleDelete = (sid: number) => {\n    const selectedTags = [...this.state.selectedTags];\n    selectedTags.splice(selectedTags.indexOf(sid), 1);\n    this.setState({ selectedTags });\n  };\n\n  public handleChangeContent = (content: string) => {\n    this.setState({ content });\n  };\n\n  public handleChangeTitle = (title: string) => {\n    this.setState({ title });\n  };\n\n  public render() {\n    const {\n      selectedTags,\n      inputState,\n      title,\n      content,\n      submissionState,\n    } = this.state;\n    const { classes, tags } = this.props;\n    return (\n      <LongOpacityContainer\n        className={classes.root}\n        pose={\n          submissionState === SubmissionState.DEFAULT ? 'visible' : 'hidden'\n        }\n      >\n        <form onSubmit={this.handleSubmit}>\n          <OpacityContainer\n            pose={inputState === InputState.EXPANDED ? 'visible' : 'hidden'}\n          >\n            {inputState === InputState.EXPANDED && (\n              <InputContainer>\n                <MainSearchTitle\n                  key='title'\n                  title={title}\n                  handleChange={this.handleChangeTitle}\n                />\n              </InputContainer>\n            )}\n          </OpacityContainer>\n          <HeightContainer\n            ref={this.heightRef}\n            onPoseComplete={() => {\n              this.setHeightRef();\n            }}\n            pose={inputState === InputState.EXPANDED ? 'expanded' : 'default'}\n          >\n            <InputContainer>\n              <MainSearchInput\n                key='content'\n                inputState={inputState}\n                content={content}\n                handleChange={this.handleChangeContent}\n                handleSubmit={this.handleSubmit}\n                toggleInputState={this.toggleInputState}\n                setInputStateToDefault={this.setInputStateToDefault}\n                setInputStateToExpanded={this.setInputStateToExpanded}\n              />\n            </InputContainer>\n          </HeightContainer>\n          <div style={{ height: '50px' }}>\n            <InputContainer>\n              <MainSearchSelect\n                key='select'\n                handleSelectTag={this.handleSelectTag}\n                selectedTags={selectedTags}\n                tags={tags}\n              />\n            </InputContainer>\n          </div>\n          <MainSearchTagContainer\n            key='tags'\n            handleDeleteTag={this.handleDelete}\n            selectedTags={selectedTags}\n            tags={tags}\n          />\n          <button type=\"submit\" style={{ display: 'none' }} />\n        </form>\n      </LongOpacityContainer>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(MainSearch));\n","import * as React from 'react';\n\nimport Downshift, { ControllerStateAndHelpers } from 'downshift';\nimport {\n  Paper,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport classnames from 'classnames';\nimport posed from 'react-pose';\n\nexport interface IMainSearchSelectProps {\n  handleSelectTag: (tagId: number) => void;\n  selectedTags: number[];\n  tags: Array<{ id: number; name: string }>;\n}\n\nexport interface IMainSearchSelectState {\n  selectValue: string;\n}\n\nconst MAIN_TRANSITION_DURATION = 450;\n// const CHILD_TRANSITION_DURATION = 50;\n\nconst OpacityContainer = posed.div({\n  hidden: { opacity: 0, transition: { duration: MAIN_TRANSITION_DURATION } },\n  visible: { opacity: 1, transition: { duration: MAIN_TRANSITION_DURATION } },\n});\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  container: {\n    width: 'calc(100% - 12px)',\n    zIndex: 9999,\n    position: 'relative'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: theme.palette.text.primary,\n    wordWrap: 'break-word',\n    outline: 'none',\n    width: '100%',\n    fontFamily: 'monospace',\n    paddingTop: '16.5px',\n    paddingBottom: '16.5px',\n    '&::placeholder': {\n      opacity: 0.65,\n      color: theme.palette.text.primary,\n    },\n  },\n  listItem: {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 2,\n    display: 'block',\n    cursor: 'pointer',\n  },\n  selectedTagsContainer: {\n    marginTop: '8px',\n  },\n  paper: {\n    maxHeight: '300px',\n    overflowY: 'scroll'\n  },\n  highlighted: {\n    backgroundColor: theme.palette.background.default,\n  },\n  selectMenu: {\n    marginTop: '5px',\n    opacity: 0,\n  },\n});\n\nclass MainSearchSelect extends React.Component<\n  WithStyles<any> & IMainSearchSelectProps,\n  IMainSearchSelectState\n  > {\n  public state = {\n    selectValue: '',\n  };\n\n  public handleSelectChange = (item: { id: number; name: string }, stateAndHelpers: ControllerStateAndHelpers<any>) => {\n    this.props.handleSelectTag(item.id);\n    this.setState({\n      selectValue: '',\n    }, () => stateAndHelpers.setState({ inputValue: '' }));\n  };\n\n  public handleSelectValueChange = (ev: any) => {\n    this.setState({ selectValue: ev.target.value });\n  };\n\n  public render() {\n    const { classes, selectedTags, tags } = this.props;\n    return (\n      <>\n        <Downshift\n          id=\"downshift-select\"\n          onChange={this.handleSelectChange}\n          itemToString={(item) => (item ? item.name : '')}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            getMenuProps,\n            highlightedIndex,\n            inputValue,\n            isOpen,\n            selectedItem,\n            clearSelection,\n            setState,\n          }) => {\n            const inputValueLower =\n              inputValue && inputValue.toLocaleLowerCase();\n            const inputProps = getInputProps();\n            inputProps.onBlur = () => {\n              setState({\n                inputValue: ''\n              });\n            }\n            return (\n              <div className={classes.container}>\n                <input\n                  className={classes.input}\n                  {...inputProps}\n                  placeholder=\"Add a category\"\n                />\n                <div {...getMenuProps()}>\n                  <OpacityContainer\n                    pose={isOpen ? 'visible' : 'hidden'}\n                    className={classes.selectMenu}\n                  >\n                    {isOpen && (\n                      <Paper className={classes.paper} elevation={4}>\n                        {tags\n                          .filter((tag) => !selectedTags.includes(tag.id))\n                          .filter((tag) => {\n                            const { name } = tag;\n                            const nameLower = name.toLocaleLowerCase();\n                            const result =\n                              !inputValueLower ||\n                              nameLower.includes(inputValueLower);\n                            return result;\n                          })\n                          .slice(0, 30)\n                          .map((t, index) => {\n                            const { id, name } = t;\n                            return (\n                              <li\n                                {...getItemProps({\n                                  item: {\n                                    id,\n                                    name,\n                                  },\n                                })}\n                                className={classnames(\n                                  classes.listItem,\n                                  highlightedIndex === index &&\n                                  classes.highlighted\n                                )}\n                                key={id}\n                                value={name}\n                                tabIndex={0}\n                              >\n                                {t.name}\n                              </li>\n                            );\n                          })}\n                      </Paper>\n                    )}\n                  </OpacityContainer>\n                </div>\n              </div>\n            );\n          }}\n        </Downshift>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainSearchSelect);\n","import * as React from 'react';\n\nimport {\n  Chip,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport Clear from '@material-ui/icons/Clear';\n\nexport interface IMainSearchTagContainerProps\n  extends WithStyles<typeof styles> {\n  handleDeleteTag: (tagId: number) => void;\n  selectedTags: number[];\n  tags: Array<{ id: number; name: string }>;\n}\n\nexport interface IMainSearchTagContainerState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  selectedTagsContainer: {\n    marginTop: theme.spacing.unit,\n    zIndex: -1,\n  },\n  selectedTag: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: theme.palette.primary.main,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    marginRight: theme.spacing.unit / 2,\n    marginBottom: theme.spacing.unit / 2,\n  },\n  deleteIcon: {\n    color: theme.palette.primary.main,\n  },\n});\n\nclass MainSearchTagContainer extends React.Component<\n  IMainSearchTagContainerProps,\n  IMainSearchTagContainerState\n  > {\n  public getTagById = (id: number) => {\n    const { tags } = this.props;\n    const len = tags.length;\n    let result = {} as { id: number; name: string };\n    for (let i = 0; i < len; i += 1) {\n      if (tags[i].id === id) {\n        result = tags[i];\n        break;\n      }\n    }\n    return result;\n  };\n  public handleDelete = (sid: number) => {\n    this.props.handleDeleteTag(sid);\n  };\n  public render() {\n    const { classes, selectedTags } = this.props;\n    return (\n      <div className={classes.selectedTagsContainer}>\n        {selectedTags.map((sid) => (\n          <Chip\n            key={sid}\n            className={classes.selectedTag}\n            label={this.getTagById(sid).name}\n            onDelete={() => this.handleDelete(sid)}\n            deleteIcon={<Clear className={classes.deleteIcon} />}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainSearchTagContainer);\n","import * as React from 'react';\n\nimport {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nexport interface IMainSearchTitleProps {\n  handleChange: (title: string) => void;\n  title: string;\n}\n\nexport interface IMainSearchTitleState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    paddingTop: '16.5px',\n    paddingBottom: '16.5px',\n    color: theme.palette.text.primary,\n    wordWrap: 'break-word',\n    outline: 'none',\n    resize: 'none',\n    width: 'calc(100% - 24px)',\n    fontFamily: 'monospace',\n    '&::placeholder': {\n      opacity: 0.65,\n      color: theme.palette.text.primary,\n    },\n  },\n});\n\nclass MainSearchTitle extends React.Component<\n  WithStyles<any> & IMainSearchTitleProps,\n  IMainSearchTitleState\n  > {\n  public _handleChange = (ev: any) => {\n    this.props.handleChange(ev.target.value);\n  };\n\n  public render() {\n    const { classes, title } = this.props;\n    return (\n      <input\n        className={classes.input}\n        type=\"text\"\n        placeholder=\"Enter a title (optional)\"\n        value={title}\n        onChange={this._handleChange}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(MainSearchTitle);\n","import * as React from 'react';\n\nimport { Avatar, Grid, StyleRulesCallback, Theme, Typography, WithStyles, withStyles } from '@material-ui/core';\n\nimport { DirectUpload } from 'activestorage';\nimport { IAnswer } from '../../interfaces/Answer';\nimport { IQuestion } from '../../interfaces/Question';\nimport { ISettings } from '../../interfaces/Settings';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport ProfileContent from './ProfileContent';\nimport ProfileTabList from './ProfileTabList';\nimport axios from 'axios';\n\nexport interface IProfileContainerProps extends WithStyles<typeof styles> {\n  answers: IAnswer[];\n  setAnswers: (answers: IAnswer[]) => void;\n  questions: IQuestion[];\n  setQuestions: (questions: IQuestion[]) => void;\n  editUser: (user: IUser) => void;\n  currentTab: TabTypes;\n  mentorDialogOpen: boolean;\n  setTimeZone: (timeZone: string) => void;\n  tags: ITag[];\n  toggleTheme: () => void;\n  user: IUser;\n  userSettings: ISettings;\n}\n\nexport interface IProfileContainerState {\n  currentTab: TabTypes;\n  loading: boolean;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  profileAvatarInputContainer: {\n    height: '48px',\n    width: '48px',\n    borderRadius: '5px',\n    [theme.breakpoints.up('sm')]: {\n      height: '95px',\n      width: '95px',\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '110px',\n      width: '110px',\n    },\n    [theme.breakpoints.up('lg')]: {\n      height: '125px',\n      width: '125px',\n    },\n    [theme.breakpoints.up('xl')]: {\n      height: '140px',\n      width: '140px',\n    },\n    transition: theme.transitions.create(['opacity'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.shortest,\n    }),\n    cursor: 'pointer',\n    '&:hover': {\n      opacity: 0.45,\n    },\n  },\n  avatar: {\n    height: '100%',\n    width: '100%',\n    borderRadius: '5px',\n  },\n  changeAvatarText: {\n    fontWeight: 'bolder',\n    fontVariant: 'small-caps',\n    color: 'white',\n  },\n  root: {\n    marginTop: 90 + theme.spacing.unit * 2,\n  },\n  profileHeader: {\n    display: 'flex',\n  },\n  profileHeaderText: {\n    display: 'flex',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: 'auto',\n    flexDirection: 'column',\n    '& > h3': {\n      [theme.breakpoints.only('xs')]: {\n        fontSize: '1.8rem'\n      },\n    },\n    '& > h6': {\n      [theme.breakpoints.only('xs')]: {\n        fontSize: '1.2rem'\n      },\n    },\n  },\n});\n\nexport enum TabTypes {\n  Home = 'Home',\n  MentorPanel = 'Mentor Panel',\n  Settings = 'Settings'\n}\n\nclass ProfileContainer extends React.Component<\n  IProfileContainerProps,\n  IProfileContainerState\n  > {\n  public inputRef: React.RefObject<any>;\n\n  constructor(props: IProfileContainerProps) {\n    super(props);\n    this.state = {\n      currentTab: this.props.currentTab,\n      loading: true,\n    };\n    this.inputRef = React.createRef();\n  }\n\n  public uploadFile = (file: any) => {\n    const { editUser, user } = this.props;\n    const url = this.inputRef.current.dataset.directUploadUrl;\n    const upload = new DirectUpload(file, url);\n\n    upload.create((error: any, blob: any) => {\n      if (error) {\n        console.dir(error);\n      } else {\n        console.log(blob);\n        axios({\n          method: 'put',\n          url: `/api/users/${this.props.user.id}`,\n          // params: {\n          //   avatar: `https://s3.ca-central-1.amazonaws.com/conch-avatars/${blob.key}`,\n          // },\n          params: {\n            avatar: blob.signed_id,\n          }\n        })\n          .then((result) => {\n            const newUser = { ...user };\n            newUser.avatar_url = `https://s3.ca-central-1.amazonaws.com/conch-avatars/${blob.key}`;\n            editUser(newUser);\n          })\n          .catch((err) => console.log(err));\n      }\n    });\n  };\n\n  public changeCurrentTab = (newTab: TabTypes) => {\n    this.setState({ currentTab: newTab });\n  };\n\n  public handleClick = () => {\n    this.inputRef.current.click();\n  };\n\n  public handleFinishLoading = () => {\n    console.log('Finished loading!');\n    this.isNotLoading();\n  };\n\n  public handleStartLoading = () => {\n    console.log('Loading data!');\n    this.isLoading();\n  };\n\n  public isLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  public isNotLoading = () => {\n    this.setState({ loading: false }, () =>\n      console.log('loading set to false')\n    );\n  };\n\n  public handleAvatarChange = (ev: any) => {\n    if (ev.target.files[0]) {\n      const file = ev.target.files[0];\n      this.uploadFile(file);\n    }\n  };\n\n  public getTabs = () => {\n    const { user } = this.props;\n    const userTabs = Object.values(TabTypes);\n    return user.is_mentor ? userTabs : userTabs.filter(t => t !== TabTypes.MentorPanel);\n  }\n\n  public render() {\n    const { currentTab, loading } = this.state;\n    const { classes, currentTab: propsCurrentTab, user, ...rest } = this.props;\n    const tabs = this.getTabs();\n    return (\n      <Grid item={true} xs={11} className={classes.root}>\n        <Grid container={true} spacing={24}>\n          <Grid item={true} xs={12}>\n            <div className={classes.profileHeader}>\n              <div\n                className={classes.profileAvatarInputContainer}\n                onClick={this.handleClick}\n              >\n                <Avatar className={classes.avatar} src={user.avatar_url} />\n                <input\n                  type=\"file\"\n                  ref={this.inputRef}\n                  style={{ display: 'none' }}\n                  onChange={this.handleAvatarChange}\n                  accept=\"image/*\"\n                  data-direct-upload-url=\"/rails/active_storage/direct_uploads\"\n                />\n              </div>\n              <div className={classes.profileHeaderText}>\n                <Typography variant=\"h3\">{user.nickname}</Typography>\n                <Typography variant=\"h6\">{user.email}</Typography>\n              </div>\n            </div>\n          </Grid>\n          <Grid item={true} xs={12} md={2}>\n            <ProfileTabList\n              currentTab={currentTab}\n              handleClick={this.changeCurrentTab}\n              tabs={tabs}\n            />\n          </Grid>\n          <Grid item={true} xs={12} md={10}>\n            <ProfileContent\n              currentTab={currentTab}\n              handleFinishLoading={this.handleFinishLoading}\n              loading={loading}\n              user={user}\n              {...rest}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ProfileContainer);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IQuestion } from '../../interfaces/Question';\nimport { ITag } from '../../interfaces/Tag';\nimport MainSearch from './MainSearch';\n\nexport interface IMainSearchContainerProps {\n  addQuestion: (question: IQuestion) => void;\n  tags: ITag[];\n}\n\nexport interface IMainSearchContainerState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    margin: 'auto',\n    display: 'flex',\n    width: '40%',\n    position: 'relative',\n  },\n});\n\nclass MainSearchContainer extends React.Component<\n  WithStyles<any> & IMainSearchContainerProps,\n  IMainSearchContainerState\n  > {\n  public render() {\n    const { classes, tags, addQuestion } = this.props;\n    return (\n      <Grid item={true} xs={10} sm={8} md={6} lg={4} className={classes.root}>\n        <MainSearch tags={tags} addQuestion={addQuestion} />\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainSearchContainer);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IQuestion } from '../../interfaces/Question';\nimport { ITag } from '../../interfaces/Tag';\nimport MainSearchContainer from '../MainSearch/MainSearchContainer';\n\nexport interface IMainPageProps {\n  addQuestion: (question: IQuestion) => void;\n  handleFinishLoading: () => void;\n  tags: ITag[];\n}\n\nexport interface IMainPageState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    width: '100%',\n    marginTop: '-90px',\n    display: 'flex'\n  },\n});\n\nclass MainPage extends React.Component<\n  WithStyles<any> & IMainPageProps,\n  IMainPageState\n  > {\n  public componentDidMount() {\n    this.props.handleFinishLoading();\n  }\n  public render() {\n    const { classes, addQuestion, tags } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} justify={'center'}>\n          <MainSearchContainer addQuestion={addQuestion} tags={tags} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MainPage);\n","import {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport * as React from 'react';\n// import posed from 'react-pose';\nimport { ITag } from '../../interfaces/Tag';\n\nexport interface IMentorContainerProps extends WithStyles<typeof styles> {\n  tags: ITag[];\n}\n\nexport interface IMentorContainerState {\n  placeholder?: string;\n}\n\n// const TRANSITION_DURATION = 350;\n\n// const OpacityContainer = posed.div({\n//   hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\n//   visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\n// });\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass MentorContainer extends React.Component<\n  IMentorContainerProps,\n  IMentorContainerState\n> {\n  public render() {\n    const { classes } = this.props;\n    return <div className={classes.root} />;\n  }\n}\n\nexport default withStyles(styles)(MentorContainer);\n","import {\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n  Grid,\n} from '@material-ui/core';\nimport * as React from 'react';\nimport { ITag } from '../../interfaces/Tag';\nimport MentorContainer from '../Mentor/MentorContainer';\n\nexport interface IMentorPageProps extends WithStyles<typeof styles> {\n  tags: ITag[];\n}\n\nexport interface IMentorPageState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    marginTop: '-45px',\n  },\n});\n\nclass MentorPage extends React.Component<IMentorPageProps, IMentorPageState> {\n  public render() {\n    const { classes, tags } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} justify={'center'}>\n          <MentorContainer tags={tags} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MentorPage);\n","import * as React from 'react';\n\nimport {\n  Chip,\n  Paper,\n  StyleRulesCallback,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nimport { IQuestion } from '../../interfaces/Question';\nimport { ITag } from '../../interfaces/Tag';\nimport classnames from 'classnames';\n\nexport interface IQuestionListProps extends WithStyles<typeof styles> {\n  userId?: number;\n  tags: ITag[];\n  questions: IQuestion[];\n}\n\nexport interface IQuestionListState {\n  errorText: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  dirty: {\n    backgroundColor: theme.palette.type === 'light'\n      ? lighten(theme.palette.primary.main, 0.75)\n      : darken(theme.palette.primary.main, 0.75),\n  },\n  paper: {\n    overflowX: 'auto',\n    [theme.breakpoints.only('xs')]: {\n      height: '300px'\n    }\n  },\n  loading: {\n    margin: 'auto',\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '25%',\n    height: '25%',\n    margin: 'auto',\n  },\n  tableRow: {\n    cursor: 'pointer',\n    '& > th,td': {\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '10px',\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: '12px',\n        padding: theme.spacing.unit * 2\n      },\n      fontSize: '8px',\n      padding: theme.spacing.unit\n    }\n  },\n  chip: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    [theme.breakpoints.only('xs')]: {\n      fontSize: '8px',\n      margin: 0,\n      padding: 0\n    },\n    borderColor: theme.palette.primary.main,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    marginRight: theme.spacing.unit / 2,\n    marginBottom: theme.spacing.unit / 2,\n  },\n});\n\nclass QuestionList extends React.Component<\n  RouteComponentProps<any> & IQuestionListProps,\n  IQuestionListState\n  > {\n  public state = {\n    errorText: '',\n  };\n\n  public handleLink = (id: number) => {\n    this.props.history.push(`/results/${id}`);\n  };\n\n  public getTagById = (id: number) => {\n    const { tags } = this.props;\n    const len = tags.length;\n    let result = {} as { id: number; name: string };\n    for (let i = 0; i < len; i += 1) {\n      if (tags[i].id === id) {\n        result = tags[i];\n        break;\n      }\n    }\n    return result;\n  };\n\n  public render() {\n    const { classes, questions } = this.props;\n    return (\n      <Paper className={classes.paper} elevation={4}>\n        <Table className={classes.table} padding=\"dense\">\n          <TableHead className={classes.tableHeader}>\n            <TableRow className={classes.tableRow}>\n              <TableCell>Date</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Question</TableCell>\n              <TableCell>Tags</TableCell>\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody className={classes.tableBody}>\n            {questions\n              .sort((a, b) => {\n                const aDate = new Date(a.created_at);\n                const bDate = new Date(b.created_at);\n                return aDate > bDate ? -1 : 1;\n              })\n              .map((question, index) => {\n                const createdAt = new Date(question.created_at);\n                return (\n                  <TableRow\n                    key={index}\n                    onClick={() => this.handleLink(question.id)}\n                    className={classnames(classes.tableRow, question.is_dirty && classes.dirty)}\n                    hover={true}\n                  >\n                    <TableCell>\n                      {`${createdAt.toLocaleDateString()}\\n${createdAt.toLocaleTimeString()}`}\n                    </TableCell>\n                    <TableCell>\n                      {question.title.length > 0 &&\n                        `${question.title.substr(0, 20)}`}\n                      {question.title.length > 20 && '...'}\n                    </TableCell>\n                    <TableCell style={{ wordWrap: 'break-word' }}>\n                      {`${question.content.substr(0, 20)}`}\n                      {question.content.length > 20 && '...'}\n                    </TableCell>\n                    <TableCell>\n                      {question.tags.map((tag, i) => (\n                        <Chip\n                          key={i}\n                          className={classes.chip}\n                          label={this.getTagById(tag).name}\n                        />\n                      ))}\n                    </TableCell>\n                    <TableCell>{question.question_status && question.question_status.status}</TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(QuestionList));\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { IQuestion } from '../../../interfaces/Question';\nimport { ITag } from '../../../interfaces/Tag';\nimport { IUser } from '../../../interfaces/User';\nimport QuestionList from '../../List/QuestionList';\nimport { darken } from '@material-ui/core/styles/colorManipulator';\n\nexport interface IHomeProps extends WithStyles<typeof styles> {\n  questions: IQuestion[];\n  setQuestions: (questions: IQuestion[]) => void;\n  handleFinishLoading: () => void;\n  tags: ITag[];\n  user: IUser;\n}\n\nexport interface IHomeState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing.unit * 2,\n    }\n  },\n  contentContainer: {\n    color: theme.palette.text.primary,\n  },\n  divider: {\n    color: darken(theme.palette.primary.main, 0.1),\n  },\n  table: {\n    overflowY: 'scroll',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  chip: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderColor: theme.palette.primary.main,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    marginRight: theme.spacing.unit / 2,\n    marginBottom: theme.spacing.unit / 2,\n  },\n});\n\nclass Home extends React.Component<\n  RouteComponentProps<any> & IHomeProps,\n  IHomeState\n  > {\n  public componentDidMount() {\n    this.props.handleFinishLoading();\n  }\n\n  public render() {\n    const { classes, questions, tags, user } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} className={classes.contentContainer}>\n          <Grid item={true} xs={12} sm={12}>\n            <QuestionList questions={questions} tags={tags} userId={user.id} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Home));\n","import * as React from 'react';\n\nimport {\n  Paper,\n  StyleRulesCallback,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nimport { IAnswer } from '../../interfaces/Answer';\n\nexport interface IAnswerListProps extends WithStyles<typeof styles> {\n  userId?: number;\n  answers: IAnswer[];\n}\n\nexport interface IAnswerListState {\n  errorText: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  dirty: {\n    backgroundColor: theme.palette.type === 'light'\n      ? lighten(theme.palette.primary.main, 0.75)\n      : darken(theme.palette.primary.main, 0.75),\n  },\n  loading: {\n    margin: 'auto',\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '25%',\n    height: '25%',\n    margin: 'auto',\n  },\n  table: {\n    overflowY: 'scroll',\n  },\n  tableRow: {\n    cursor: 'pointer',\n  },\n  tableBody: {\n    overflowY: 'scroll',\n  },\n  chip: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderColor: theme.palette.primary.main,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    marginRight: theme.spacing.unit / 2,\n    marginBottom: theme.spacing.unit / 2,\n  },\n});\n\nclass AnswerList extends React.Component<\n  RouteComponentProps<any> & IAnswerListProps,\n  IAnswerListState\n  > {\n  public state = {\n    errorText: '',\n  };\n\n  public handleLink = (id: number) => {\n    this.props.history.push(`/results/${id}`);\n  };\n\n  public render() {\n    const { classes, answers } = this.props;\n    return (\n      <Paper className={classes.paper} elevation={4}>\n        <Table className={classes.table} padding=\"dense\">\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Answer</TableCell>\n              <TableCell>Selected</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody className={classes.tableBody}>\n            {answers\n              .sort((a, b) => {\n                const aDate = new Date(a.created_at);\n                const bDate = new Date(b.created_at);\n                return aDate > bDate ? -1 : 1;\n              })\n              .map((answer, index) => {\n                const createdAt = new Date(answer.created_at);\n                return (\n                  <TableRow\n                    key={index}\n                    onClick={() => this.handleLink(answer.question_id)}\n                    className={classes.tableRow}\n                    hover={true}\n                  >\n                    <TableCell>\n                      {`${createdAt.toLocaleDateString()}\\n${createdAt.toLocaleTimeString()}`}\n                    </TableCell>\n                    <TableCell style={{ wordWrap: 'break-word' }}>\n                      {`${answer.content.substr(0, 20)}`}\n                      {answer.content.length > 20 && '...'}\n                    </TableCell>\n                    <TableCell>{answer.selected.toString()}</TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(AnswerList));\n","import * as React from 'react';\n\nimport { Button, Grid, StyleRulesCallback, Theme, WithStyles, withStyles } from '@material-ui/core';\n\nimport AnswerList from '../../List/AnswerList';\nimport { IAnswer } from '../../../interfaces/Answer';\nimport { IQuestion } from '../../../interfaces/Question';\nimport { ITag } from '../../../interfaces/Tag';\nimport { IUser } from '../../../interfaces/User';\nimport InputContainer from '../../Input/InputContainer';\nimport MainSearchSelect from '../../MainSearch/MainSearchSelect';\nimport MainSearchTagContainer from '../../MainSearch/MainSearchTagContainer';\nimport axios from 'axios';\nimport { getAnswersByUserId } from '../../../api';\n\nexport interface IMentorPanelProps extends WithStyles<typeof styles> {\n  answers: IAnswer[];\n  setAnswers: (answers: IAnswer[]) => void;\n  handleFinishLoading: () => void;\n  editUser: (user: IUser) => void;\n  user: IUser;\n  tags: ITag[];\n}\n\nexport interface IMentorPanelState {\n  questions: IQuestion[];\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass MentorPanel extends React.Component<IMentorPanelProps, IMentorPanelState> {\n  public state = {\n    questions: [] as IQuestion[]\n  };\n\n  public componentDidMount() {\n    const { handleFinishLoading } = this.props;\n    handleFinishLoading();\n  }\n\n  public _handleDeleteTag = (tagId: number) => {\n    const { editUser, user } = this.props;\n    const { tags } = user;\n    if (tags) {\n      const newTags = tags.filter(t => t !== tagId);\n      axios({\n        method: 'delete',\n        url: `/api/user_tags/${tagId}`\n      })\n        .then((result) => {\n          const newUser = { ...user };\n          newUser.tags = newTags;\n          editUser(newUser);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  public _handleSelectTag = (tagId: number) => {\n    const { editUser, user } = this.props;\n    const { tags } = user;\n    if (tags) {\n      axios({\n        method: 'post',\n        url: '/api/user_tags',\n        params: {\n          tags: [tagId],\n        },\n      })\n        .then((r) => {\n          const newUser = { ...user };\n          newUser.is_mentor = true;\n          newUser.tags = [...user.tags, tagId];\n          editUser(newUser);\n        })\n        .catch((e) => console.log(e));\n    }\n  }\n\n  public toggleMentorStatus = () => {\n    const { editUser, user } = this.props;\n    axios({\n      method: 'put',\n      url: `/api/users/${user.id}`,\n      params: {\n        is_mentor: false\n      }\n    })\n      .then((result) => {\n        const newUser = { ...user };\n        newUser.is_mentor = false;\n        editUser(newUser);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  public refreshAnswers = () => {\n    const { setAnswers, user } = this.props;\n    getAnswersByUserId(user.id, (answers) => {\n      setAnswers(answers);\n    });\n  }\n\n  public render() {\n    const { answers, user, tags } = this.props;\n    return (\n      <Grid container={true} spacing={8}>\n        <Grid item={true} xs={12} md={4}>\n          <Button color='primary' fullWidth={true} variant='contained' disabled={!user.is_mentor} onClick={this.toggleMentorStatus}>Stop Being a Mentor (TESTING)</Button>\n          <br />\n          <div style={{ height: '50px' }}>\n            <InputContainer>\n              <MainSearchSelect\n                handleSelectTag={(tagId: number) => {\n                  this._handleSelectTag(tagId);\n                }}\n                selectedTags={user.tags}\n                tags={tags}\n              />\n            </InputContainer>\n          </div>\n          <MainSearchTagContainer\n            handleDeleteTag={(tagId: number) => {\n              this._handleDeleteTag(tagId);\n            }}\n            selectedTags={user.tags}\n            tags={tags}\n          />\n        </Grid>\n        {answers.length > 0 &&\n          <Grid item={true} xs={12} md={8}>\n            <AnswerList answers={answers} />\n          </Grid>\n        }\n      </Grid >\n    );\n  }\n}\n\nexport default withStyles(styles)(MentorPanel);\n","import * as React from 'react';\n\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  StyleRulesCallback,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport InputContainer from '../Input/InputContainer';\nimport MainSearchSelect from '../MainSearch/MainSearchSelect';\nimport MainSearchTagContainer from '../MainSearch/MainSearchTagContainer';\nimport axios from 'axios';\n\nexport interface IMentorRegistrationProps extends WithStyles<typeof styles> {\n  closeDialog: () => void;\n  editUser: (user: IUser) => void;\n  open: boolean;\n  tags: ITag[];\n  user: IUser;\n}\n\nexport interface IMentorRegistrationState {\n  selectedTags: number[];\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  paper: {\n    transition: 'all 1s ease-out'\n  },\n  submitButton: {\n    borderRadius: 0,\n  },\n});\n\nclass MentorRegistration extends React.Component<\n  IMentorRegistrationProps,\n  IMentorRegistrationState\n  > {\n  public state = {\n    selectedTags: [] as number[],\n  };\n\n  public handleSubmit = (ev?: any) => {\n    const { closeDialog, editUser, user } = this.props;\n    if (ev) {\n      ev.preventDefault();\n    }\n    const { selectedTags } = this.state;\n    if (selectedTags.length > 0) {\n      axios({\n        method: 'put',\n        url: `/api/users/${user.id}`,\n        params: {\n          is_mentor: true\n        }\n      })\n        .then((result) => {\n          axios({\n            method: 'post',\n            url: '/api/user_tags',\n            params: {\n              tags: selectedTags,\n            },\n          })\n            .then((r) => {\n              const newUser = { ...user };\n              newUser.is_mentor = true;\n              newUser.tags = selectedTags;\n              editUser(newUser);\n              closeDialog();\n            })\n            .catch((e) => console.log(e));\n        })\n        .catch(err => console.log(err));\n    } else {\n      alert('Fill in the form! Replace me with actual error text in the form!');\n    }\n  };\n\n  public handleSelectTag = (tagId: number) => {\n    this.setState({\n      selectedTags: [...this.state.selectedTags, tagId],\n    });\n  };\n  public handleDeleteTag = (sid: number) => {\n    const selectedTags = [...this.state.selectedTags];\n    selectedTags.splice(selectedTags.indexOf(sid), 1);\n    this.setState({ selectedTags });\n  };\n\n  public render() {\n    const { selectedTags } = this.state;\n    const { classes, open, closeDialog, tags } = this.props;\n    return (\n      <Dialog\n        open={open}\n        onClose={closeDialog}\n        fullWidth={true}\n        className={classes.dialog}\n        maxWidth={'sm'}\n        classes={{\n          paper: classes.paper\n        }}\n      >\n        <DialogTitle>Register as a Mentor</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            By becoming a Mentor and setting your areas of expertise, you will be able to be join a queue where you will be selected to\n            answer questions, earning money per question answered.\n          </DialogContentText>\n          <br />\n          <DialogContentText>\n            Please note that the quality of your answers are important.\n            Not everyone is suited to be a Mentor.\n            Please only select areas are you an expert in.\n          </DialogContentText>\n          <br />\n          <Typography variant='subtitle1'>Select Area of Expertise:</Typography>\n          <div style={{ height: '50px' }}>\n            <InputContainer>\n              <MainSearchSelect\n                handleSelectTag={this.handleSelectTag}\n                selectedTags={selectedTags}\n                tags={tags}\n              />\n            </InputContainer>\n          </div>\n          <br />\n          {selectedTags.length > 0 &&\n            <>\n              <Typography variant='subtitle1'>Your Areas of Expertise:</Typography>\n              <MainSearchTagContainer\n                handleDeleteTag={this.handleDeleteTag}\n                selectedTags={selectedTags}\n                tags={tags}\n              />\n            </>\n          }\n        </DialogContent>\n        <Button\n          onClick={this.handleSubmit}\n          disabled={selectedTags.length === 0}\n          fullWidth={true}\n          size='large'\n          variant='contained'\n          color='primary'\n        >Become a Mentor</Button>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(MentorRegistration);\n","import * as React from 'react';\n\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { ISettings } from '../../../interfaces/Settings';\nimport { ITag } from '../../../interfaces/Tag';\nimport { IUser } from '../../../interfaces/User';\nimport MentorRegistration from '../../Dialog/MentorRegistration';\nimport { ThemeTypes } from '../../../themes/mainTheme';\n\nexport interface ISettingsProps extends WithStyles<typeof styles> {\n  editUser: (user: IUser) => void;\n  mentorDialogOpen: boolean;\n  handleFinishLoading: () => void;\n  setTimeZone: (timeZone: string) => void;\n  toggleTheme: () => void;\n  tags: ITag[];\n  user: IUser;\n  userSettings: ISettings;\n}\n\nexport interface ISettingsState {\n  nicknameText: string;\n  passwordText: string;\n  passwordConfirmText: string;\n  passwordErrorText: string;\n  mentorDialogOpen: boolean;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  container: {\n    width: 'calc(100% - 12px)',\n    zIndex: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    color: theme.palette.text.primary,\n    wordWrap: 'break-word',\n    outline: 'none',\n    width: '100%',\n    fontFamily: 'monospace',\n    paddingTop: '16.5px',\n    paddingBottom: '16.5px',\n    '&::placeholder': {\n      opacity: 0.65,\n      color: theme.palette.text.primary,\n    },\n  },\n  listItem: {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 2,\n    display: 'block',\n    cursor: 'pointer',\n  },\n  selectedTagsContainer: {\n    marginTop: '8px',\n  },\n  paper: {\n    maxHeight: '300px',\n    overflowY: 'scroll',\n    position: 'absolute',\n    zIndex: 99,\n  },\n  highlighted: {\n    backgroundColor: theme.palette.background.default,\n  },\n});\n\n// const TIMEZONES = moment.tz.names();\n\nclass Settings extends React.Component<ISettingsProps, ISettingsState> {\n  public state = {\n    nicknameText: this.props.user.nickname,\n    passwordText: '',\n    passwordConfirmText: '',\n    passwordErrorText: '',\n    mentorDialogOpen: this.props.mentorDialogOpen,\n  };\n\n  public componentDidMount() {\n    const { handleFinishLoading } = this.props;\n    handleFinishLoading();\n  }\n\n\n  public handleSelectChange = (tz: string) => {\n    this.props.setTimeZone(tz);\n  };\n\n  public handleTextChange = (ev: any) => {\n    // @ts-ignore\n    this.setState({ [ev.target.id as string]: ev.target.value });\n  };\n\n  public _changePassword = (ev: any) => {\n    if (ev) {\n      ev.preventDefault();\n    }\n    const { passwordText, passwordConfirmText } = this.state;\n    // const { editUser, user } = this.props;\n    if (passwordText !== passwordConfirmText) {\n      this.setState({ passwordErrorText: 'Your passwords do not match!' });\n    } else {\n      // post request to change pw\n    }\n  };\n\n  public toggleMentorDialog = () => {\n    this.setState((prevState) => ({\n      mentorDialogOpen: !prevState.mentorDialogOpen,\n    }));\n  };\n\n  public openMentorDialog = () => {\n    this.setState({ mentorDialogOpen: true });\n  };\n\n  public closeMentorDialog = () => {\n    this.setState({ mentorDialogOpen: false });\n  };\n\n  public render() {\n    const {\n      mentorDialogOpen,\n    } = this.state;\n    const { classes, editUser, tags, toggleTheme, user, userSettings } = this.props;\n    return (\n      <>\n        <MentorRegistration\n          editUser={editUser}\n          open={mentorDialogOpen}\n          closeDialog={this.closeMentorDialog}\n          tags={tags}\n          user={user}\n        />\n        <Grid container={true} spacing={8} className={classes.root}>\n          <Grid item={true} xs={10} sm={6} style={{ paddingLeft: '12px' }}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  onChange={toggleTheme}\n                  checked={userSettings.themeType === ThemeTypes.DARK}\n                />\n              }\n              label=\"Dark Mode\"\n            />\n          </Grid>\n          {/* <Grid item={true} xs={12} sm={6}>\n            <label id=\"select-timezone-label\">Timezone</label>\n            <Downshift\n              id=\"downshift-select-timezone\"\n              onChange={this.handleSelectChange}\n              initialInputValue={userSettings.timeZone}\n              labelId=\"select-timezone-label\"\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                highlightedIndex,\n                inputValue,\n                isOpen,\n                selectedItem,\n                clearSelection,\n              }) => {\n                const inputValueLower =\n                  inputValue && inputValue.toLocaleLowerCase();\n                return (\n                  <div className={classes.container}>\n                    <input\n                      className={classes.input}\n                      {...getInputProps()}\n                      placeholder=\"Select timezone\"\n                    />\n                    <div {...getMenuProps()}>\n                      {isOpen && (\n                        <Paper className={classes.paper} elevation={4}>\n                          {TIMEZONES.filter((timezone) => {\n                            const timezoneLower = timezone.toLocaleLowerCase();\n                            const result =\n                              !inputValueLower ||\n                              timezoneLower.includes(inputValueLower);\n                            return result;\n                          })\n                            .slice(0, 30)\n                            .map((tz, index) => {\n                              return (\n                                <li\n                                  {...getItemProps({ item: tz })}\n                                  className={classnames(\n                                    classes.listItem,\n                                    highlightedIndex === index &&\n                                    classes.highlighted\n                                  )}\n                                  key={`${tz}-${index}`}\n                                  value={tz}\n                                  tabIndex={0}\n                                >\n                                  {tz}\n                                </li>\n                              );\n                            })}\n                        </Paper>\n                      )}\n                    </div>\n                  </div>\n                );\n              }}\n            </Downshift>\n          </Grid> */}\n          {/* <Grid item={true} xs={6}>\n            <form\n              style={{ display: 'flex', flexWrap: 'wrap' }}\n              onSubmit={this._changePassword}\n            >\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"passwordText\">Change Password</InputLabel>\n                <Input\n                  id=\"passwordText\"\n                  value={passwordText}\n                  type=\"password\"\n                  onChange={this.handleTextChange}\n                  error={passwordErrorText.length > 0}\n                />\n                <FormHelperText id=\"passwordError\">\n                  {passwordErrorText}\n                </FormHelperText>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"passwordConfirmText\">\n                  Confirm Password\n                </InputLabel>\n                <Input\n                  id=\"passwordConfirmText\"\n                  value={passwordConfirmText}\n                  type=\"password\"\n                  onChange={this.handleTextChange}\n                  error={passwordErrorText.length > 0}\n                />\n                <FormHelperText id=\"passwordConfirmError\">\n                  {passwordErrorText}\n                </FormHelperText>\n              </FormControl>\n              <button type=\"submit\" style={{ display: 'none' }} />\n            </form>\n          </Grid> */}\n          {!user.is_mentor &&\n            <Grid item={true} xs={12} sm={6}>\n              <Button fullWidth={true} color='primary' variant='contained' onClick={this.openMentorDialog}>Become A Mentor</Button>\n            </Grid>\n          }\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Settings);\n","import * as React from 'react';\n\nimport {\n  CircularProgress,\n  Paper,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport Home from './ContentPages/Home';\nimport { IAnswer } from '../../interfaces/Answer';\nimport { IQuestion } from '../../interfaces/Question';\nimport { ISettings } from '../../interfaces/Settings';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport MentorPanel from './ContentPages/MentorPanel';\nimport Settings from './ContentPages/Settings';\nimport { TabTypes } from './ProfileContainer';\nimport classnames from 'classnames';\n\nexport interface IProfileContentProps extends WithStyles<typeof styles> {\n  answers: IAnswer[];\n  setAnswers: (answers: IAnswer[]) => void;\n  questions: IQuestion[];\n  setQuestions: (questions: IQuestion[]) => void;\n  currentTab: TabTypes;\n  mentorDialogOpen: boolean;\n  editUser: (user: IUser) => void;\n  handleFinishLoading: () => void;\n  loading: boolean;\n  setTimeZone: (timeZone: string) => void;\n  tags: ITag[];\n  toggleTheme: () => void;\n  user: IUser;\n  userSettings: ISettings;\n}\n\nexport interface IProfileContentState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  full: {\n    height: '100%',\n    width: '100%',\n  },\n  loading: {\n    margin: 'auto',\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '25%',\n    height: '25%',\n    margin: 'auto',\n  },\n  hidden: {\n    display: 'none',\n  },\n  contentContainer: {\n    color: theme.palette.text.primary,\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing.unit * 2,\n    }\n  },\n});\nclass ProfileContent extends React.Component<\n  IProfileContentProps,\n  IProfileContentState\n  > {\n  public getTabContent = () => {\n    const {\n      classes,\n      currentTab,\n      editUser,\n      handleFinishLoading,\n      answers,\n      setAnswers,\n      questions,\n      setQuestions,\n      tags,\n      user,\n      ...rest\n    } = this.props;\n\n    switch (currentTab) {\n      case TabTypes.Home:\n        return (\n          <Home\n            handleFinishLoading={handleFinishLoading}\n            tags={tags}\n            user={user}\n            questions={questions}\n            setQuestions={setQuestions}\n          />\n        );\n      case TabTypes.MentorPanel:\n        return (\n          <MentorPanel\n            editUser={editUser}\n            handleFinishLoading={handleFinishLoading}\n            user={user}\n            tags={tags}\n            answers={answers}\n            setAnswers={setAnswers}\n          />\n        );\n      case TabTypes.Settings:\n        return (\n          <Settings\n            user={user}\n            editUser={editUser}\n            tags={tags}\n            handleFinishLoading={handleFinishLoading}\n            {...rest}\n          />\n        );\n      default:\n        return <div>NOT FOUND</div>;\n    }\n  };\n\n  public render() {\n    const { classes, loading } = this.props;\n    return (\n      <Paper className={classes.full} elevation={4}>\n        {loading && (\n          <div className={classes.loadingContainer}>\n            <CircularProgress className={classes.loading} size={96} />\n          </div>\n        )}\n        <div\n          className={classnames(\n            classes.contentContainer,\n            loading && classes.hidden\n          )}\n        >\n          {this.getTabContent()}\n        </div>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(ProfileContent);\n","import * as React from 'react';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nimport { TabTypes } from './ProfileContainer';\nimport classnames from 'classnames';\n\nexport interface IProfileTabListProps extends WithStyles<typeof styles> {\n  currentTab: TabTypes;\n  handleClick: (newTab: TabTypes) => void;\n  tabs: string[];\n}\n\nexport interface IProfileTabListState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  listItem: {\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n    borderLeftWidth: theme.spacing.unit / 2,\n    borderLeftColor: 'rgba(0,0,0,0)',\n    borderLeftStyle: 'solid',\n    cursor: 'pointer',\n  },\n  listItemHoverable: {\n    '&:hover': {\n      backgroundColor: darken(theme.palette.background.paper, 0.1),\n    },\n  },\n  profileTabList: {\n    paddingTop: '0px',\n    paddingBottom: '0px',\n  },\n  root: {\n    position: 'sticky',\n    top: '110px',\n  },\n  selected: {\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? lighten(theme.palette.primary.main, 0.75)\n        : darken(theme.palette.primary.main, 0.75),\n    borderLeftColor: theme.palette.primary.main,\n  },\n});\n\nclass ProfileTabList extends React.Component<\n  IProfileTabListProps,\n  IProfileTabListState\n  > {\n  public render() {\n    const { classes, currentTab, handleClick, tabs } = this.props;\n    return (\n      <Paper className={classes.root} elevation={4}>\n        <List className={classes.profileTabList}>\n          {tabs\n            .filter(t => isNaN(parseInt(t, 10)))\n            .map((tab, index) => (\n              <ListItem\n                key={index}\n                onClick={() => handleClick(tab as TabTypes)}\n                className={classnames(\n                  currentTab === tab\n                    ? classes.selected\n                    : classes.listItemHoverable,\n                  classes.listItem\n                )}\n              >\n                <ListItemText primary={tab} />\n              </ListItem>\n            ))}\n        </List>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(ProfileTabList);\n","export enum ResultStatusTypes {\n  NOT_SUBMITTED = 'NOT_SUBMITTED',\n  SUBMITTED = 'SUBMITTED',\n  ACCEPTED = 'ACCEPTED',\n  ANSWERED = 'ANSWERED',\n  RESOLVED = 'RESOLVED'\n}\n\nexport interface IQuestion {\n  content: string;\n  created_at: string;\n  id: number;\n  solved: boolean;\n  title: string;\n  updated_at: string;\n  user_id: number;\n  tags: number[];\n  is_dirty: boolean;\n  question_status: IQuestionStatus;\n}\n\nexport interface IQuestionStatus {\n  created_at: string;\n  id: number;\n  mentor_id: number | null;\n  question_id: number;\n  status: ResultStatusTypes;\n  updated_at: string;\n}\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport ProfileContainer, { TabTypes } from '../Profile/ProfileContainer';\n\nimport { IAnswer } from '../../interfaces/Answer';\nimport { IQuestion } from '../../interfaces/Question';\nimport { ISettings } from '../../interfaces/Settings';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\n\nexport interface IProfilePageProps extends WithStyles<typeof styles> {\n  answers: IAnswer[];\n  setAnswers: (answers: IAnswer[]) => void;\n  questions: IQuestion[];\n  setQuestions: (questions: IQuestion[]) => void;\n  editUser: (user: IUser) => void;\n  currentTab: TabTypes;\n  mentorDialogOpen: boolean;\n  handleFinishLoading: () => void;\n  setTimeZone: (timeZone: string) => void;\n  tags: ITag[];\n  toggleTheme: () => void;\n  user: IUser;\n  userSettings: ISettings;\n}\n\nexport interface IProfilePageState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    width: '100%',\n    marginTop: '-90px',\n    display: 'flex',\n  },\n});\n\nclass ProfilePage extends React.Component<\n  IProfilePageProps,\n  IProfilePageState\n  > {\n  public componentDidMount() {\n    this.props.handleFinishLoading();\n  }\n  public render() {\n    const { classes, handleFinishLoading, ...rest } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} justify={'center'}>\n          <ProfileContainer {...rest} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ProfilePage);\n","import {\n  Button,\n  IconButton,\n  StyleRulesCallback,\n  Theme,\n  Tooltip,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Input from '@material-ui/icons/Input';\nimport Settings from '@material-ui/icons/Settings';\nimport Warning from '@material-ui/icons/Warning';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nenum MentorQueueStatus {\n  NOT_IN_QUEUE = 'NOT_IN_QUEUE',\n  IN_QUEUE = 'IN_QUEUE',\n  BUSY = 'BUSY',\n}\n\nconst queueButtonText: { [key in MentorQueueStatus]: string } = {\n  [MentorQueueStatus.NOT_IN_QUEUE]: 'Join Question Queue',\n  [MentorQueueStatus.IN_QUEUE]: 'Leave Queue',\n  [MentorQueueStatus.BUSY]: 'Question in Progress',\n};\n\nconst queueButtonClass: { [key in MentorQueueStatus]: string } = {\n  [MentorQueueStatus.NOT_IN_QUEUE]: 'queueDefault',\n  [MentorQueueStatus.IN_QUEUE]: 'queueReady',\n  [MentorQueueStatus.BUSY]: 'queueBusy',\n};\n\nconst queueButtonIcon: { [key in MentorQueueStatus]: any } = {\n  [MentorQueueStatus.NOT_IN_QUEUE]: <Input />,\n  [MentorQueueStatus.IN_QUEUE]: <Cancel />,\n  [MentorQueueStatus.BUSY]: <Warning />,\n};\n\nexport interface INavBarMentorStatusProps extends WithStyles<typeof styles> {\n  placeholder?: string;\n}\n\nexport interface INavBarMentorStatusState {\n  interval: NodeJS.Timeout | null;\n  pending: boolean;\n  queueStatus: MentorQueueStatus;\n  questionId: number | null;\n  timeInQueue: number;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  '@keyframes spin': {\n    from: { transform: 'rotate(0deg)' },\n    to: { transform: 'rotate(360deg)' },\n  },\n  queueDefault: {\n    color: theme.palette.primary.main,\n    borderColor: theme.palette.primary.main,\n  },\n  queueReady: {\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.text.primary,\n  },\n  queueBusy: {\n    color: 'red',\n    borderColor: 'red',\n  },\n  pendingIcon: {\n    animationName: '$spin',\n  },\n  timeInQueue: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    textAlign: 'right',\n    marginRight: theme.spacing.unit * 2,\n  },\n  queueTimer: {\n    fontSize: '1em',\n    width: '100%',\n  },\n  queueLabel: {\n    fontSize: '0.75em',\n    width: '100%',\n  },\n});\n\nclass NavBarMentorStatus extends React.Component<\n  RouteComponentProps<any> & INavBarMentorStatusProps,\n  INavBarMentorStatusState\n> {\n  public state = {\n    interval: null,\n    pending: false,\n    queueStatus: MentorQueueStatus.NOT_IN_QUEUE,\n    questionId: null,\n    timeInQueue: 0,\n  };\n\n  public componentDidMount() {\n    const queryStatus = () => {\n      axios({\n        method: 'get',\n        url: '/api/join_queue',\n      })\n        .then((result) => {\n          const { data } = result;\n          const { question_id, status } = data;\n          if (status !== this.state.queueStatus) {\n            if (status === MentorQueueStatus.BUSY) {\n              this.setState({ questionId: question_id }, () =>\n                this.setStatus(status)\n              );\n            } else {\n              this.setStatus(status);\n            }\n          }\n        })\n        .catch((err) => console.log(err));\n    };\n    queryStatus();\n    setInterval(() => queryStatus(), 1500);\n  }\n\n  public setStatus = (status: MentorQueueStatus) => {\n    if (status === 'IN_QUEUE') {\n      this.setToInQueue();\n    } else if (status === 'NOT_IN_QUEUE') {\n      this.setToNotInQueue();\n    } else {\n      this.setToBusy();\n    }\n  };\n\n  public startTimer = () => {\n    const interval = setInterval(\n      () =>\n        this.setState((prevState) => ({\n          timeInQueue: prevState.timeInQueue + 1,\n        })),\n      1000\n    );\n    this.setState({ interval });\n  };\n\n  public stopAndClearTimer = () => {\n    const { interval } = this.state;\n\n    if (interval) {\n      clearInterval(interval);\n      this.setState({ timeInQueue: 0 });\n    }\n  };\n\n  public setToInQueue = () => {\n    this.setState({ queueStatus: MentorQueueStatus.IN_QUEUE }, () =>\n      this.startTimer()\n    );\n  };\n\n  public setToNotInQueue = () => {\n    this.setState({ queueStatus: MentorQueueStatus.NOT_IN_QUEUE }, () =>\n      this.stopAndClearTimer()\n    );\n  };\n\n  public setToBusy = () => {\n    this.setState({ queueStatus: MentorQueueStatus.BUSY }, () =>\n      this.stopAndClearTimer()\n    );\n  };\n\n  public toggleQueueStatus = () => {\n    const { queueStatus, questionId } = this.state;\n    const { history } = this.props;\n    if (queueStatus === MentorQueueStatus.BUSY) {\n      history.push(`/results/${questionId}`);\n    } else {\n      this.setState({ pending: true }, () => {\n        axios({\n          method: 'post',\n          url: '/api/join_queue',\n        })\n          .then((result) => {\n            const { data } = result;\n            const { question_id, status } = data;\n            if (status === MentorQueueStatus.BUSY) {\n              this.setState({ questionId: question_id }, () =>\n                this.setStatus(status)\n              );\n            } else {\n              this.setStatus(status);\n            }\n          })\n          .catch((err: any) => console.log(err))\n          .finally(() => this.setState({ pending: false }));\n      });\n    }\n  };\n\n  public render() {\n    const { pending, queueStatus, timeInQueue } = this.state;\n    const { classes } = this.props;\n    return (\n      <>\n        {queueStatus !== MentorQueueStatus.NOT_IN_QUEUE && (\n          <div className={classes.timeInQueue}>\n            <Typography className={classes.queueLabel} variant=\"caption\">\n              Time in Queue:\n            </Typography>\n            <Typography className={classes.queueTimer}>\n              {timeInQueue}\n            </Typography>\n          </div>\n        )}\n        {pending ? (\n          <Button className={classes.pendingBtn} disabled={true}>\n            <Settings className={classes.pendingIcon} /> Working\n          </Button>\n        ) : (\n          <Tooltip title={queueButtonText[queueStatus]}>\n            <IconButton\n              onClick={this.toggleQueueStatus}\n              className={classes[queueButtonClass[queueStatus]]}\n            >\n              {queueButtonIcon[queueStatus]}\n            </IconButton>\n          </Tooltip>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarMentorStatus));\n","import * as React from 'react';\n\nimport {\n  Chip,\n  IconButton,\n  Paper,\n  StyleRulesCallback,\n  Theme,\n  Tooltip,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\n\nimport Check from '@material-ui/icons/Check';\nimport Close from '@material-ui/icons/Close';\nimport { IAnswer } from '../../interfaces/Answer';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport InputContainer from '../Input/InputContainer';\nimport Send from '@material-ui/icons/Send';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport axios from 'axios';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nexport interface IResultProps extends WithStyles<typeof styles> {\n  answers: IAnswer[];\n  user: IUser;\n  result: IQuestion;\n  tags: ITag[];\n  updateQuestionAnswer: (answer: IAnswer) => void;\n}\n\nexport interface IResultState {\n  answerText: string;\n}\n\nconst resultStatusText: { [key in ResultStatusTypes]: string } = {\n  NOT_SUBMITTED: 'Not submitted',\n  SUBMITTED: 'Connecting with a Mentor...',\n  ACCEPTED: 'A Mentor is currently answering your question',\n  ANSWERED:\n    'Your question has been answered. If you are not satisfied with your answer, click the red X',\n  RESOLVED: 'Your question has been answered.',\n};\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  answerActionsContainer: {\n    display: 'flex',\n    width: '100%',\n  },\n  answerActions: {\n    marginLeft: 'auto',\n  },\n  chip: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderColor: theme.palette.primary.main,\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    marginRight: theme.spacing.unit / 2,\n    marginBottom: theme.spacing.unit / 2,\n  },\n  root: {\n    padding: theme.spacing.unit * 2,\n    marginTop: 'auto',\n    marginBottom: 'auto',\n  },\n  resultHeader: {\n    textAlign: 'center',\n    marginBottom: theme.spacing.unit * 2,\n  },\n  resultContent: {\n    padding: theme.spacing.unit * 2,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    border: 'none',\n    paddingTop: '16.5px',\n    paddingBottom: '16.5px',\n    color: theme.palette.text.primary,\n    wordWrap: 'break-word',\n    outline: 'none',\n    resize: 'none',\n    width: 'calc(100% - 24px)',\n    fontFamily: 'monospace',\n    '&::placeholder': {\n      opacity: 0.65,\n      color: theme.palette.text.primary,\n    },\n  },\n  rejectAction: {\n    color: '#dc3545',\n    '&:hover': {\n      backgroundColor: lighten('#dc3545', 0.75),\n    },\n  },\n  answerAccepted: {\n    color: 'green',\n    marginLeft: 'auto',\n  },\n  answerRejected: {\n    color: '#dc3545',\n    marginLeft: 'auto',\n  },\n});\n\nclass Result extends React.Component<IResultProps, IResultState> {\n  public state = {\n    answerText: '',\n  };\n\n  public getTagById = (id: number) => {\n    const { tags } = this.props;\n    const len = tags.length;\n    let result = {} as { id: number; name: string };\n    for (let i = 0; i < len; i += 1) {\n      if (tags[i].id === id) {\n        result = tags[i];\n        break;\n      }\n    }\n    return result;\n  };\n\n  public _handleAnswerChange = (ev: any) => {\n    this.setState({ answerText: ev.target.value });\n  };\n\n  public _handleSubmit = () => {\n    if (this.submitIsDisabled()) {\n      return;\n    } else {\n      const { answerText } = this.state;\n      const { result } = this.props;\n      axios({\n        method: 'post',\n        url: `/api/questions/${result.id}/answers`,\n        params: {\n          content: answerText,\n        },\n      })\n        .then((res) => console.log(res))\n        .catch((err) => console.log(err));\n    }\n  };\n\n  public _handleAcceptAnswer = (aid: number) => {\n    const { updateQuestionAnswer } = this.props;\n    axios({\n      method: 'put',\n      url: `/api/answers/${aid}`,\n      params: {\n        selected: true,\n      },\n    })\n      .then((result) => {\n        const { data } = result;\n        updateQuestionAnswer(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  public _handleRejectAnswer = (aid: number) => {\n    const { updateQuestionAnswer } = this.props;\n    axios({\n      method: 'put',\n      url: `/api/answers/${aid}`,\n      params: {\n        selected: false,\n      },\n    })\n      .then((result) => {\n        const { data } = result;\n        updateQuestionAnswer(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  public submitIsDisabled = () => {\n    const { answerText } = this.state;\n    const { result } = this.props;\n\n    if (answerText.length === 0) {\n      return true;\n    }\n    if (result.question_status.status !== ResultStatusTypes.ACCEPTED) {\n      return true;\n    }\n\n    return false;\n  };\n\n  public render() {\n    const { answerText } = this.state;\n    const { answers, classes, user, result } = this.props;\n    return (\n      <Paper className={classes.root} elevation={4}>\n        {user.is_mentor && result.question_status.mentor_id === user.id ? (\n          <>\n            <div className={classes.resultContent}>\n              <Typography variant=\"caption\">\n                <strong>Question:</strong>\n              </Typography>\n              {result.title && (\n                <InputContainer>\n                  <textarea\n                    readOnly={true}\n                    value={result.title}\n                    className={classes.input}\n                  />\n                </InputContainer>\n              )}\n              <InputContainer>\n                <TextareaAutosize\n                  readOnly={true}\n                  value={result.content}\n                  className={classes.input}\n                />\n              </InputContainer>\n              {result.tags.map((tag) => {\n                return (\n                  <Chip\n                    key={tag}\n                    className={classes.chip}\n                    label={this.getTagById(tag).name}\n                  />\n                );\n              })}\n              <Typography align=\"right\" variant=\"caption\">\n                <strong>Submitted:</strong>{' '}\n                {new Date(result.created_at).toLocaleDateString()}{' '}\n                {new Date(result.created_at).toLocaleTimeString()}\n              </Typography>\n            </div>\n            {answers.length > 0 && (\n              <div className={classes.resultContent}>\n                <Typography variant=\"caption\">\n                  <strong>Previous Answers:</strong>\n                </Typography>\n                {answers.map((ans, index) => {\n                  return (\n                    <>\n                      <InputContainer key={index}>\n                        <TextareaAutosize\n                          readOnly={true}\n                          value={ans.content}\n                          className={classes.input}\n                        />\n                      </InputContainer>\n                      <div className={classes.answerActionsContainer}>\n                        {ans.selected ? (\n                          <Typography\n                            variant=\"caption\"\n                            className={classes.answerAccepted}\n                          >\n                            <strong>Status: Accepted</strong>\n                          </Typography>\n                        ) : (\n                          <Typography\n                            variant=\"caption\"\n                            className={classes.answerRejected}\n                          >\n                            <strong>Status: Rejected</strong>\n                          </Typography>\n                        )}\n                      </div>\n                    </>\n                  );\n                })}\n              </div>\n            )}\n            {!result.solved && (\n              <div className={classes.resultContent}>\n                <Typography variant=\"caption\">\n                  <strong>Your Answer:</strong>\n                </Typography>\n                <InputContainer>\n                  <TextareaAutosize\n                    className={classes.input}\n                    name=\"answer\"\n                    placeholder=\"Enter Answer\"\n                    autoFocus={true}\n                    required={true}\n                    value={answerText}\n                    onChange={this._handleAnswerChange}\n                  />\n                  <Tooltip title=\"Submit Answer\" placement=\"right\">\n                    <IconButton\n                      className={classes.inputIcon}\n                      onClick={this._handleSubmit}\n                      disabled={this.submitIsDisabled()}\n                      tabIndex={-1}\n                    >\n                      <Send />\n                    </IconButton>\n                  </Tooltip>\n                </InputContainer>\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            <div className={classes.resultHeader}>\n              <Typography variant=\"caption\">\n                Status: {resultStatusText[result.question_status.status]}\n              </Typography>\n            </div>\n            <div className={classes.resultContent}>\n              <Typography variant=\"caption\">\n                <strong>Your Question:</strong>\n              </Typography>\n              {result.title && (\n                <InputContainer>\n                  <textarea\n                    readOnly={true}\n                    value={result.title}\n                    className={classes.input}\n                  />\n                </InputContainer>\n              )}\n              <InputContainer>\n                <TextareaAutosize\n                  readOnly={true}\n                  value={result.content}\n                  className={classes.input}\n                />\n              </InputContainer>\n              {result.tags.map((tag) => {\n                return (\n                  <Chip\n                    key={tag}\n                    className={classes.chip}\n                    label={this.getTagById(tag).name}\n                  />\n                );\n              })}\n              <Typography align=\"right\" variant=\"caption\">\n                <strong>Submitted:</strong>{' '}\n                {new Date(result.created_at).toLocaleDateString()}{' '}\n                {new Date(result.created_at).toLocaleTimeString()}\n              </Typography>\n            </div>\n            {answers.length > 0 && (\n              <div className={classes.resultContent}>\n                <Typography variant=\"caption\">\n                  <strong>Answers:</strong>\n                </Typography>\n                {answers\n                  .sort((a, b) => {\n                    const aDate = new Date(a.created_at);\n                    const bDate = new Date(b.created_at);\n                    return aDate > bDate ? -1 : 1;\n                  })\n                  .map((ans, index) => {\n                    return (\n                      <div key={index} className={classes.answer}>\n                        <InputContainer>\n                          <TextareaAutosize\n                            readOnly={true}\n                            value={ans.content}\n                            className={classes.input}\n                          />\n                        </InputContainer>\n                        <div className={classes.answerActionsContainer}>\n                          {index === 0 ? (\n                            ans.selected === false ? (\n                              <div className={classes.answerActions}>\n                                <Tooltip title=\"Accept Answer\">\n                                  <IconButton\n                                    color=\"primary\"\n                                    onClick={() =>\n                                      this._handleAcceptAnswer(ans.id)\n                                    }\n                                  >\n                                    <Check />\n                                  </IconButton>\n                                </Tooltip>\n                                <Tooltip\n                                  title=\"Reject Answer\"\n                                  onClick={() =>\n                                    this._handleRejectAnswer(ans.id)\n                                  }\n                                >\n                                  <IconButton className={classes.rejectAction}>\n                                    <Close />\n                                  </IconButton>\n                                </Tooltip>\n                              </div>\n                            ) : (\n                              <Typography\n                                variant=\"caption\"\n                                className={classes.answerAccepted}\n                              >\n                                <strong>Status: Accepted</strong>\n                              </Typography>\n                            )\n                          ) : (\n                            <Typography\n                              variant=\"caption\"\n                              className={classes.answerRejected}\n                            >\n                              <strong>Status: Rejected</strong>\n                            </Typography>\n                          )}\n                        </div>\n                        {index !== answers.length - 1 && (\n                          <hr\n                            style={{ marginTop: '5px', marginBottom: '5px' }}\n                          />\n                        )}\n                      </div>\n                    );\n                  })}\n              </div>\n            )}\n          </>\n        )}\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(Result);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\nimport { getAnswersByQuestionId, getQuestionByQuestionId } from '../../api';\n\nimport { IAnswer } from '../../interfaces/Answer';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport Result from './Result';\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport posed from 'react-pose';\n\nexport interface IResultContainerProps extends WithStyles<typeof styles> {\n  handleFinishLoading: () => void;\n  setQuestions: (questions: IQuestion[]) => void;\n  questions: IQuestion[];\n  user: IUser;\n  tags: ITag[];\n  questionId: string;\n}\n\nexport interface IResultContainerState {\n  answers: IAnswer[];\n  visible: boolean;\n  question: IQuestion;\n}\n\nconst TRANSITION_DURATION = 350;\n\nconst OpacityContainer = posed.div({\n  hidden: { opacity: 0, transition: { duration: TRANSITION_DURATION } },\n  visible: { opacity: 1, transition: { duration: TRANSITION_DURATION } },\n});\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    display: 'flex',\n  },\n  vCenter: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n  },\n  container: {\n    width: '100%'\n  }\n});\n\nclass ResultContainer extends React.Component<\n  IResultContainerProps,\n  IResultContainerState\n  > {\n  public signal = axios.CancelToken.source();\n\n  public state = {\n    answers: [] as IAnswer[],\n    visible: false,\n    question: {} as IQuestion\n  };\n\n  public componentDidMount() {\n    this.getQuestionData();\n  }\n\n  public getQuestionData = () => {\n    const { handleFinishLoading, questions, setQuestions, questionId } = this.props;\n    if (questionId) {\n      const qid = parseInt(questionId, 10);\n      getQuestionByQuestionId(qid, (question) => {\n        const newQuestions = [...questions];\n        const qIndex = newQuestions.findIndex(q => q.id === qid);\n        if (qIndex !== -1) {\n          newQuestions[qIndex] = question;\n          setQuestions(newQuestions);\n        }\n        this.setState({ question }, () => {\n          const qstatus = question.question_status.status;\n          if (qstatus === ResultStatusTypes.ANSWERED || qstatus === ResultStatusTypes.RESOLVED) {\n            getAnswersByQuestionId(qid, (answers) => {\n              this.setState({ answers, visible: true });\n              handleFinishLoading();\n            });\n          } else {\n            handleFinishLoading();\n            this.setState({ visible: true });\n          }\n        });\n      }, this.signal);\n    }\n  };\n\n  public updateQuestionAnswer = (answer: IAnswer) => {\n    const newAnswers = [...this.state.answers];\n    const aIndex = newAnswers.findIndex(a => a.id === answer.id);\n    if (aIndex !== -1) {\n      newAnswers[aIndex] = answer;\n    }\n    this.setState({ answers: newAnswers });\n  }\n\n  public componentWillUnmount() {\n    this.signal.cancel('Result status request cancelled');\n  }\n\n  public render() {\n    const { answers, visible, question } = this.state;\n    const { classes, questionId, user, tags } = this.props;\n    return (\n      <Grid item={true} xs={11} sm={6} md={4} lg={4} className={classes.root}>\n        {questionId ? (\n          <OpacityContainer\n            className={classnames(classes.container, classes.vCenter)}\n            pose={visible ? 'visible' : 'hidden'}\n          >\n            {visible && question && <Result answers={answers} result={question} tags={tags} user={user} updateQuestionAnswer={this.updateQuestionAnswer} />}\n          </OpacityContainer>\n        ) : (\n            <div>no questionId provided</div>\n          )}\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ResultContainer);\n","import * as React from 'react';\n\nimport {\n  Grid,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IQuestion } from '../../interfaces/Question';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport ResultContainer from '../Result/ResultContainer';\n\nexport interface IResultPageProps extends WithStyles<typeof styles> {\n  handleFinishLoading: () => void;\n  setQuestions: (questions: IQuestion[]) => void;\n  questions: IQuestion[];\n  user: IUser;\n  questionId: string;\n  tags: ITag[];\n}\n\nexport interface IResultPageState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    marginTop: '-45px',\n  },\n});\n\nclass ResultPage extends React.Component<IResultPageProps, IResultPageState> {\n  public render() {\n    const { classes, handleFinishLoading, questionId, user, questions, tags, setQuestions } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container={true} justify={'center'}>\n          <ResultContainer tags={tags} questions={questions} setQuestions={setQuestions} handleFinishLoading={handleFinishLoading} questionId={questionId} user={user} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ResultPage);\n","import * as React from 'react';\n\nimport {\n  CircularProgress,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  StaticContext,\n  Switch,\n  withRouter,\n} from 'react-router';\n\nimport AuthPage from '../Pages/AuthPage';\nimport { IAnswer } from '../../interfaces/Answer';\nimport { IQuestion } from '../../interfaces/Question';\nimport { ISettings } from '../../interfaces/Settings';\nimport { ITag } from '../../interfaces/Tag';\nimport { IUser } from '../../interfaces/User';\nimport MainPage from '../Pages/MainPage';\nimport MentorPage from '../Pages/MentorPage';\nimport ProfilePage from '../Pages/ProfilePage';\nimport ResultPage from '../Pages/ResultPage';\nimport { TabTypes } from '../Profile/ProfileContainer';\nimport axios from 'axios';\nimport classnames from 'classnames';\n\nexport interface IMainContentProps {\n  addQuestion: (question: IQuestion) => void;\n  editUser: (user: IUser) => void;\n  handleSignIn: (user: IUser) => void;\n  setTimeZone: (timeZone: string) => void;\n  toggleTheme: () => void;\n  user: IUser | null;\n  userSettings: ISettings;\n  questions: IQuestion[];\n  answers: IAnswer[];\n  setQuestions: (questions: IQuestion[]) => void;\n  setAnswers: (answers: IAnswer[]) => void;\n}\n\nexport interface IMainContentState {\n  loading: boolean;\n  tags: ITag[];\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    marginTop: '90px',\n    width: '100%',\n    display: 'flex',\n  },\n  loading: {\n    margin: 'auto',\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '25%',\n    height: '25%',\n    margin: 'auto',\n  },\n  switchContainer: {\n    display: 'flex',\n    width: '100%',\n  },\n  hidden: {\n    display: 'none',\n  },\n});\n\nclass MainContent extends React.Component<\n  RouteComponentProps<any> & WithStyles<any> & IMainContentProps,\n  IMainContentState\n  > {\n  public state = {\n    loading: true,\n    tags: [] as ITag[],\n  };\n\n  public componentDidMount() {\n    axios('/api/tags').then((result) => {\n      const { data } = result;\n      this.setState({ tags: data });\n    });\n  }\n\n  public handleFinishedLoading = () => {\n    console.log('Finished loading!');\n    this.isNotLoading();\n  };\n\n  public handleStartLoading = () => {\n    console.log('Loading data!');\n    this.isLoading();\n  };\n\n  public isLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  public isNotLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  public render() {\n    const {\n      classes,\n      editUser,\n      setTimeZone,\n      toggleTheme,\n      user,\n      userSettings,\n      answers,\n      setAnswers,\n      questions,\n      setQuestions,\n      addQuestion\n    } = this.props;\n    const { loading, tags } = this.state;\n    const homePage = () => {\n      return (\n        <MainPage\n          addQuestion={addQuestion}\n          handleFinishLoading={this.handleFinishedLoading}\n          tags={tags}\n        />\n      );\n    };\n    const authPage = () => {\n      return (\n        <AuthPage\n          handleFinishLoading={this.handleFinishedLoading}\n          handleSignIn={this.props.handleSignIn}\n        />\n      );\n    };\n    const resultPage = (\n      props: RouteComponentProps<any, StaticContext, any>\n    ) => {\n      const { questionId } = props.match.params;\n      return user ? (\n        <ResultPage key={questionId} tags={tags} setQuestions={setQuestions} questions={questions} questionId={questionId} user={user} handleFinishLoading={this.handleFinishedLoading} />\n      ) : (\n          <Redirect to='/login' />\n        );\n    };\n\n    const mentorPage = () => {\n      return <MentorPage tags={tags} />;\n    };\n\n    const profilePage = (\n      props: RouteComponentProps<any, StaticContext, any>\n    ) => {\n      const { location } = props;\n      const { state } = location;\n      return user ? (\n        <ProfilePage\n          questions={questions}\n          answers={answers}\n          setQuestions={setQuestions}\n          setAnswers={setAnswers}\n          currentTab={state ? state.currentTab && state.currentTab : TabTypes.Home}\n          editUser={editUser}\n          mentorDialogOpen={state ? state.mentorDialogOpen && state.mentorDialogOpen : false}\n          handleFinishLoading={this.handleFinishedLoading}\n          setTimeZone={setTimeZone}\n          tags={tags}\n          toggleTheme={toggleTheme}\n          user={user}\n          userSettings={userSettings}\n        />\n      ) : (\n          <Redirect to=\"/login\" />\n        );\n    };\n\n    return (\n      <div className={classes.root}>\n        <>\n          {loading && (\n            <div className={classes.loadingContainer}>\n              <CircularProgress className={classes.loading} size={96} />\n            </div>\n          )}\n          <div\n            className={classnames(\n              classes.switchContainer,\n              loading && classes.hidden\n            )}\n          >\n            <Switch>\n              <Route\n                exact={true}\n                path=\"/\"\n                render={() => {\n                  return user ? homePage() : <Redirect to=\"/login\" />;\n                }}\n              />\n              <Route path=\"/login\" render={authPage} />\n              <Route path=\"/profile\" render={(props) => profilePage(props)} />\n              <Route path=\"/queue\" render={mentorPage} />\n              <Route\n                path=\"/results/:questionId\"\n                render={(props) => resultPage(props)}\n              />\n              <Route key='empty' path=\"/empty\" render={(props) => {\n                return <Redirect to={`${props.location.state.previous}`} />\n              }} />\n            </Switch>\n          </div>\n        </>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(MainContent));\n","import * as React from 'react';\n\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { StyleRulesCallback, Theme, Toolbar, WithStyles, withStyles } from '@material-ui/core';\n\nexport interface INavBarToolbarProps extends WithStyles<typeof styles> {\n  logoColor: string;\n}\n\nexport interface INavBarToolbarState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  appBarLogo: {\n    height: '64px',\n    [theme.breakpoints.only('xs')]: {\n      height: '42px'\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    marginTop: 'auto',\n    marginBottom: 'auto'\n  },\n  toolbarAuth: {\n    display: 'flex',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    '& > a': {\n      [theme.breakpoints.only('xs')]: {\n        width: '100%',\n        display: 'flex',\n        marginTop: '50px'\n      }\n    }\n  },\n  appBarLogoAuthPage: {\n    height: '64px',\n    [theme.breakpoints.only('xs')]: {\n      height: '80px',\n      margin: 'auto',\n    }\n  },\n  marginLeftAuto: {\n    marginLeft: 'auto',\n    display: 'flex'\n  },\n});\n\nclass NavBarToolbar extends React.Component<\n  RouteComponentProps<any> & INavBarToolbarProps,\n  INavBarToolbarState\n  > {\n  public render() {\n    const { classes, location, logoColor } = this.props;\n    return (\n      <Toolbar className={location.pathname === '/login' ? classes.toolbarAuth : classes.toolbar}>\n        <Link to=\"/\">\n          <img\n            className={location.pathname === '/login' ? classes.appBarLogoAuthPage : classes.appBarLogo}\n            src={`https://s3.ca-central-1.amazonaws.com/conch-resources/conch_logo_${logoColor}.png`}\n          />\n        </Link>\n        <div className={classes.marginLeftAuto}>{this.props.children}</div>\n      </Toolbar>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarToolbar));\n","import {\n  AppBar,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { ThemeTypes } from '../AppContainer/AppContainer';\nimport NavBarToolbar from './NavBarToolbar';\n\nexport interface INavBarProps {\n  isTransparent: boolean;\n  theme: ThemeTypes;\n  toggleTheme: () => void;\n}\n\nexport interface INavBarState {\n  scrollTop: number;\n}\n\nexport const DRAWER_WIDTH = 280;\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    height: '90px',\n    paddingLeft: theme.spacing.unit * 2,\n    paddingRight: theme.spacing.unit * 2,\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBarShift: {\n    marginLeft: DRAWER_WIDTH,\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarTransparent: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    boxShadow: 'none',\n  },\n  appBarLogo: {\n    height: '64px',\n  },\n  toolbar: {\n    display: 'flex',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n  },\n  marginLeftAuto: {\n    marginLeft: 'auto',\n    display: 'flex',\n  },\n  addressContainer: {\n    marginRight: theme.spacing.unit * 4,\n    '& > p,h3,span': {\n      color: 'white',\n    },\n    '& > h3': {\n      fontSize: '1rem',\n      fontWeight: 'bold',\n    },\n  },\n  addressLabel: {\n    textAlign: 'right',\n  },\n  lightIcon: {\n    color: theme.palette.primary.main,\n  },\n  darkIcon: {\n    color: theme.palette.text.primary,\n  },\n});\n\nclass NavBar extends React.Component<\n  WithStyles<any> & INavBarProps,\n  INavBarState\n> {\n  public state = {\n    scrollTop: 0,\n  };\n\n  public componentDidMount() {\n    window.addEventListener('scroll', () => {\n      this.setState({ scrollTop: document.documentElement.scrollTop });\n    });\n  }\n\n  public render() {\n    const { scrollTop } = this.state;\n    const { children, classes, isTransparent, theme } = this.props;\n    const localIsTransparent = isTransparent || scrollTop === 0;\n    const logoColor = theme === ThemeTypes.LIGHT ? 'purple' : 'white';\n    return (\n      <AppBar\n        position=\"fixed\"\n        className={classNames(\n          classes.appBar,\n          localIsTransparent && classes.appBarTransparent\n        )}\n      >\n        <NavBarToolbar logoColor={logoColor}>{children}</NavBarToolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(NavBar);\n","import * as React from 'react';\n\nimport {\n  Avatar,\n  StyleRulesCallback,\n  Theme,\n  Typography,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\n\nimport { IUser } from '../../interfaces/User';\n\nexport interface IAccountMenuSummaryProps extends WithStyles<typeof styles> {\n  user: IUser;\n}\n\nexport interface IAccountMenuSummaryState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  avatar: {\n    height: '40px',\n    width: '40px',\n    borderRadius: '5px',\n  },\n  root: {\n    padding: theme.spacing.unit * 2,\n    paddingTop: theme.spacing.unit,\n    display: 'flex',\n  },\n  userInfo: {\n    marginLeft: theme.spacing.unit,\n  },\n  userNickName: {\n    fontWeight: 'bold',\n  },\n  userStatus: {},\n});\n\nclass AccountMenuSummary extends React.Component<\n  IAccountMenuSummaryProps,\n  IAccountMenuSummaryState\n  > {\n  public render() {\n    const { classes, user } = this.props;\n    return (\n      <div className={classes.root}>\n        <Avatar className={classes.avatar} src={user.avatar_url} />\n        <div className={classes.userInfo}>\n          <Typography className={classes.userNickName}>\n            {user.nickname}\n          </Typography>\n          <Typography className={classes.userStatus} variant=\"caption\">\n            {user.is_mentor ? 'Mentor' : 'Client'}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AccountMenuSummary);\n","import * as React from 'react';\n\nimport { Avatar, Menu, MenuItem, StyleRulesCallback, Theme, WithStyles, withStyles } from '@material-ui/core';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport AccountMenuSummary from './AccountMenuSummary';\nimport { IUser } from '../../interfaces/User';\nimport { ThemeTypes } from '../../themes/mainTheme';\nimport classnames from 'classnames';\nimport { darken } from '@material-ui/core/styles/colorManipulator';\n\nexport interface INavBarAccountProps extends WithStyles<typeof styles> {\n  anchorEl: HTMLElement | undefined;\n  handleClick: (event: any) => void;\n  handleClose: (callback?: () => void) => void;\n  handleSignOut: () => void;\n  isTransparent: boolean;\n  theme: ThemeTypes;\n  user: IUser | null;\n}\n\nexport interface INavBarAccountState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n  link: {\n    textDecoration: 'none',\n  },\n  avatar: {\n    margin: 'auto',\n    borderRadius: '5px',\n    [theme.breakpoints.only('xs')]: {\n      height: '32px',\n      width: '32px'\n    }\n  },\n  accountMenuButtonContainer: {\n    display: 'flex',\n    '& .root:hover': {\n      backgroundColor: 'rgba(0,0,0,0)',\n    },\n  },\n  accountMenuButton: {\n    color: theme.palette.primary.main,\n    fontSize: '1.25rem',\n    fontWeight: 'bold',\n  },\n  whiteText: {\n    '& *': {\n      color: 'white',\n    },\n  },\n  verticalDivider: {\n    marginLeft: '15px',\n    marginRight: '15px',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    fontSize: '1.5rem',\n    fontWeight: 'lighter',\n  },\n  menuList: {\n    marginTop: '60px',\n  },\n  spacing: {\n    marginLeft: theme.spacing.unit,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 2,\n    }\n  },\n  userAccount: {\n    display: 'flex',\n    cursor: 'pointer',\n    padding: theme.spacing.unit / 2,\n    '&:hover': {\n      backgroundColor: darken(theme.palette.background.default, 0.1),\n    },\n  },\n});\n\nclass NavBarAccount extends React.Component<\n  RouteComponentProps<any> & INavBarAccountProps,\n  INavBarAccountState\n  > {\n  public render() {\n    const {\n      anchorEl,\n      classes,\n      handleClick,\n      handleClose,\n      handleSignOut,\n      location,\n      theme,\n      user,\n    } = this.props;\n    return (\n      <div\n        className={classnames(\n          classes.navBarAccountContainers,\n          theme === ThemeTypes.DARK && classes.whiteText\n        )}\n      >\n        {location.pathname === '/login' ||\n          location.pathname === '/register' ? null : user &&\n          <>\n            <div className={classes.spacing}>\n              <div className={classes.userAccount} onClick={handleClick}>\n                <Avatar className={classes.avatar} src={user.avatar_url} />\n              </div>\n            </div>\n            <Menu\n              id=\"accountOptions-menu\"\n              className={classes.accountMenu}\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={() => handleClose()}\n              classes={{\n                paper: classes.menuList,\n              }}\n            >\n              <AccountMenuSummary user={user} />\n              <Link\n                className={classes.link}\n                to=\"/profile\"\n                onClick={() => handleClose()}\n              >\n                <MenuItem>Profile</MenuItem>\n              </Link>\n              <MenuItem onClick={() => handleClose(handleSignOut)}>\n                Sign Out\n              </MenuItem>\n            </Menu>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarAccount));\n","import * as React from 'react';\n\nimport { Badge, IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { Link } from 'react-router-dom';\nimport Spellcheck from '@material-ui/icons/Spellcheck';\nimport { TabTypes } from '../Profile/ProfileContainer';\n\nexport interface INavBarListAnswersProps extends WithStyles<typeof styles> {\n  unread: number;\n}\n\nexport interface INavBarListAnswersState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass NavBarListAnswers extends React.Component<RouteComponentProps<any> & INavBarListAnswersProps, INavBarListAnswersState> {\n  public render() {\n    const { location, unread } = this.props;\n    return (\n      <Tooltip title='My Answers'>\n        <Link to={{\n          pathname: '/profile',\n          state: { currentTab: TabTypes.MentorPanel }\n        }}\n          replace={location.pathname === '/profile'}>\n          <IconButton>\n            <Badge badgeContent={unread} color='primary'>\n              <Spellcheck />\n            </Badge>\n          </IconButton>\n        </Link>\n      </Tooltip>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarListAnswers));\n","import * as React from 'react';\n\nimport { Badge, IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/icons/List';\nimport { TabTypes } from '../Profile/ProfileContainer';\n\nexport interface INavBarListQuestionsProps extends WithStyles<typeof styles> {\n  unread: number;\n}\n\nexport interface INavBarListQuestionsState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass NavBarListQuestions extends React.Component<RouteComponentProps<any> & INavBarListQuestionsProps, INavBarListQuestionsState> {\n  public render() {\n    const { location, unread } = this.props;\n    return (\n      <Tooltip title='My Questions'>\n        <Link to={{\n          pathname: '/profile',\n          state: { currentTab: TabTypes.Home }\n        }}\n          replace={location.pathname === '/profile'}>\n          <IconButton>\n            <Badge badgeContent={unread} color='primary'>\n              <List />\n            </Badge>\n          </IconButton>\n        </Link>\n      </Tooltip>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarListQuestions));\n","import * as React from 'react';\n\nimport { IconButton, StyleRulesCallback, Theme, Tooltip, WithStyles, withStyles } from '@material-ui/core';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport School from '@material-ui/icons/School';\nimport { TabTypes } from '../Profile/ProfileContainer';\n\nexport interface INavBarMentorSignUpProps extends WithStyles<typeof styles> {\n  placeholder?: string;\n}\n\nexport interface INavBarMentorSignUpState {\n  placeholder?: string;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass NavBarMentorSignUp extends React.Component<RouteComponentProps<any> & INavBarMentorSignUpProps, INavBarMentorSignUpState> {\n  public render() {\n    const { location } = this.props;\n    console.log(location.pathname);\n    return (\n      <Tooltip title='Become a Mentor'>\n        <Link to={{\n          pathname: '/profile',\n          state: { currentTab: TabTypes.Settings, mentorDialogOpen: true }\n        }}\n          replace={location.pathname === '/profile'}>\n          <IconButton>\n            <School />\n          </IconButton>\n        </Link>\n      </Tooltip>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(NavBarMentorSignUp));\n","import {\n  MuiThemeProvider,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport * as React from 'react';\n\nimport { mainTheme } from '../../themes/mainTheme';\nimport App from '../App/App';\nimport {\n  ISettings,\n  INumberSettings,\n  IStringSettings,\n} from '../../interfaces/Settings';\n\nexport enum ThemeTypes {\n  LIGHT,\n  DARK,\n}\n\nexport interface IAppContainerProps {\n  placeholder?: string;\n}\n\nexport interface IAppContainerState {\n  userSettings: ISettings;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {},\n});\n\nclass AppContainer extends React.Component<\n  WithStyles<any> & IAppContainerProps,\n  IAppContainerState\n> {\n  public state = {\n    userSettings: {\n      themeType: ThemeTypes.LIGHT,\n    } as ISettings,\n  };\n\n  public componentDidMount() {\n    this.getAllSettings();\n  }\n\n  public getAllSettings = () => {\n    const { userSettings } = this.state;\n\n    const defaultNumberSettings: INumberSettings = {\n      themeType: ThemeTypes.LIGHT,\n    };\n\n    const defaultStringSettings: IStringSettings = {\n      timeZone: 'America/Toronto',\n    };\n\n    Object.keys(defaultNumberSettings).map((key) => {\n      const localSetting =\n        localStorage.getItem(key) || defaultNumberSettings[key];\n      const asNumber = parseInt(localSetting, 10);\n      userSettings[key] = asNumber;\n      this.setState({ userSettings });\n    });\n\n    Object.keys(defaultStringSettings).map((key) => {\n      const localSetting =\n        localStorage.getItem(key) || defaultStringSettings[key];\n      userSettings[key] = localSetting;\n      this.setState({ userSettings });\n    });\n  };\n\n  public toggleTheme = () => {\n    const newSettings = { ...this.state.userSettings };\n    newSettings.themeType = 1 - newSettings.themeType;\n    this.setState({ userSettings: newSettings }, () =>\n      localStorage.setItem('themeType', `${newSettings.themeType}`)\n    );\n  };\n\n  public setTimeZone = (timeZone: string) => {\n    const newSettings = { ...this.state.userSettings };\n    newSettings.timeZone = timeZone;\n    this.setState({ userSettings: newSettings }, () =>\n      localStorage.setItem('timeZone', `${newSettings.timeZone}`)\n    );\n  };\n\n  public render() {\n    const { userSettings } = this.state;\n    const { themeType } = userSettings;\n    const currentTheme = mainTheme(themeType);\n    return (\n      <MuiThemeProvider theme={currentTheme}>\n        <App\n          toggleTheme={this.toggleTheme}\n          setTimeZone={this.setTimeZone}\n          userSettings={userSettings}\n        />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(AppContainer);\n","import { AnswerStatusTypes, IAnswer } from '../../interfaces/Answer';\nimport {\n  Button,\n  CircularProgress,\n  IconButton,\n  Snackbar,\n  SnackbarContent,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport { IQuestion, ResultStatusTypes } from '../../interfaces/Question';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { getAnswersByUserId, getQuestionsByUserId } from '../../api';\n\nimport Close from '@material-ui/icons/Close';\nimport FooterContainer from '../Footer/FooterContainer';\nimport { IPNMessage } from '../../interfaces/Message';\nimport { ISettings } from '../../interfaces/Settings';\nimport { IUser } from '../../interfaces/User';\nimport { Link } from 'react-router-dom';\nimport MainContent from '../MainContent/MainContent';\nimport NavBar from '../NavBar/NavBar';\nimport NavBarAccount from '../NavBar/NavBarAccount';\nimport NavBarListAnswers from '../NavBar/NavBarListAnswers';\nimport NavBarListQuestions from '../NavBar/NavBarListQuestions';\nimport NavBarMentorSignUp from '../NavBar/NavBarMentorSignUp';\nimport NavBarMentorStatus from '../NavBar/NavBarMentorStatus';\nimport PubNubReact from 'pubnub-react';\nimport axios from 'axios';\n\nexport interface IAppState {\n  answers: IAnswer[];\n  loading: boolean;\n  navBarAnchorEl: HTMLElement | undefined;\n  pn_messages: { [index: string]: IPNMessage[] };\n  questions: IQuestion[];\n  snackbarQuestionId: number | undefined;\n  snackbarOpen: boolean;\n  snackbarText: string;\n  user: IUser | null;\n}\n\nexport interface IAppProps {\n  toggleTheme: () => void;\n  setTimeZone: (timeZone: string) => void;\n  userSettings: ISettings;\n}\n\nconst styles: StyleRulesCallback<any> = (theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100%',\n    display: 'flex',\n  },\n  loading: {\n    margin: 'auto',\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '25%',\n    height: '25%',\n    margin: 'auto',\n  },\n});\n\nclass App extends Component<\n  RouteComponentProps<any> & WithStyles<any> & IAppProps,\n  IAppState\n> {\n  public pubNub: PubNubReact;\n  constructor(props: RouteComponentProps<any> & WithStyles<any> & IAppProps) {\n    super(props);\n    this.state = {\n      answers: [] as IAnswer[],\n      pn_messages: {},\n      loading: true,\n      snackbarQuestionId: undefined,\n      snackbarOpen: false,\n      snackbarText: 'placeholder text',\n      questions: [] as IQuestion[],\n      navBarAnchorEl: undefined,\n      user: null,\n    };\n    this.pubNub = new PubNubReact({\n      publishKey: 'pub-c-b3773bad-955a-4ee6-907a-72fa89daa2bd',\n      subscribeKey: 'sub-c-9cef740a-58a2-11e9-af7f-e675e2b0822b',\n    });\n\n    this.pubNub.init(this);\n  }\n\n  public componentDidMount() {\n    Notification.requestPermission();\n    axios({\n      method: 'post',\n      url: '/login',\n      params: {},\n    })\n      .then((result) => {\n        const { data } = result;\n        const {\n          id,\n          avatar_url,\n          nickname,\n          email,\n          phone,\n          is_mentor,\n          tags,\n        } = data;\n        this.handleSignIn({\n          id,\n          nickname,\n          email,\n          phone,\n          avatar_url,\n          is_mentor,\n          tags,\n        });\n      })\n      .catch((err) => console.log(err))\n      .finally(() => this.finishLoading());\n  }\n\n  public componentWillUnmount() {\n    console.log('componentWillUnmount');\n    const { user } = this.state;\n\n    if (user) {\n      const channels: string[] = [];\n      const baseChannel = `user-${(user as IUser).id}`;\n      if (user.is_mentor) {\n        const mentorChannel = `${baseChannel}-mentor`;\n        channels.push(mentorChannel);\n      }\n      const clientChannel = `${baseChannel}-client`;\n      channels.push(clientChannel);\n      this.pubNub.unsubscribe({\n        channels,\n      });\n    }\n  }\n\n  public finishLoading = () => {\n    this.setState({ loading: false });\n  };\n\n  public navBarHandleClick = (event: any) => {\n    this.setState({ navBarAnchorEl: event.currentTarget });\n  };\n\n  public navBarHandleClose = (callback?: () => void) => {\n    this.setState({ navBarAnchorEl: undefined }, callback);\n  };\n\n  public handleSignIn = (user: IUser) => {\n    const { location, history } = this.props;\n    if (!user.avatar_url || user.avatar_url === '') {\n      user.avatar_url =\n        'https://www.wittenberg.edu/sites/default/files/2017-11/nouser_0.jpg';\n    }\n    this.setState({ user }, () => {\n      this.pubNubSub();\n      this.getUserData(() => {\n        if (\n          location.pathname === '/login' ||\n          location.pathname === '/register'\n        ) {\n          history.push('/');\n        }\n      });\n    });\n  };\n\n  public getUserData = (callback: () => void) => {\n    const { user } = this.state;\n    if (user) {\n      getQuestionsByUserId(user.id, (questions) => {\n        this.setQuestions(questions);\n      });\n      if (user.is_mentor) {\n        getAnswersByUserId(user.id, (answers) => {\n          this.setAnswers(answers);\n        });\n      }\n    }\n    this.setState({ loading: false });\n    console.log('[getUserData] callback');\n    callback();\n  };\n\n  public setQuestions = (questions: IQuestion[]) => {\n    this.setState({ questions });\n  };\n\n  public addQuestion = (question: IQuestion) => {\n    const newQuestions = [...this.state.questions, question];\n    this.setState({ questions: newQuestions });\n  };\n\n  public setAnswers = (answers: IAnswer[]) => {\n    this.setState({ answers });\n  };\n\n  public pubNubSub = () => {\n    const { user } = this.state;\n\n    if (user) {\n      const channels: string[] = [];\n      const baseChannel = `user-${(user as IUser).id}`;\n      const mentorChannel = `${baseChannel}-mentor`;\n      if (user.is_mentor) {\n        channels.push(mentorChannel);\n      }\n      const clientChannel = `${baseChannel}-client`;\n      channels.push(clientChannel);\n      this.pubNub.subscribe({\n        channels,\n      });\n\n      // @ts-ignore\n      this.pubNub.getMessage(clientChannel, (msg: any) => {\n        this.handlePubNubMsgAsClient(msg);\n      });\n\n      if (user.is_mentor) {\n        // @ts-ignore\n        this.pubNub.getMessage(mentorChannel, (msg: any) => {\n          this.handlePubNubMsgAsMentor(msg);\n        });\n      }\n    }\n  };\n\n  public handlePubNubMsgAsClient = (msg: any) => {\n    if (Notification.permission === 'granted') {\n      const placeholder = new Notification('test');\n      console.log(placeholder);\n    }\n    console.log('[handlePubNubMsgAsClient]');\n    const { location } = this.props;\n    const { message } = msg;\n    const { status, question_id } = message;\n    if (Object.keys(AnswerStatusTypes).includes(status)) {\n      const text =\n        'If you are getting this message, please contact support. Client channels should not receive updates about answer statuses.';\n      this.setState({\n        snackbarQuestionId: question_id,\n        snackbarOpen: true,\n        snackbarText: text,\n      });\n    } else {\n      const questionStatusText: { [key in ResultStatusTypes]: string } = {\n        NOT_SUBMITTED: 'This should never show up!',\n        SUBMITTED: 'Your question has been submitted. Should never show up!',\n        ACCEPTED:\n          'Your question has been accepted by a mentor. Awaiting answer...',\n        ANSWERED:\n          'Your question has been answered by a mentor. Please accept or reject the answer.',\n        RESOLVED: 'Your question has been resolved successfully.',\n      };\n\n      this.setState({\n        snackbarQuestionId: question_id,\n        snackbarOpen: true,\n        snackbarText: questionStatusText[status],\n      });\n\n      if (location.pathname === `/results/${question_id}`) {\n        window.location.reload();\n      }\n    }\n  };\n\n  public handlePubNubMsgAsMentor = (msg: any) => {\n    if (Notification.permission === 'granted') {\n      const placeholder = new Notification('test');\n      console.log(placeholder);\n    }\n    console.log('[handlePubNubMsgAsMentor]');\n    const { message } = msg;\n    const { status, question_id } = message;\n\n    if (Object.keys(AnswerStatusTypes).includes(status)) {\n      const text =\n        status === AnswerStatusTypes.PASSED\n          ? 'One of your answers has been declined.'\n          : 'One of your answers has been accepted.';\n      console.log(status, AnswerStatusTypes.PASSED);\n      this.setState({\n        snackbarQuestionId: question_id,\n        snackbarOpen: true,\n        snackbarText: text,\n      });\n    } else {\n      const questionStatusText: { [key in ResultStatusTypes]: string } = {\n        NOT_SUBMITTED: 'This should never show up!',\n        SUBMITTED: 'Your question has been submitted. Should never show up!',\n        ACCEPTED: 'You have been assigned to a question. Good luck!',\n        ANSWERED:\n          \"You have submitted your answer to a question. Probably don't need to show this.\",\n        RESOLVED:\n          'One of your questions has been accepted. This is from the question side, can probably remove',\n      };\n      this.setState({\n        snackbarQuestionId: question_id,\n        snackbarOpen: true,\n        snackbarText: questionStatusText[status],\n      });\n    }\n  };\n\n  public handleSignOut = () => {\n    axios({\n      method: 'post',\n      url: '/logout',\n    })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        this.setState({ user: null }, () => this.props.history.push('/'));\n      });\n  };\n\n  public editUser = (newUser: IUser) => {\n    this.setState({ user: newUser });\n  };\n\n  public handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  public render() {\n    const {\n      answers,\n      navBarAnchorEl,\n      loading,\n      snackbarOpen,\n      snackbarQuestionId,\n      snackbarText,\n      questions,\n      user,\n    } = this.state;\n    const {\n      classes,\n      location,\n      setTimeZone,\n      toggleTheme,\n      userSettings,\n    } = this.props;\n    const { themeType } = userSettings;\n    const isTransparent = location.pathname === '/';\n    return (\n      <div className={classes.root}>\n        {loading ? (\n          <div className={classes.loadingContainer}>\n            <CircularProgress className={classes.loading} size={96} />\n          </div>\n        ) : (\n          <>\n            <NavBar\n              isTransparent={isTransparent}\n              toggleTheme={toggleTheme}\n              theme={themeType}\n            >\n              {user ? (\n                (user as IUser).is_mentor ? (\n                  <>\n                    <NavBarMentorStatus />\n                    <NavBarListAnswers unread={0} />\n                    <NavBarListQuestions\n                      unread={questions.filter((q) => q.is_dirty).length}\n                    />\n                  </>\n                ) : (\n                  <>\n                    <NavBarListQuestions\n                      unread={questions.filter((q) => q.is_dirty).length}\n                    />\n                    <NavBarMentorSignUp />\n                  </>\n                )\n              ) : null}\n              <NavBarAccount\n                anchorEl={navBarAnchorEl}\n                handleClick={this.navBarHandleClick}\n                handleClose={this.navBarHandleClose}\n                handleSignOut={this.handleSignOut}\n                isTransparent={isTransparent}\n                theme={themeType}\n                user={user}\n              />\n            </NavBar>\n            <MainContent\n              user={user}\n              userSettings={userSettings}\n              handleSignIn={this.handleSignIn}\n              setTimeZone={setTimeZone}\n              toggleTheme={toggleTheme}\n              editUser={this.editUser}\n              questions={questions}\n              answers={answers}\n              addQuestion={this.addQuestion}\n              setQuestions={this.setQuestions}\n              setAnswers={this.setAnswers}\n            />\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n              open={snackbarOpen}\n              autoHideDuration={6000}\n              onClose={this.handleSnackbarClose}\n            >\n              <SnackbarContent\n                className={classes.snackbarContent}\n                message={\n                  <span\n                    id=\"client-snackbar\"\n                    className={classes.snackbarMessage}\n                  >\n                    🐚 {snackbarText}\n                  </span>\n                }\n                action={[\n                  <Link\n                    key={snackbarQuestionId}\n                    to={`/results/${snackbarQuestionId}`}\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <Button color=\"primary\" variant=\"text\" size=\"small\">\n                      Go To Question\n                    </Button>\n                  </Link>,\n                  <IconButton\n                    key=\"close\"\n                    color=\"inherit\"\n                    onClick={this.handleSnackbarClose}\n                  >\n                    <Close />\n                  </IconButton>,\n                ]}\n              />\n            </Snackbar>\n            <FooterContainer theme={themeType} toggleTheme={toggleTheme} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(App));\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport pink from '@material-ui/core/colors/pink';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeTypes } from '../components/AppContainer/AppContainer';\n\nconst mainTheme = (type: ThemeTypes) => {\n  const typeString = type === ThemeTypes.LIGHT ? 'light' : 'dark';\n  const theme = createMuiTheme({\n    palette: {\n      type: typeString,\n      primary: {\n        main: purple[300],\n      },\n      secondary: pink,\n      error: red,\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      useNextVariants: true,\n    },\n  });\n  return theme;\n};\n\nexport { mainTheme, ThemeTypes };\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport AppContainer from './components/AppContainer/AppContainer';\nimport { HashRouter } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\n// import { whyDidYouUpdate } from 'why-did-you-update';\n\n// if (process.env.NODE_ENV !== 'production') {\n//   whyDidYouUpdate(React);\n// }\n\naxios.defaults.baseURL = process.env.REACT_APP_BACKEND_BASE_URL;\n// axios.defaults.headers.common.Authorization = 'AUTH TOKEN';\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\naxios.defaults.withCredentials = true;\n\naxios.interceptors.request.use(\n  (req) => {\n    console.log(`[Request Success]`);\n    console.log(req);\n    return req;\n  },\n  (err) => {\n    console.log(`[Request Error]`);\n    console.log(err);\n    return Promise.reject(err);\n  }\n);\n\naxios.interceptors.response.use(\n  (res) => {\n    console.log(`[Response Success]`);\n    console.log(res);\n    return res;\n  },\n  (err) => {\n    console.log(`[Response Error]`);\n    console.log(err);\n    return Promise.reject(err);\n  }\n);\n\nconst devApp = (\n  <HashRouter>\n    <AppContainer />\n  </HashRouter>\n);\n\nReactDOM.render(devApp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}